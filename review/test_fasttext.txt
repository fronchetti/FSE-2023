__label__sc git branch -D my-fix-branch
__label__dc 3.  Edit test/specs/components/dictionaries/[dictID]/request.mock.ts. It will intercept requests and return the downloaded fixtures.
__label__dc - Field names: Non-public, non-static fields start with m.
__label__sc Developer's Certificate of Origin 1.1
__label__no If you are familiar with Chef and know the component that is causing you a problem, you can file an issue in the corresponding GitHub project. All of our Open Source Software can be found in our Chef GitHub organization. All projects include GitHub issue templates to help gather information needed for a thorough review.
__label__dc The username to accompany the installation token password is x-access-token.
__label__no Support is not offered for this library, and the likelihood that the maintainers will respond is very low. If you need help, please use stackoverflow, or the wordpress.org plugin forums.
__label__no - Community Forums
__label__no Change-type: patchSigned-off-by: Chris Crocker-White <chriscw@balena.io>
__label__sc Hello! In order for us (YANDEX LLC) to accept patches and other contributions from you, you will have to adopt our Yandex Contributor License Agreement (the CLA
__label__no Contributing to Bitcoin Core
__label__cf - Run the AngularJS unit and E2E test suites, and ensure that all testspass. It is generally sufficient to run the tests only on Chrome, as our continuous integration test willrun the tests on additional browsers.
__label__bw Setup
__label__dc Code should be formatted using clang-format. By configuring Conky with cmake -DCHECK_CODE_QUALITY=ON, you will be able to run make clang-format to automatically format code. If code in your PR is not formatted according to .clang-format, the checks will not pass.
__label__no How to
__label__no Internally, the file contains files (also known as parts) that represent different entities in the Excel framework, for example workbook.xml and table1.xml. The OpenXML specification documents all these parts and their contents.
__label__dc // libcaf_example/caf/example/my_class.hpp
__label__no gem 'squib', git: 'git://github.com/andymeneely/squib', branch: 'dev'
__label__bw Building
__label__cf 4.  Implement the new feature(s). Add unit test if needed.One feature per PR is ideal for review, but linked features can be part of the same PR.
__label__bw or
__label__sc By contributing to Lucida, you agree that your contribution will be licensedunder its BSD license.
__label__bw 1.  Obtain a fresh clone from "master".
__label__sc The project requires that all the code is licensed under the MIT license (though that may change).
__label__no - Explain your purpose clearly in tags(see Useful Tags), title, or content.
__label__sc Somebody will shortly review your pull request and if everything is good, it will bemerged into the master branch. Eventually the gem will be published with your changes.
__label__sc Some CLI tests expect the program ex to be a symbolic link to vim.
__label__no How to Contribute
__label__no - StackOverflow: We suspect your issue is really a help request, or could be answered by the community.  Please ask your question on StackOverflow.  If you determine that is an actual issue, please explain why.
__label__sc - fix: A bug fix
__label__no If you get errors running po2json, you might be running the Ubuntu package with the samename, rather than the NodeJS package (they have a different format for the arguments). Ifthere is a conflict, you may need to update your PATH environment variable or fully qualifythe executable path (e.g. /usr/local/bin/po2json instead of po2json).If you get a lot of [null,***] in messages.json, just delete all the null,.For example, "year":["?"] is correct while "year":[null,"?"]is incorrect.
__label__sc git format-patch --signoff origin/criu-dev
__label__cf Push your updated changes to update the pull request
__label__dc - Any exceptions which are raised?
__label__bw Run psake.cmd from the command line. This builds and runs tests.
__label__sc master always represents the latest release since that is the way homeshickupdates itself. The development branch is where work is done for the nextrelease version of homeshick.
__label__sc - style: Changes that do not affect the meaning of the code (white-space, formatting, missingsemi-colons, etc)
__label__sc CRIU tests are run for each series sent to the mailing list. If you get a message from our patchwork that patches failed to pass the tests, you have to investigate what is wrong.
__label__sc Branches
__label__sc Rebasing Changes
__label__dc Main build scripts
__label__no Please also check our FAQ.
__label__no - Use a clear and descriptive title for the issue to identify the suggestion.
__label__no - Feature Requests
__label__sc - Run composer install --dev in the root directory to install required testing packages.
__label__no - Ensure your issue has not already been reported. It may already be fixed!
__label__sc Subject
__label__bw - Install project dependencies: yarn
__label__sc test/run
__label__sc NOTE: You must have a GITHUB_TOKEN environment variable available. You can create a GitHub access token with the "repo" access here.
__label__sc - To contribute a feature you must create a fork of Avored and set up your git and development environment.Once done, create a new branch from dev and name it relevant to the feature's purpose.Make sure your commit messages are relevant and descriptive. When ready to submit for review, make a Pull Request detailing your feature's functionality.Ensure that your Pull Requests base fork is avored/laravel-ecommerce, the base branch is dev, the head fork is your repository, and the base branch is your feature branch.
__label__no What should I Contribute?
__label__dc If you want to run the VSCode debugger on unit tests of the CDK projectitself, do the following:
__label__cf - Using Pull Requests
__label__sc - service-worker
__label__no Contribution guidelines
__label__sc 1.  Your code must be tested.
__label__no - Markdown formatting as appropriate to make the request easier toread.
__label__sc If your proposed changes only affect documentation, include the following on anew line in each of your commit messages:
__label__cf Before writing any code, please file an issue stating the problem you want to solve or the feature you want to implement. This allows us to give you feedback before you spend any time writing code. There may be a known limitation that can't be addressed, or a bug that has already been fixed in a different way. The issue allows us to communicate and figure out if it's worth your time to write a bunch of code for the project.
__label__sc - Approach (N)ACK, meaning Concept ACK, but "I do (not) agree with theapproach of this change".
__label__sc make serve-docs
__label__cf - Fork the repository on GitHub
__label__no Contributors
__label__no 4.  If you're unable to fix this bug yourself, but can point to why it is occuring, please send that information along (line# or commit)
__label__no - Check the common issues and solution on wiki
__label__sc 4.  Within your fork, create a new branch based on the issue (e.g. Issue #123) you're addressing - git checkout -b "group-token/short-token-[branch-name]" or git checkout -b "short-token/[branch-name]"
__label__dc - Snippets must have all their frontmatter sections (title, tags etc.) filled.
__label__bw - x.x.x-release : the stable release version.
__label__no The docs are published from checked in markdown files to the Imgbot website to view in a browser. Alternatively, the docs can be browsed and edited within GitHub.
__label__no If you have a question be sure to readthe documentation first.Often you will find the answer to it there.
__label__dc - Null-conditional operators
__label__sc - docs: changes into documentation, e.g. add usage example for Button.
__label__no - Any details about your local setup that might be helpful in troubleshooting.
__label__sc - AlgorithmsTests: Package hosting unit tests for the Algorithms project.
__label__bw You can also teardown the databases with:
__label__no We're always looking for more opinions on discussions in the issue tracker. It's a good opportunity to influence the future direction of AVA.
__label__no ```
__label__no - Please make sure that your bug was not already reported by searching the issues.
__label__dc If you're familiar with open source software, you probably know how important coding guidelines and standards are. Most common are (in order of appearance) PEAR, Zend(Framework) and PSR-1/PSR-2.
__label__no If the language that you are interested in translating is not already listed, create a new account on Crowdin, join the project, and contact the project owner (https://crowdin.com/profile/kspearrin).
__label__no - fleet-supervisor
__label__dc BUNDLE_GEMFILE=gemfiles/rails_6.0.rb bundle exec rubocop
__label__no Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.
__label__sc - style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
__label__sc - Squash commits when possible, for example, when committing review changes.
__label__sc For non-trivial contributions, pull requests should sit for at least 36 hours toensure that contributors in other timezones have time to review. Considerationshould also be given to weekends and other holiday periods to ensure activecommitters all have reasonable time to become involved in the discussion andreview process if they wish.
__label__sc - Create your patch, including appropriate test cases.
__label__cf As a rule of thumb, everything that only modifies src/qt is a GUI-only pullrequest. However:
__label__dc type ComponentState = {entryText: state;isComposing: boolean;};
__label__dc Code style
__label__bw The code for Angular UI-Router is split into two source repositories:
__label__ct Finding contributions to work on
__label__sc 2.  namespace is put in parenthesis after label and is optional.
__label__no Versioning
__label__no Rejected
__label__no - Give guidance on how to reproduce bug
__label__bw Install and build:
__label__sc - master is the latest (pre-)release branch.
__label__sc We achieve this by splitting proposals into two kinds:
__label__cf 2.  Clone the repository from your account with:
__label__sc [{"type": "feature|enhancement|bugfix","category": "Target of Update","description": "English language simple description of your update."}]
__label__no - Showing empathy towards other community members
__label__no Please note, this project is mature and stable with thousands of projects depending upon it.
__label__dc Connecting the VS Code Debugger
__label__bw $ scripts/clean-stale-files.sh
__label__sc - Detailed description. The body of the PR must contain a detailed description of what changes are being introduced, and most importantly, why this PR should be merged.
__label__no Stack Overflow
__label__no Contributions are welcome and will be fully credited.
__label__sc 5. Submission of Contributions. Unless You explicitly state otherwise,any Contribution intentionally submitted for inclusion in the Workby You to the Licensor shall be under the terms and conditions ofthis License, without any additional terms or conditions.Notwithstanding the above, nothing herein shall supersede or modifythe terms of any separate license agreement you may have executedwith Licensor regarding such Contributions.
__label__bw - Node.js >= 10.13.0
__label__no - New hardware / backend support
__label__bw Compression workflow
__label__bw Get the Sources
__label__no Examples of behavior that contributes to creating a positive environmentinclude:
__label__dc - Don't stack unrelated blocks of code, leave blank lines for better readability.
__label__sc - governance.md describes our governance model(how we decide things)
__label__sc Unit test methods should be named in a sentence style, separated by underscores, that describes inEnglish what the test is testing, e.g.
__label__no - If you think you have found a bug, or have a new feature idea, please start by making sure it hasn't already been reported. You can search through existing issues to see if there is a similar one reported. Include closed issues as it may have been closed with a solution.
__label__sc Changelog
__label__dc @end
__label__ct - Open issues for things you want to see added, modified, discuss ideas or help out with existing issues.
__label__tc Code of Conduct
__label__bw - on subsequent runs you can also bypass dependencies building and useyarn start:fast
__label__sc - bugfix: used for fixing bugs.
__label__no - Whitebox Testing - tests where you access the internals of the application.
__label__sc To publish a release:
__label__ct If you prefer C over Java, you may also take a look at the tomcat-native andTomcat Connectors products in Bugzilla.
__label__dc Regarding code style like indentation and whitespace, follow the conventions you see used in the source already. In general most of the C# coding guidelines from Microsoft are followed. This project prefers type inference with var to explicitly stating (redundant) information.
__label__sc 5.  Run tests with yarn test (for all packages) or yarn test:core (for only changes to core XState)
__label__dc - Include example code if possible.
__label__no We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it.In order to reproduce bugs we might ask you to provide a minimal reproduction scenario in a fork of this project onGitHub. Having a live, reproducible scenario gives us wealth of important information without going back & forth to youwith additional questions like:
__label__no Submitting an Issue
__label__sc The subject contains succinct description of the change:
__label__sc - no dot (.) at the end
__label__no If the problem arises during a complex operation (e.g. large script using pycaffe, long network prototxt), please reduce the example to the minimal size that still causes the error.Also, minimize influence of external modules, data etc. - this way it will be easier for others to understand and reproduce your issue, and eventually help you.Sometimes you will find the root cause yourself in the process.
__label__no Thanks for your interest in contributing to vim-anywhere! So much has been addedto vim-anywhere over the years by contributors like you. If you're interestedin making a pull request, please review these guidelines.
__label__sc Testing
__label__ct - UX: These issues relate to how the site works, or more holistically, how the site feels to the end user, and will normally be related to the front-end of the website. These issues might typically relate to confusion stemming from navigation, form elements, input validation, or breaks in user flows.
__label__no - Describe the suggested feature in as much detail as possible
__label__sc Submit your contribution
__label__sc Running The Tests
__label__bw Setup Local Environment for Development
__label__no - This guide was heavily written by BATS-core member @mblandfor go-script-bash, tweaked for BATS-core
__label__cf An ADR is an Architectural Decision Record.  This allows consensus on the direction forward and also serves as a record of the change and motivation. Read more here.
__label__sc I discovered GitHub doesn't offer a default CLA (Copyright and Licensing Agreement), so I adopted the one used by BearSSL, meaning:
__label__dc // Instead of:class ClassName {
__label__sc The subject contains succinct description of the change:
__label__sc It may take a while for committers to review. Please be patient during thistime as all committers are volunteers on the project. If a significant amountof time has lapsed since your submission, such as a couple of months, feel freeto either update your BZ, PR, or email the dev list with a message to bump yourissue. Sometimes things get lost in all the work and we need a reminder :smile:
__label__no - Take care of your ticket. When you spend time to report a ticket with care we'll enjoy fixing it for you.
__label__cf - Test your changes as thoroughly as possible.
__label__dc Development
__label__dc - https://apache.org/legal/resolved.html#stackoverflow
__label__no Prerequisites
__label__sc - fix: A bug fix
__label__sc git commit -m "#21 Fix this or that"
__label__dc - Follow AOSP Code Style for rest of android related code style.
__label__cf 2.  Create your own fork of the code from master
__label__no git checkout -b changes-to-docs
__label__bw To get started with Aruba, you only need Bundler.
__label__no When opening a bug report, please include the output of the cap <stage> doctor task, e.g.:
__label__no External Dependencies
__label__no We actively welcome your pull requests.
__label__no - Raimond Garc
__label__no There are a few guidelines that we need contributors to follow so that we have achance of keeping on top of things.
__label__no - The version of our code being used
__label__sc - Detail 1
__label__bw If the version of Ruby has changed (in the Gemfile),use the 'Ruby itself can be updated' instructions.If gems have been added or their versions changed, run"bundle install" to install the new ones.
__label__dc - Remove unnecessary semicolon
__label__cf Pull requests are merged via Github, you can find the documentation about how to fork a repository and start contributing to ChefSpec here https://help.github.com/articles/fork-a-repo.
__label__dc - The format of the inputs of the function?
__label__no - Pull Request Guidelines
__label__bw Usually all Maven builds are to be run with skipped tests:
__label__no - A user subscribes to a repo
__label__sc - development represents the current development state of the codebase.
__label__sc - release: Release version commit
__label__no - Please apply a propper label to an issue.
__label__sc If your contribution involves changes to any docstrings, you should make sure the API documentation can build without errors. For that, just run
__label__no - Compile the bundle with yarn run build-release
__label__cf - Do not change the Rakefile, gem version number in version.rb, orCHANGELOG.md.(If you want to have your own version, that is fine but bump version in aseparate commit, so that we can ignore that commit when we merge your change.)
__label__no - Follow semantic versioning. Look at: http://semver.org
__label__sc If you are contributing a new feature:
__label__dc - Each class should be saved alone in a header + source file couple. Exceptionally, very small classes that are used by a single class may be saved along with this class. The header + source filename should be the same as the main class.
__label__sc conan remove '*' # optional, I like to be cleanconan create . cliutils/stableconan upload "*" -r cli11 --all
__label__bw Log in to your machine, clone the git repo and run the following lines:
__label__no Information to include
__label__sc If you are using command-line you can do the following:
__label__no This project aims to be governed in a transparent, accessible way for the benefit of the community. All participation in this project is open and not bound to corporate affiliation. Participants are all bound to the Code of Conduct.
__label__dc The fixers for both tslint and prettier will be applied when you commit, and on a push your code will be verifiedthat it compiles.
__label__sc To run the unit tests, first ensure that you have followed the steps above in order to install all dependencies and successfully build the library. Once you have done that, proceed with these additional steps:
__label__dc /// Does something else but is guaranteed to never throw.void do_something_else() noexcept;
__label__tc - Use the #electron channel for questions about Electron
__label__dc The attic-genericeval branch includes an unpacker that calls eval on whatever source is passed to it.This file may be useful when working with source that unpacks itself when eval is called on it, but is also very unsafe.We have isolated it on this separate branch to keep it from hurting the other children.
__label__sc - At no time should an upstream package tracked here exceed the version upstream.
__label__dc - yarn lint: lint files with eslint and prettier.
__label__no If you are interested in helping translate the Bitwarden web vault into another language (or make a translation correction), please register an account at Crowdin and join our project here: https://crowdin.com/project/bitwarden-web
__label__sc - When in doubt, open a PR with too many commits. Bash-it is a learning projectfor everyone involved. Showing your work provides a great history for folksto learn what works and what didn't.
__label__no - api
__label__sc GitHub
__label__sc git config --global user.name "Your Name"git config --global user.email "your.email.address@example.com"
__label__sc - Finally feel free to share your awesome hacks with others and opening a PR
__label__sc - :apple: :apple: when fixing something on macOS
__label__sc - Optional If the PR fixes an existing Github issue, you may add the link to the corresponding issue in the PR.
__label__sc Making changes
__label__no nuget.exe sources add -Name "Azure SDK for Net Dev Feed" -Source "https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-net/nuget/v3/index.json"
__label__bw Use npm to install the development dependencies for each repository.
__label__cf - Prefix the title with "[RFC]"
__label__no *
__label__bw And change the configuration to suit your environment. If you are not using any particular adapter you can disable it in the phpunit.xml file.
__label__cf - If you are adding a new feature:
__label__sc If your PR contains multiple commits you might be asked to rebase your PR branch on top of the latest master and squash your commits before merging. This can be achieved with the following steps, assuming that the current branch is that to be merged to master in your local file system:
__label__sc After the 50 character summary and a blank line, you can include a body if necessary. Note that the 50 character summary does not end with any punctuation. Describe your changes in the imperative mood, e.g., "Add foo to bar", "Update foo component for bar", "Fix race condition for foo".
__label__sc - feature: used for developing a new feature.
__label__no Feature requests are welcome. But take a moment to find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible.
__label__sc Pull Request Guidelines
__label__no A contributor should be able to begin work on your bug without asking too manyfollowup questions. If you include the following information, your bug will beserviced more quickly:
__label__no This Code of Conduct applies both within project spaces and in public spaceswhen an individual is representing the project or its community. Examples ofrepresenting a project or community include using an official project e-mailaddress, posting via an official social media account, or acting as an appointedrepresentative at an online or offline event. Representation of a project may befurther defined and clarified by project maintainers.
__label__sc Note: There is a commit hook that will run the tests prior to committing. Please make sure if you are going to provide a pull request to be sure you include unit tests with your functionality and that all tests pass.
__label__no Version
__label__cf 5.  We'll then review your pull request and give any necessary feedback, this could be:
__label__bw Using Docker Containers
__label__sc When verifying test results, please try to use the assert functions found in these libraries.
__label__cf 3)  Make your changes in a new git branch:
__label__dc - for (int x... (C++11 foreach syntax is fine, though)
__label__no Documentation can be contributed to
__label__bw Docker for Mac users: You need to add /captain to shared paths.To do so, click on the Docker icon -> Preferences -> File Sharing and add /captain
__label__sc git push origin --delete my-fix-branch
__label__sc - test: Adding missing tests
__label__no - Peter Cucka, DreamWorks
__label__no Questions
__label__no Single Service from Visual Studio
__label__no * "License"); you may not use this file except in compliance
__label__bw Install dependencies
__label__no Thanks for your interest in contributing to Colmena.
__label__bw - dev : daily development branch. The daily development branch, the newly submitted code can pull requests to this branch.
__label__cf - Read the CVXPY source and enhance the documentation, or address TODOs
__label__sc - docs: Documentation only changes
__label__sc 11. Add yourself to the contributor's list in the README!
__label__sc git branch -D my-fix-branch
__label__cf GitHub Workflow
__label__no Hello and welcome! Please look over this document before opening an issue or submitting a pull request to Capistrano.
__label__bw Then enable extensions PeerTube needs:
__label__no - If there isn't an existing issue there, please file an issue. If possible, used one of the suggested issue types when creating a new issue (like a bug report of feature request). These issue types have their own template and required information. In general, the ideal report includes:
__label__bw 1.  Find the RPM URL for your repo at yum.postgresql.org
__label__no Table Of Contents
__label__cf Becoming a committer
__label__sc 0. New features should have a test or
__label__cf The PerformanceTests folder contains various projects that contain performance tests that compare various versions of YamlDotNet to detect the impact of new features.
__label__no // bad, the scope is not indented, no space following the commaif ( Broodwar->canMake(UnitTypes::Terran_Marine,builder) )reservedMinerals = -UnitTypes::Terran_Marine.mineralPrice();
__label__dc - Checked code_style.md for information on code style
__label__no If you would like to chat about the question in real-time, you can reach out via our gitter channel.
__label__no Joining the Devilbox GitHub Organization
__label__no Folders
__label__sc This section serves to help you understand what makes a good commit.
__label__no Long Term Support Branches
__label__no You are joining a team of dedicated volunteers that are building an extension library to the game framework MonoGame.
__label__dc PHP Style
__label__no Certbot Contributing Guide
__label__dc - Set properties to match the `checkstyle/checkstyle.properties` file in the repo.
__label__no - review: Issue has a PR associated that solves it (remember to use the GitHub keywords "closes #IssueNumber", "fixes #IssueNumber"...in the description of the PR).
__label__tc Harrassment or rudeness of any kind will not be tolerated, period. Forspecifics, see the CODE_OF_CONDUCT file.
__label__sc development is where we stage work for the next release. Pull requests should be directed to this branch.
__label__cf - Snippets should solve real-world problems, no matter how simple and should be abstract enough to be applied to different scenarios.
__label__bw 2.  Install dependencies:
__label__dc Instructions for developing with AzuraCast locally are available here.
__label__tc - Public or private harassment
__label__sc - Send a coherent commit history, making sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting.
__label__ct This file provides a few pointers on how to contribute to dotdropand where to find information. For any question, feel free to open an issue.
__label__bw This means that your local clone can only track changes from your fork, but not from the main repo, and so you won't be able to keep your fork up-to-date with the main repo over time. Therefor you'll need to add another "remote" to your clone that points to https://github.com/allenai/allennlp.git. To do this, run the following:
__label__no Chart Options
__label__no Code Review of Dependency Updates
__label__dc - Template parameter names should be written in CamelCase.
__label__no - Logs and backtraces
__label__sc - Commit message should describe motivation. Think about your code reviewers and what information they need inorder to understand what you did. If it's a big commit (hopefully not), try to provide some good entry points soit will be easier to follow.
__label__dc - The code should be written in a portable generic way, that will benefit the whole community, and not only your own needs.
__label__no BREAKING CHANGE: `CREATE * AS SELECT` queries now create sink topics with partitionand replica count equal to those of the source, rather than using values from the properties`ksql.sink.partitions` and `ksql.sink.replicas`. These properties are now deprecated.
__label__no - What actually happens
__label__no - make docclean
__label__dc - Java source: { at end of line, 4 space indents
__label__no Attempting to recreate the bug will lead to a few scenarios:
__label__no Gotchas
__label__no We'd love to accept your patches and contributions to this project. There arejust a few small guidelines you need to follow.
__label__sc - In your project run yarn link bootstrap-vue
__label__no Help us keep Angular open and inclusive.Please read and follow our Code of Conduct.
__label__no - Protocol
__label__no - The version of App you are using
__label__no A new hardware port will be considered for inclusion in mainline Contikiif it satisfies the following rules:
__label__no Make sure that you have:
__label__tc Our Responsibilities
__label__dc - Prefer software thatappears to be currently maintained (e.g., has recent updates),has more than one developer, and appears to be applying good practices
__label__sc Tip: Keep your master branch pointing at the original repository and makepull requests from branches on your fork. To do this, run:
__label__sc - master branch
__label__sc Developer Certificate of Origin (DCO)
__label__no Do you have a new state-of-the-art model?
__label__sc - Make the required updates.
__label__sc - Push the changes to your GitHub repository (this will update your Pull Request).
__label__no - Steps you took to exercise the bug
__label__sc - Your pull request includes tests. The runtime development team uses test driven development to help ensure highquality code and excellent test coverage.
__label__no You can then consume packages from this package source, remember to check the Include prerelease box in Visual Studio when searching for the packages.
__label__no 8.  State the expected behavior.
__label__dc Attempt to follow the SOLID principles. In particular, try to give each type a single responsibility, and favor composition to combine features.
__label__tc Code of Conduct
__label__sc - no dot (.) at the end
__label__sc - Title should be lowercase.
__label__cf - As a general guideline, new features should usually be added to all Ceph versions and distros.
__label__sc Most changes should have an accompanying entry in the CHANGELOG, unless theyare minor documentation / config changes. This is incredibly important so that our users cansee the affect of new versions without having to trawl through the commits.
__label__dc - variable declarations anywhere in a function (keep them all at the top)
__label__tc For specific proposals, please provide them aspull requestsorissuesvia ourGitHub site.For general discussion, feel free to use thecii-badges mailing list.
__label__sc Running Tests
__label__no Submitting an Issue
__label__dc - Function parameters that are coordinates should be passed using an appropriate storage container, and not as three separate arguments.
__label__no - which version of Ruby you're using.
__label__sc - refactor: A code change that neither fixes a bug nor adds a feature
__label__dc - Follow the general code style of the rest of the project (seebelow). Run bin/lint to verify that the linter is happy.
__label__sc Automated Tests
__label__no Help us make UI-Router better! If you think you might have found a bug, or some other weirdness, start by making sureit hasn't already been reported. You can search through existing issuesto see if someone's reported one similar to yours.
__label__tc - Focusing on what is best for the community
__label__sc - don't capitalize first letter
__label__no - do NOT shell out; this becomes very expensive when done frequently
__label__no - It is required that you clearly describe the steps necessary to reproduce the issue you are running into. Issues with no clear repro steps will not be triaged. If an issue labeled "need repro" receives no further input from the issue author for more than 5 days, it will be closed.
__label__no 1.  at the top of the file you should see first a standard CloudCompare header. You can change inside the plugin name (qDummy => qMyPlugin) and the copyright owner.
__label__ct There are many ways you can contribute to Boden. Here are some of them:
__label__cf When adding a new feature, thought must be given to the long term technical debtand maintenance that feature may require after inclusion. Before proposing a newfeature that will require maintenance, please consider if you are willing tomaintain it (including bug fixing). If features get orphaned with no maintainerin the future, they may be removed by the Repository Maintainer.
__label__cf - Create a feature or fix branch from the latest dev branch. git checkout -b feature/my-new-feature upstream/dev
__label__sc 2.  Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.
__label__sc 3.  Must be isolated. Avoid grouping many, unrelated changes in a single PR.
__label__no from cachelib.file import FileSystemCacheRESULTS_BACKEND = FileSystemCache('/tmp/sqllab')
__label__dc - cfg_aggregator.py: the higher level config parser
__label__no We would love for you to contribute to Angular Material and help make it ever better!As a contributor, here are the guidelines we would like you to follow:
__label__sc When adding features or making changes/fixes, please run our growing unit test suite to ensure that you did not break existing functionality.The test suite does not cover all aspects of Bash-it, but please run it anyway to verify that you did not introduce any regression issues.
__label__no - If you are reporting a crash, please include a full stack trace.
__label__no Guidelines for bug reports:
__label__no Reporting Issues is helpful, but an even better approach is to send a Pull Request, which is done by Forking the main repository and making a Commit to your own copy of the project. This will require you to use the version control system called Git.
__label__no On-boarding New generated code library
__label__no 1.  Specify the version number for vv. ( vv --version to get this.)
__label__no # root where project is clonedcd ~/brave-browser/git remote add bsclifton git@github.com:bsclifton/brave-browser.gitgit fetch bsclifton# root for the `brave-core` repocd src/bravegit remote add bsclifton git@github.com:bsclifton/brave-core.gitgit fetch bsclifton
__label__sc 1.  Ensure that you have completed our CLA Agreement forindividuals orcorporations.
__label__no If you propose a new feature, please be willing to implement at least some of the code that would be needed to complete the feature.
__label__no - Which version of Copay are you using? (Check Copay version on the side menu)
__label__bw npm install -g @30-seconds/integration-tools
__label__tc - Try to understand why we disagree.
__label__sc 2.  Set your name and email (these should match the information on your submittedCLA)
__label__sc The header is mandatory and the scope of the header is optional.
__label__sc - platform-webworker-dynamic
__label__sc - consensus for changes to consensus critical code
__label__no Please review our guide on how tosubmit a bug report. This page also has links to other resources to assistyou.
__label__no Our Pledge
__label__dc #include <iostream>
__label__tc This project follows Google's Open Source CommunityGuidelines.
__label__no Contributing to Gunicorn
__label__no - Thank you
__label__no DEVELOPING
__label__dc See this example PR.
__label__sc Tip:
__label__no """revisionHistory stores the previous CommentRevision's, with the most recentedit last."""revisionHistory: [CommentRevision!]!@auth(roles: [MODERATOR, ADMIN]userIDField: "author_id"permit: [SUSPENDED, BANNED, PENDING_DELETION])
__label__no This project follows semantic versioning. We release patch versions for bugfixes, minor versions for new features, and major versions for any breaking changes.
__label__tc Please be courteous and respectful. Remember: Matz is nice and so we are nice
__label__cf 5.  Build test versions of the images (make FLAVORS=<new release flavors> build).
__label__tc Code of conduct
__label__no - Bump the version numbers across the project
__label__sc The subject contains succinct description of the change:
__label__cf - develop
__label__sc - Add class A
__label__sc Once satisfied that your changes are good for MonoGame.Extended we will merge it.
__label__sc Running Tests
__label__no Useful links to help you with correctly formatting posts.
__label__no GENERAL THINGS TO KNOW:
__label__no - Translating
__label__no - Provide output captures (as text).
__label__cf - Before starting a large pull request, log an issue and outline the problem and a broad outline of your solution. The maintainers will discuss the issue with you and possibly propose some alternative approaches to align with the ClosedXML development conventions.
__label__dc However, return by value:
__label__sc - Push your branch to GitHub:
__label__no 3.  Isolate the problem — ideally create a reduced testcase and a live example using plunker.
__label__no Project maintainers who do not follow or enforce the Code of Conduct in goodfaith may face temporary or permanent repercussions as determined by othermembers of the project's leadership.
__label__sc - If working in the JavaScript implementation:
__label__cf 6.  Periodically rebase your changes
__label__sc - If you work for a company that wants to allow you to contribute your work,then you'll need to sign a corporateCLA.
__label__sc 1.  Fork to your own
__label__dc $ make build
__label__sc - Be able to get a quick overview of what happened to the project by glancing over the commit history.
__label__bw 3.  Link server-core package: yarn link inside packages/cubejs-server-core.
__label__bw Most of the time you will only want to run a task within a specific package; this can be done by providing the package name as a scope to the top level task.
__label__sc 2.  Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.
__label__sc It is advised to enable the githooks scripts prior to pushing your changes, for catching some of the issues as early as possible.
__label__no - Errors in the code generators. These are defined in build_tools.We gladly accept contributions to the generators.
__label__bw $ cd packages/@aws-cdk/aws-sns$ yarn build$ yarn compat
__label__no - Suggesting enhancements
__label__sc Revert
__label__sc <type>(<scope>): <subject><BLANK LINE><body><BLANK LINE><footer>
__label__no Code Review Checklist
__label__cf - Can my feature be used by multiple different applications?
__label__dc @interface name : parent<protocols> {// ivars}// properties
__label__no Client Packages
__label__dc The first thing to keep in mind if you want to modify the source code:checkout the master branch. It is the branch that we use todevelop new features and fix issues that are planned for the next bigrelease. See the INSTALL guide to know how to compile.
__label__sc Publishing a release
__label__no - Entirely function-based
__label__cf - Fork our repositories on GitHub
__label__no Contributing Code
__label__sc - docs: Documentation only changes
__label__no New providers are likely to be merged if they are based on OAuth 2.0
__label__no - Make sure node 10 is in your path
__label__no Otherwise, open a new GitHub issue.  Be sure to include a clear titleand description.  The description should include as much relevant information as possible.  The description shouldexplain how to reproduce the erroneous behavior as well as the behavior you expect to see.  Ideally you would include acode sample or an executable test case demonstrating the expected behavior.
__label__no - [ ] The dependency still supports the version of Node that the package requires.
__label__sc - Change relevant comments and documentation when behaviour of code changes.
__label__no Apache Cassandra doesn't use GitHub pull requests as part of the development process.In fact, this repository is a GitHub mirror of the official repo.
__label__no In Progress
__label__dc - Create a new GitHub application at https://github.com/settings/applications/new.
__label__sc $ git push origin <name-of-bugfix-or-feature>
__label__dc - Theme packages are split into two categories: UI and Syntax themes
__label__cf Tracker.Instance.AllowNonCompact = true;
__label__cf - Open a pull request to the main repository describing what issue you are addressing and following our coding conventions
__label__cf These are the features that have been requested so far. Even if any of them are assigned, feel free to offer your help:
__label__sc Write good commit messages
__label__sc If you would like to learn about when your code will be available in a release of Chef, read more about Chef Release Cycles.
__label__bw 6.  Select Existing Gradle Project and click Next
__label__no How to contribute
__label__no Changing criteria can have a much larger impact on participatingprojects than simply changing the supporting software, so we have specialrules about them. For those rules, seegovernance.md.
__label__no Some live tests may have additional steps for setting up live testing resources.See the CONTRIBUTING.md file for the service you wish to test for additionalinformation or instructions.
__label__no We want to reserve the GitHub Issues page for feature requests and bug reports.
__label__sc - Write tests.
__label__dc Please update only one or few components in each commit, instead of"everything at once".  This makes debugging problems much easier.In particular, if we find a problem later, we canuse "git bisect" to easily and quickly find the cause.
__label__dc Coding conventions
__label__dc Pay attention to security, and work with (not against) oursecurity hardening mechanisms.  In particular, put JavaScript and CSSin separate files - this makes it possible to have very strongContent Security Policy (CSP) rules, which in turn greatly reducesthe impact of a software defect.  Be sure to use prepared statements(including via Rails' ActiveRecord).Protect private information, in particular passwords and email addresses.Avoid mechanisms that could be used for tracking where possible(we do need to verify people are logged in for some operations),and ensure that third parties can't use interactions for tracking.When sending an email to an existing account, use the original accountemail not the claimed email address sent now; for why, seeHacking GitHub with Unicode's dotless 'i'.For more about security, see security.
__label__no Please keep in mind these points:
__label__sc - Check for unnecessary whitespace with git diff --check before committing.
__label__sc - Do not bundle commits that are unrelated to each other -- createseparate pull requests instead.
__label__sc If you have not submitted a pull request yet, or if you have not yet rebased your existing pull request, you can squash all your commits down to a single commit.  This makes life easier for the committers.  If your pull request on GitHub has more than one commit, you should do this.
__label__no Reporting Bugs
__label__sc Closes #234
__label__no If you would like to translate the app into another language or improve an existing translation, you can visit the Transifex project page. From there, you can either join a language team if it already exists or create a new language team.
__label__cf We welcome feedback with or without pull requests. If you have an idea for howto improve the project, great! All we ask is that you take the time to write aclear and concise explanation of what need you are trying to solve. If you havethoughts on how it can be solved, include those too!
__label__dc Traverse(new ObjectDescriptor(value.Value,underlyingType,value.Type,value.ScalarStyle),visitor,currentDepth);
__label__dc - Use version sniffing (version_compare),
__label__no Weex community respects all kinds of contributing, including but not limited to code, documentation, mailing list.
__label__cf 2.  Create topic branch
__label__no - Provide a short summary of what you are trying to do
__label__sc Test browser example locally
__label__dc - react
__label__no - For bugs that involves build setups, you can create a reproduction repository with steps in the README.
__label__cf - Fork the project.
__label__cf 4.  Implement the new feature(s). Add unit test if needed.One feature per PR is ideal for review, but linked features can be part of the same PR.
__label__bw - UI-Router for Angular 1 (@ui-router/angularjs on npm)
__label__sc - Any advice that can be helpful if someone needs to review this commit andunderstand.
__label__sc Below is an example of how you can use git to create a feature branch. First, make sure you've created a fork of aws/aws-cli. Then you can run these commands:
__label__tc Code of Conduct
__label__dc Coding standards
__label__no I accept bug reports for the Creative Cloud script, but please note that I can't do anything about most bugs. The Wine compatibility layer is used to run the Creative Cloud installer and all downloaded Adobe programs. If you have issues with getting certain programs to run, you should file a bug report with Wine.
__label__no - Note that since WinMerge reformats the XML, it does so in a temporary file. If you make changes to the contents of any of the 2 panes in WinMerge and save the file, it will not be saved back into the Excel file.
__label__sc Commit Message Format
__label__sc - Ensure contributions are unit tested and that all tests pass before submitting any pull-request.
__label__no Thank you to all the people who have already contributed to accounts-js!
__label__no ...but check for existing issues first!
__label__cf 1.  Have a Glitch example ready. Remix the base A-Frame Glitch to maintain consistency and formatting. Follow best practices.
__label__dc - XML source: 2 space indents
__label__sc Version Control Branches
__label__no - Step 2: Design (optional)
__label__sc - migrations: used for changes to the ng update migrations.
__label__no - Please make sure to finish your translation, if you start a new one!
__label__dc Any other SQL you can put directly in the main sql file, e.g.src/backend/distributed/sql/citus--8.3-1--9.0-1.sql.
__label__no *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
__label__cf Making a Contribution
__label__sc By submitting a pull request, you represent that you have the right to licenseyour contribution to Apple and the community, and agree by submitting the patchthat your contributions are licensed under the BSD-3 license.
__label__no Bug reports
__label__dc - Please keep current code styling in mind.
__label__no Getting Started
__label__no Staging override order
__label__no :ship:
__label__no https://github.com/apache/druid/fork
__label__cf Please refer to the development section in the this folder.
__label__no git add docs/tutorial.rstgit commit -m 'Awesome new change to tutorial'git push origin changes-to-docs
__label__bw - You create, or update, a fork of cake-build/cake under your GitHub account.
__label__bw - .NET Core 2.2 SDK
__label__no If you have an urgent problem you can also try CodersClan, which has a community of Capistrano experts dedicated to solve code problems for bounties.
__label__dc - List of staged files and their sources: <staging dir>/files-sources
__label__dc Most components don't utilize any form of local state and so we don't need to define such a type for the sake of having the type.Similarly, if there are no props being passed down from a parent component there's no need to creaet OwnProps.As a general rule if you find yourself creating an empty type then you should be able to leave it out.
__label__no Bugs are tracked as GitHub issues. After you've determined which repository your bug is related to, create an issue on that repository and provide the following information by filling in the template.
__label__sc - Make your changes in a new git branch
__label__sc The scope could be anything specifying place of the commit change.
__label__sc - Add tests! - Your patch won't be accepted if it doesn't have tests.
__label__no - Set Total Commander to use WinMerge as its compare tool.
__label__tc - Be considerate,
__label__bw Development setup
__label__cf It would be great if all people who want to contribute to the Aruba project— contributors and maintainers — follow the guidelines in thissection. There are also "Getting started" sections both forcontributors andmaintainers.
__label__no - Becoming a maintainer
__label__no Contributing
__label__cf git clone https://github.com/YOUR-USERNAME/DotNetty
__label__sc - Push your branch to GitHub:
__label__no Cryptomator Team
__label__bw - Install NodeJS (13.x.x) if you plan to use C# code generation.
__label__no This Code of Conduct is adapted from the Contributor Covenant, version 2.0,available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.
__label__no I would like to contribute to AppImageKit development
__label__tc - I am experiencing some weird behavior, which I think is a bug, but I don't know where exactly (mysteries and unexpected behaviors): Forums
__label__no We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario. Having a reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:
__label__sc - {description}
__label__sc Tests
__label__no 1.  Contributor License Agreement
__label__no Labels
__label__no - Testing - anything done to test, whether manual, automated, or otherwise.
__label__no - Feature Requests
__label__sc - If changes are made to the capture component, verify all tests in the tests direction pass by running ./tests.pl
__label__no - Question or Problem?
__label__no - Manual patch files
__label__cf 3.  Fork the repository on GitHub
__label__cf - Clone it and install dependencies
__label__sc - Make sure you have the original contiki repo as origin.
__label__no - Use a clear and descriptive title that identifes the suggestion.
__label__sc - When maintaining a branch, merge frequently with the master.
__label__sc - add
__label__no Short and descriptive example bug report title
__label__no Submitting a bug report
__label__no - GPU make and model, if relevant,
__label__tc - Mailing List / Google Group
__label__sc If the test requires a minimum Node version, you can add minNodeVersion (must be in semver format).
__label__sc - platform-server
__label__cf 9.  Commit your changes using a descriptive commit message that follows our commit message conventions.Adherence to these conventions is necessary because release notes are automatically generated from these messages.
__label__bw The first npm command sets up the popular Grunt build tool. You might need to run this command with sudo if you're on Linux or Mac OS X, or in an Administrator command prompt on Windows. The second npm command fetches the remaining build dependencies.
__label__no Process: Pull Request merging and HISTORY.md maintenance
__label__sc - Fix any merge conflicts
__label__tc This project has adopted the Amazon Open Source Code of Conduct.For more information see the Code of Conduct FAQ or contactopensource-codeofconduct@amazon.com with any additional questions or comments.
__label__dc - SomeFunction()<Space><Space>//<Space>Note the two spaces prefixed to me and the space after the slashes.
__label__no The returned response for a mutation is a what we call a Payload, in this caseit's CreateCommentPayload. This usually has a response that is the full datatype of whatever was modified by the earlier called mutation action. Theproperties on this type are:
__label__dc Styleguide
__label__dc - Be consistent.
__label__sc - Delete the local branch:
__label__dc Global Variables
__label__dc All contributions must follow PSR-2 coding standard.
__label__sc * add demo for ng-change on `md-contact-chips`
__label__bw Run npm install to install dependencies.
__label__cf - Non-trivial changes should be discussed in an issue first
__label__sc - When you need to release a latest version, the tag will be created automatically, running npm publish will tag your package with the latest dist-tag.
__label__no Contributing
__label__no - For consistency all data used for a visualization should be assigned to thevariable source. Then source is passed to the alt.Chart object. Seeother examples for guidance.
__label__sc Fix Mountain Lion
__label__sc - Test your new functionality or bugfix using the included tests/test-vagrant.sh script to spin up a test VM.
__label__no 2.  Create a new merge migration
__label__bw - Run yarn to install all needed dev dependencies.
__label__bw ./gradlew eclipse
__label__bw This will do a symbolic link from the global node_modules version to point to this folder, so when we run compodoc, you will now use the development version of Compodoc.
__label__bw - functions core tools - helps for making samples/etc. npm i -g azure-functions-core-tools@core
__label__sc - It's RECOMMENDED to close issue with syntax #123, see the doc for more detail. It's useful for responding issues and release flow.
__label__sc Body
__label__no - Unclassified
__label__no For information about breaking changes see Breaking Change Rules
__label__sc Commit Sign-Off
__label__sc git checkout devgit rebase upstream/devgit branch -m my-new-branch-123git branch dev upstream/dev
__label__sc - Create and use a branch with a meaning full name, based on the develop branch.
__label__cf How-to Guide
__label__no Filing issues
__label__sc If your pull request contains commits that are not yours, then you should use the following technique to fix the bad merge in your branch:
__label__no See our document on installing cypress
__label__sc If your PR contains large changes, e.g. component refactor or new components, please write detailed documents about its design and usage.
__label__bw DB_CONNECTION=sqlite
__label__no Submit issues or feature requests to the issue tracker.  If your issue pertains to an extension, you should file the issue on that extension's issue tracker instead.
__label__sc 1.  Fork the project.
__label__no Contributing code
__label__bw - cp pre-commit.sample pre-commit && chmod +x pre-commit
__label__sc - develop is the stable developing branch. Github Release is used to publish a (pre-)release version to master branch.
__label__cf Follow this process if you'd like your work considered for inclusion in the project:
__label__dc Always put JavaScript (and CSS styles) in separate files, do notembed JavaScript in the HTML.  That way we can use CSP entriesthat harden the program against security attacks.
__label__no Use the following command to preview them:
__label__sc - Must NOT break existing tests cases
__label__sc - Make sure npm test passes.
__label__ct Unsure where to begin contributing to Onion? You can start by looking throughthese beginner and help-wanted issues:
__label__no Unfortunately we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that don't have enough info to be reproduced.
__label__tc - Be respectful,
__label__no Before filing an issue:
__label__dc - Only separate functions with vertical whitespaces and use comments todocument logical blocks inside functions.
__label__cf Side note: There's a What are you working on? topic on our Forum so maybe :wave: here and get settled in!
__label__cf Atom is a large open source project — it's made up of over 200 repositories. When you initially consider contributing to Atom, you might be unsure about which of those 200 repositories implements the functionality you want to change or report a bug for. This section should help you with that.
__label__no Short and descriptive example bug report title
__label__sc A more detailed walkthrough of a squash can be found at Git Ready.
__label__no - github.com/apache-superset is theGithub organization under which we manage Superset-relatedsmall tools, forks and Superset-related experimental ideas.
__label__sc git commit -m "Adding search (fixes #123)"
__label__cf 3.  Create a branch and start a PR starting by [WIP], like "[WIP] My new feature" so everyone can follow the development.Explain the implementation in the PR description with links to issues.
__label__dc - Github Styleguide
__label__sc Finally you will need to submit a pull request (PR) on GitHub asking to mergeyour example branch into altair master. For details on creating a PR see GitHubdocumentation Creating a pullrequest. You canadd more details about your example in the PR such as motivation for theexample or why you thought it would be a good addition.  You will get feed backin the PR discussion if anything needs to be changed. To make changes continueto push commits made in your local example branch to origin and they will beautomatically shown in the PR.
__label__no Home
__label__bw yarn config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"
__label__no - Long description of the issue
__label__no - Submit exotic example use cases
__label__no What should go where
__label__dc You can set up IntelliJ for CheckStyle. First install the CheckStyle IDEA plugin, then:
__label__sc - Create a test case if you are fixing a bug or implementing an important feature.
__label__dc Use the supplied editorconfig file.Most editors have editorconfig pluginsto apply these settings.
__label__no - It contributes to solving the issue.
__label__sc You may need a github API token to run tests locally. You can get this by spinning your local server, clicking the "sign in" button and going through the OAuth flow.
__label__sc - {action}/{description} branch
__label__dc This library is written in TypeScript with tslint, prettier, and the tsc transpiler. These tools will help during testing to notice improper logic before committing and sending a pull request.
__label__sc - Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__sc This will result in ./dist that contains all the ready-to-publish artifacts.
__label__no - just checkout develop branch from master
__label__no Pull Request? ???? ??(pull request template)? ???? ???, ??? ???? ?? ?? ?? ??? ??? ??? ????. ??? ????? ?? ??? ???? ??? ?? ??? ?? ???? ?? pull request? ??? ? ????.
__label__bw For Windows systems, see our detailed instructions on the CMake README.
__label__dc Example
__label__no - Motivation for or Use Case - explain what are you trying to do and why the current behavioris a bug for you
__label__cf 1.  Create a feature request.
__label__cf Unit tests are all contained in the project named YamlDotNet.Test.csproj.
__label__sc NOTE: You must have a GITHUB_TOKEN environment variable available. You can create a GitHub access token with the "repo" access here.
__label__sc - test: Adding missing tests or correcting existing tests
__label__bw - .nvmrc config exists in the repo root, specifying a v.10.x.x version
__label__no - Overview of the Issue - if an error is being thrown a non-minified stack trace helps
__label__no A good bug report shouldn't leave others needing to chase you up for moreinformation. Please try to be as detailed as possible in your report. What isyour environment? What steps will reproduce the issue? What browser(s) and OSexperience the problem? Do other browsers show the bug differently? Whatwould you expect to be the outcome? All these details will help people to fixany potential bugs.
__label__ct - i18n: Issues related to localisation or translation are marked with these labels. They can range from missing translations for a specific language to grammatical issues and cultural differences. These will usually require a specialist in a non-English language to close.
__label__sc - feat: A new feature
__label__no 5.  Share our website and Media Material or tweet about us.
__label__cf git commit -a
__label__dc When making new tests, if you need to modify the setup or teardown methods for atest class, please use callbacks instead of overwrites; i.e.  use "setup do"instead of "def setup."  This preserves any changes to those methods thatmay have been made in test_helper.rb.
__label__tc If you have a question, make sure it wasn't already answered. If it wasn't, please refer to the Slack chat. To get an invite, use the badge in the demo page.
__label__sc $ cd packages/@aws-cdk/aws-iam$ jest test/*test.js<BOOM>
__label__dc Creating Action Types
__label__sc - When the pull request is targeting the wrong branch (this doesn't happen as often).
__label__sc 1.  Clone the repository
__label__sc - Create a branch based on master; git branch   fix/master/my_contribution master then checkout the new branch with git   checkout fix/master/my_contribution.  Please avoid working directly on the master branch.
__label__no - Remain an active contributor to the project in general and the code base in particular.
__label__tc Please note that this project is released with aContributor Code of Conduct.By participating in this project and its community you agree to abide by those terms.
__label__sc Alternatively, you can also work with the test application we provide:
__label__no Report Issues and Request Changes
__label__sc 3.  Run unittest:
__label__no :carrierwave:
__label__dc - What's the right thing to do for the public good here? I'll go with:
__label__dc - This is especially important when the variable is used to generate aglob pattern, since spaces may appear in a path value.
__label__sc - Always write descriptive commit messages ("fix bug" is not acceptable).
__label__dc - All features or bug fixes must be tested by one or more specs (unit-tests).
__label__cf Before you submit your Pull Request (PR) consider the following guidelines:
__label__tc Code of Conduct
__label__no To do this, you'll need to:
__label__sc Ballerina grammar consists of two files:
__label__tc - Include all interested parties from your team as well.
__label__no You can find the code complete and release dates of the next three Azure PowerShell releases in the Milestones section of the Issue page. Each milestone will display the issues that are being worked on for the corresponding release.
__label__no Before Submitting A Bug Report
__label__sc - list
__label__no - Remind the authors to provide a demo if they are reporting for a bug
__label__no When reporting a bug, please describe:
__label__sc - A description of the conditions witnessed that verify the code works as designed and that other functions are not broken
__label__cf 4.  Ensure the test suite passes.
__label__no See the LICENSE file for our project's licensing. We will ask you to confirm the licensing of your contribution.
__label__sc - Breaking changes should be avoided if possible.
__label__bw - There are system tests that can be run with bundle exec rake test:system.You need to have chromedriver installed for that.
__label__no this uses tmux to setup a test cluster that you can easily kill andstart for debugging.
__label__no 3.  Isolate the problem — create a reduced test case and a live example (using a site like Plunker).
__label__dc Partial build tools
__label__tc - GitHub issues and pull requests
__label__bw - CompressImagesFunction - The function that does the work of cloning, compressing, and pushing commits
__label__sc git pull [--rebase] upstream <dev-branch>
__label__sc * add demo for ng-change on `md-chips`
__label__dc - See the dev tips wiki fortips.
__label__sc # If your modification pass the tests, congradulations it's time to push your work back to us. Notice that the commit message should be wirtten in the following format.$ git add . # git add -u to delete files$ git commit -m "fix(role): role.use must xxx"$ git push origin branch-name
__label__no Crowdin
__label__dc - Add documentation — aka acceptance tests — for new featuresusing Aruba's Cucumber steps. Place them somewhere suitable in features/.
__label__cf - If the modifications change any documented behavior or add new features,document the changes. It should be written in American English.The documentation can be found at https://github.com/arangodb/docs
__label__sc We use release-it to automate our release. If you have publish access to the NPM package, run the following from the master branch to publish a new release:
__label__no - For more complicated questions, you can use Google or StackOverflow. Make sure to provide enough information when asking your questions - this makes it easier for others to help you!
__label__cf - File an issue - if you found a bug, want to request an enhancement, or want to implement something (bug fix or feature).
__label__cf You now have two remotes: upstream points to https://github.com/akkadotnet/akka.net, and origin points to your fork on GitHub.
__label__no - angular-gantt version
__label__dc This style of the codebase is enforced by Prettier.
__label__no :closed_book: Want to write docs
__label__no Webhooks
__label__tc - You can also tweet/follow @AzureFunctions.
__label__sc - Usually this is based on the master branch.
__label__sc Licensing
__label__bw Git Hooks
__label__no Once a developer has begun work on a proposal, either from the maintainers or a community member, the proposal is marked as in progress with the implementors name and (possibly) a link to a development branch to follow along with progress.
__label__sc - Every feature should be accompanied by a test.
__label__sc Make sure to name your cassette something unique. The first time you run tests you'll need to set a record mode. This will make a real-life request to github using your GITHUB_API_KEY you specified in the .env and record the result. The next time you run your tests it should use your "cassette" instead of actually hitting github. All secrets including your GITHUB_API_KEY are filtered out, so you can safely commit the resultant. When running on travis the VCR cassettes are used to eliminate/minimize actual calls to Github.
__label__no public enum ServiceVersion{#pragma warning disable CA1707V2019_06_01 = 1#pragma warning restore CA1707}}}
__label__dc namespace {
__label__no - Search tickets before you file a new one. Add to tickets if you have new information about the issue.
__label__sc - Don't combine multiple changes in one PR! Use multiple PR's if you have multiple changes that are not very closelyrelated. This will greatly enhance the chance of the PR being merged as is.
__label__no - Translation: because we want our software to be accessible by anyone, even if they don't speak English. We have a Crowdin page to make the translation of ImageGlass easier.
__label__sc $ bin/rails c> `echo GITHUB_API_KEY=#{User.last.token} >> .env`
__label__no - Which version of the library are you using? You can get the exact version by inspecting the library.json file in the root directory of the library.
__label__sc After your pull request is merged, you can safely delete your branch and pull the changesfrom the main (upstream) repository:
__label__no - Question or Problem?
__label__sc - Uses present tense. "Fix" versus "Fixed".
__label__no image
__label__dc Coding Rules
__label__no - Run the tests by running npm run test brave_unit_tests and npm run test brave_browser_tests
__label__cf Contribute your code to ComfortableMexicanSofa in 5 easy steps:
__label__dc - Doc-blocks for all classes and methods
__label__no - icon.png: a fake icon file
__label__tc - questions and answers stay available for public viewing so your question / answer might help someone else
__label__sc 2.  If you've added code that should be tested, add tests.
__label__cf We Use Github Flow, So All Code Changes Happen Through Pull Requests. Pull requests are the best way to propose changes to the codebase. We actively welcome your pull requests:
__label__sc Now force push to update your PR:
__label__sc See https://help.github.com/articles/fetching-a-remote for more info
__label__sc Examples
__label__no Getting Started
__label__no Changes
__label__ct - Building automation tools to eliminate some of the manual work of managing the project, updating information on various web pages, creating tools to make porting/upgrading more automated, etc.
__label__no PackageReleaseNotes are important because this information is displayed on www.nuget.org when your nuget package is published
__label__no - Performance improvements
__label__no If you want to review your changes on the documentation locally, you can do:
__label__sc - {action}
__label__tc Code of Conduct
__label__bw Run yarn storybook to view all the components.
__label__no We're always interested in hearing your feedback about existing and upcoming Jetpack features. The easiest way to help test Jetpack is to join our Beta group.
__label__cf Requirements
__label__sc - Write a concise commit message explaining your changes.
__label__sc Making changes to a Pull request
__label__cf - This is for active development on the next major release of Anchor, so 1.0+, feel free to take a look at this, though please don't rely on this for your projects as it's still a WIP.
__label__sc - Create a topic branch from where you want to base your work (usually master).
__label__no 2.  The Corporate CLA: have your corporate lawyer review and submit this if your company is going to be contributing to the Cloud9 SDK and/or open source projects.
__label__sc - core
__label__cf 3.  Make your code change
__label__cf - Make sure you have a GitHub account
__label__dc To ensure a consistent code base, you should make sure the code followsthe PSR-2 Coding Standards.
__label__no --> The current release branch is 1.0.5 <--. All PRs should be opened against this branch.
__label__no The following labels are used to track bug related issues: bug,documentation.
__label__sc Commit Message Format
__label__dc - JavaScript: Check the EsLint style
__label__sc RAILS_ENV=production rake assets:precompile
__label__sc - :checkered_flag: :checkered_flag: when fixing something on Windows
__label__bw git clone git@github.com:your-username/gb-studio.git
__label__no 1.  Open Developer Command Prompt
__label__cf - Please record your name in CONTRIBUTORS.md
__label__bw Install Aruba's dependencies:
__label__sc - Write unit tests
__label__cf Getting started
__label__no 3.  Add your feature flag to the FUTURE_FLAGS map incx-api/lib/features.ts.This map is inserted to generated cdk.json files for new projects createdthrough cdk init.
__label__cf 1.  If you are thinking of making a large change or feature addition, open an issue titled "Intent to implement: ". Describe your idea in detail and discuss it with the community. It might be that someone already has a plan, could help you out, or your idea may simply not be suitable for the project at this time.
__label__no In order to save reviewers' time, each issue should be filed with template and should be sanity-checkable in under 5 minutes.
__label__dc We use flake8 to enforce our Python codingstyle. Before sending us a pull request, navigate to the project rootand run
__label__ct 2.  Publish your work to Github (and GitHub pages) so everyone can learn from your work.
__label__no 1.  Write [request] as the first item in the title, followed by a short, concise description, eg: [request] Export data to CSV.
__label__bw Developing
__label__sc 3.  Related Testing: Briefly describe what part of testing is relevant to your modification.
__label__dc Make sure you checkout our ARCHITECTURE.md guide, which aims toexplain how all the pieces fit together.
__label__dc - lerna run awslint --no-bail --stream 2> awslint.txt will run awslint in all modules and collect all results into awslint.txt
__label__no 3.  Further steps, etc.
__label__dc - HashMap -> ObjectMap
__label__sc In general, make sure the addition is well thought out and does not increase the complexity of CLI11 needlessly.
__label__dc And open ./docs/index.html in your favorite browser.
__label__no 1.  Willing to dedicate a regular amount of time to invest in this project
__label__no AWS Amplify aims to enhance the development experience using JavaScript with AWS. Amplify codifies best practices through programmatic interfaces to help you effortlessly interact with cloud resources.
__label__sc 1.  You should draft a new release on GitHub. This isn't strictly necessary, but is highly recommended. At this time youshouldn't publish it yet, but just save it as a draft instead.
__label__sc - Push changes to your fork
__label__sc - add new layout helper
__label__dc # go inside the empty directory and create a symlinkcd public/vendor/canvasln -s ../../../../canvas/public/* .
__label__no - The specific AWS CLI commands you are running. Please include debug logs for these commands by appending the --debug option to each command. Be sure to remove any sensitive information from the debug logs.
__label__sc - assertThat(myBoolean).isTrue(); instead of assertTrue(myBoolean);
__label__no What are a maintainer's responsibility?
__label__sc We may ask you to sign a Contributor License Agreement (CLA) for larger changes.
__label__no - Types of Contributions
__label__no - Juli
__label__bw Run Examples
__label__bw On CentOS:
__label__dc For more information about this tool, see the awslintREADME.
__label__bw 4.  Install dependencies, and run the web app.
__label__bw - The repo's wiki has instructions for cloning the repo and getting setup on your platform of choice
__label__sc Please do not test against unsupported versions (e.g. any release that is markedfinal).
__label__no If you believe that Ant Design Mobile should provide some features, but it does not. You could create an issue to discuss. However, Ant Design Mobile is not Swiss Army Knife, there are some features which Ant Design Mobile will not support:
__label__bw Create a new class named CanvasTrackingDataSeeder and add this to the run() method:
__label__dc - Use tabs for indentation, with a tab stop value of 4.
__label__cf The first step is contributing to the project; if you want to take that a step forward and become a fellow committer on the project then see the Committer Guide
__label__no If your issue is resolved but still open, don’t hesitate to close it. In case you found a solution by yourself, it could be helpful to explain how you fixed it.
__label__cf - Download the latest cocos2d-x develop branch from github:
__label__no What?
__label__no 1.  FAQ
__label__cf - Do you have an idea for a new feature? Then don't expect it to be implemented unless you or someone else sends a pull request. You might be better to start a discussion on the google group.
__label__no Before running or recording live tests you need to createlive test resources.If recording tests, secrets will be sanitized from saved recordings.If you will be working on contributions over time, you should considerpersisting these variables.
__label__no For support or usage questions like StackOverflow with a react-sketchapp tag first.
__label__no - TypeScript Starter: https://codesandbox.io/s/chakra-ui-typescript-pomi8
__label__sc - Prefer small pull requests focused on one change.
__label__dc Ruby
__label__sc To run integration tests, make sure you have Kafka instance running.Then, rename test_env.php.sample to test_env.php and adjust itwith values proper for your kafka instance.
__label__cf 6.  Once everyone is happy with the submission, we'll merge it back into PHPCI. Your change will then be included in the next project release.
__label__no Contributing to PetaPoco
__label__sc Our review process generally follows a few core principles:
__label__dc You must review gems if you have reason to believe they might be malicious.Occasional spotchecks are encouraged.For more information, see the archived blog article"Being paranoid with Ruby gems" (Gemnasium).You can see the changes by doing the following.Create a subdirectory ("mkdir temp"), run "cd temp", and thenrun this (you can omit "-v VERSION" if you're just getting the latest):
__label__tc Please do not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on StackOverflow where the questions should be tagged with tag angular-flex-layout.
__label__no Contributing
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:
__label__sc 1.  Low-risk modifications.  These modifications are being proposed bypeople authorized to commit directly, pass all tests, and are unlikelyto have problems.  These include documentation/text updates(other than changes to the criteria) and/or updates to existing gems(especially minor updates) where no risk (such as a security risk)have been identified.  The project lead can decide that any particularmodification is low-risk.
__label__no - Check the FAQs for a list of common questions and problems
__label__sc - Write clear commit messages:the first line should be 50 characters or less, and be a clear summary of the commit, e.g. "Fix Nokogiri compile issue on macOS Sierra, GH #305".
__label__no - Understand our roadmap.
__label__no Thank you to all our sponsors! (please ask your company to also support this open source project by [become a Sponsor]
__label__no GS_CREDS_FILENAME=<YOUR_CREDS.json> nosetests -vv tests/test.py:WorksheetTest.test_find
__label__no - license_okay - runs license_finder to check theOSS licenses of gem dependencies (transitively).A separate dependency on file 'license_finder_report.html' generatesa detailed license report in HTML format.
__label__no - Coding Rules
__label__sc - One pull request per feature. If you want to do more than one thing, send multiple pull requests.
__label__tc - EFF's Public Projects Code of Conduct
__label__no When we review your pull request and ask for changes, if you're proficient using git rebase edit existing commits instead of adding new ones. If you aren't proficient with git rebase, ignore this point.
__label__sc - It is entirely in memory
__label__no The Perspective APIalso supports comments in specific languages. When the language is supported inCoral and supported by the Perspective API, the language should be added to thelanguage map in src/core/server/services/comments/pipeline/phases/toxic.ts.
__label__cf Fork, then clone the repo:
__label__cf 4.  Setup the recommended Development Tooling.
__label__cf 7.  Write code.
__label__sc # Install GNU parallel (may require uninstall 'moreutils' if you have it)$ apt-get install parallel$ brew install parallel
__label__tc - Ask questions if you aren't sure. If you have any questions while implementing a fix or feature, feel free to create an issue and ask us. We're happy to help!
__label__dc - Use printf instead of echo. Both are Bash builtins, and there's noperceptible performance difference when running Bats under the time builtin.However, printf provides a more consistent experience in general, as echohas limitations to the arguments it accepts, and even the same version of Bashmay produce different results for echo based on how the binary was compiled.See Stack Overflow: Why is printf better than echo? forexcruciating details.
__label__no Additional Resources
__label__bw To run local PostgreSQL server at the command prompt.
__label__bw 4.  Make sure you have a Java 8 compatible JDK configured in your workspace
__label__no 1.  Have a read of README.md to understand the motivations of this library. It is fairly opinionated and is not intended to be a universal drag and drop library. As such, it will not support every drag and drop interaction.
__label__no Contributing to Browsersync
__label__sc - Write a good commit message
__label__bw 1.  Open the build.gradle.kts file with IntelliJ IDEA and choose Open as Project
__label__no Please click here to report an issue or request a new feature.
__label__cf 5.  Wait for other developers to review your code and update code as needed.
__label__no - AIMSICD version (see the About-Tab within our app)
__label__no - Adding a DB migration
__label__sc - Ensure that all contributed files have a valid copyright statementand an open-source license.
__label__sc If your change is visual/rendering-related, then Mocha tests are not pragmatic.  Use the debug page in the debug directory to try out visual changes.  That page contains a sidebar with buttons and dropdowns that make visual and interactive testing easy.
__label__sc - Please discuss on Slack before making large changes to the codebase. The smaller the change, the bigger the chance itwill be merged. This also prevents wasting effort on writing code that does not gets merged.
__label__no - If we decide to build it, add to the Features milestone.
__label__bw 3.  Ensure that Gulp is installed. If you need to install it, use the following command:
__label__no If you find yourself wishing for a feature that doesn't exist in Botpress, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that Botpress has today have been added because our users saw the need. Open an issue on our issues list on GitHub which describes the feature you would like to see, why you need it, and how it should work.
__label__cf Contributing via Pull Requests
__label__bw - in: foobot terminal window# Ctl-C to stop botbar/foobot $ bp start
__label__sc The following is the list of supported scopes:
__label__sc When sending a pull request, please follow these guidelines:
__label__sc - Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__dc - Gotcha: Never initialize an array on the same line as an export ordeclare -g statement. See the Gotchas section below for moredetails.
__label__dc - while (..) {
__label__no - Describe the exact steps to reproduce the problem
__label__no Contents
__label__sc - Your changes have sufficient test coverage (e.g regression tests have been added for bug fixes)
__label__cf 1.  Clone the repo
__label__dc - Reference methods and classes in markdown with the custom {} notation:
__label__no - For bugs that involves build setups, you can create a reproduction repository with steps in the README.
__label__sc - Keep only minimal changes for the feature or the fix.
__label__bw - git clone git@github.com:barbajs/barba.git
__label__sc - End all files with a newline
__label__no Security issue notifications
__label__sc If you are unable to push because some references are old, do a forced push instead:
__label__no Writing documentation
__label__bw - Both brave-browser and brave-core clone themselves with the remote origin being upstream, so you can update either using git pull.
__label__sc The DCO is an attestation attached to every contribution made by every developer. In the commit message of the contribution, the developer simply adds a Signed-off-by statement and thereby agrees to the DCO, which you can find below or at http://developercertificate.org/.
__label__no Examples:
__label__bw This allows you to run the CDK in a CDK-compatible directory with a command like:
__label__tc Questions or problems with Calabash in CI environments cannot be handled in the GitHub Issues.  Please ask CI related questions on the forums or in Stack Overflow.
__label__cf - Pull requests are welcome but are most likely to be accepted when they addressan existing issue. A common workflow is to create an issue describing the problemyour PR would solve, and then volunteer to submit a PR addressing the issue as aninitial comment on the issue.
__label__ct - type:feature
__label__no If you're reporting what you think is a bug (i.e., something isn't right with an existing feature), please try to include as much information as you can. Details like these are incredibly useful:
__label__sc - Separate title from the body with a blank line. If you're committing via GitHub or GitHub Desktop this will be done automatically.
__label__sc - "I have not tested the code, but I have reviewed it and it looksOK, I agree it can be merged";
__label__bw # Create a virtual environemnt and activate it (recommended)virtualenv -p python3 venv # setup a python3.6 virtualenvsource venv/bin/activate
__label__sc - confirm that you have the right to contribute and license the codein question. (Either you hold all rights on the code, or the rightsholder has explicitly granted the right to use it like this,through a compatible open source license or through a directagreement with you.)
__label__sc Any line of the commit message cannot be longer 100 characters! This allows the message to be easierto read on GitHub as well as in various git tools.
__label__tc Or finally, you may find a core-contributor or like-minded developer in any of our support channels.
__label__sc The footer should contain any information about Breaking Changes or Deprecations andis also the place to reference GitHub issues that this commit Closes.
__label__bw This will allow you to use our customized tools for all of our content repositories.
__label__sc Before Creating Pull Request
__label__no - It's a good idea to include some of these sections:
__label__no Before you submit an issue, search the archive, maybe your question was already answered.
__label__sc Preparation
__label__sc Issue and Pull Request Labels
__label__no - Callouts for other fixes made by core contributors with links to issue.
__label__sc 6.  Then, Push your branch git push origin -u
__label__sc - Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__no Using the issue tracker
__label__cf 2.  Fork the project and clone the fork repo.
__label__sc <type>(<scope>): <subject><BLANK LINE><body><BLANK LINE><footer>
__label__no Thank you to all our backers! [Become a backer]
__label__cf Fork and then clone the repo
__label__dc Code in repmgr should be formatted to the same standards as the main PostgreSQLproject. For more details see:
__label__no Much of the management plane SDK code is generated from metadata specs about the REST APIs. Do not submit PRs that modify generated code. Instead,
__label__no Found an Issue?
__label__sc - If adding new feature:
__label__cf Also read this first: Being a good open source citizen
__label__cf Get Buyoff Or Find Open Community Issues/Features
__label__no - Report bugs that you have fixes with a patch via GitHub Pull request (after issuing a corresponding issue and leaving a link to pull there).
__label__no Tips: choose the corresponding documentation with versions selector which in the bottom-right corner.
__label__cf 1.  You are working against the latest source on the master branch.
__label__no This document is a guide to contributing to CVXPY.
__label__ct - Write patches for open bug/feature issues, preferably with test cases included
__label__no Here are some online tools we sometimes use to check for performance issues(including time to complete rendering, download size in bytes, etc.):
__label__no - Models sent/received by the controllers are defined in /shared/models directory
__label__sc 2.  You should branch off the current state of the master branch, and alsomerge it into your local branch before creating a pull request if there wereother changes introduced in the meantime.
__label__no - Pull Request Submission Guidelines
__label__tc Please, don't let this discourage you! Just file an issue first so we can discuss the change you plan to make.
__label__no - code_style.md ? ??? ?? ??? ??? ??? ?
__label__dc Your patch should follow the same conventions & pass the same code qualitychecks as the rest of the project. bin/rake lint will give you feedback inthis regard. You can check & fix style issues by running each linterindividually. Run bin/rake -T lint to see the available linters.
__label__no - Debugging / Testing
__label__cf git checkout -b my-fix-branch master
__label__sc Tests
__label__bw npm install -g grunt-clinpm install
__label__sc To run tests continuously
__label__no Below are guidelines to help during code review. If any of the following requirements can't be met, leave a comment in the review selecting 'Request changes', otherwise 'Approve'.
__label__no Yes, and this aspect is not up for discussion. If you would like more resources on understanding CLAs, please see the following articles:
__label__bw - Ballerina plugin for VS Code
__label__no We welcome your enhancement requests, doc improvements, and issue reports.However, we are not accepting major feature requests at this time.
__label__no Bug reports
__label__dc - Use standard language when doing so (we need to define standard language).
__label__sc - feature: checkout from {module} and merge to {module} later. If {module} not exists, merge to dev
__label__no 4.  App still mocking around? See our open Issues and look if your Issue already exists.
__label__dc - * operator goes with the variable name (e.g. Type *variable;)
__label__no 2.  Install the Remote Development extension into Visual Studio Code.
__label__cf - Add yourself to the end of the "Contributors" list in AUTHORS.md if you're not already on the list.  By doing this you confirm that:
__label__dc For multiple line conditional statements we put "hanging brackets" only"
__label__sc Rebase feature_x to include updates from upstream/master
__label__no When reporting bugs include the following information:
__label__sc - style: Changes that do { not } affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
__label__ct - needs rebase: You will find this label normally attached to pull requests, and means that the maintainers would like to you squash commits or rebase existing commits from master into your branch before we can merge your pull request. A maintainer will clarify this in the comment thread.
__label__no If you find a bug in the source code or a mistake in the documentation, you can help us bysubmitting an issue to our GitHub Repository. Including an issuereproduction (via CodePen, JsBin, Plunkr, GitHub repo, etc.) is the absolute best way to help the team quicklydiagnose the problem. Screenshots and error stack traces are also helpful.
__label__cf 3.  Build ANTLR 4
__label__sc git push my-fork --delete my-fix-branch
__label__tc Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project owner atalextselegidis@gmail.com. All complaints will be reviewed and investigated and will resultin a response that is deemed necessary and appropriate to the circumstances. The project owner is obligated to maintainconfidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may beposted separately.
__label__cf 3.  At the moment, there is no CLA (Contributor License Agreement), however I do intend to have one.
__label__sc Footer
__label__cf Please proceed with a Pull Request only after you're assigned. It'd be sad if your Pull Request (and your hardwork) isn't accepted just because it isn't ideologically compatible.
__label__ct Look through the GitHub issues. Issues tagged with #bug areopen to whoever wants to implement them.
__label__no type CommentRevision {"""id is the identifier of the CommentRevision."""id: ID!
__label__no - Include the version of ActiveMerchant, Ruby, ActiveSupport, and Nokogiri you are using.
__label__cf If you want to contribute, please:
__label__no npm run lint
__label__no - Step 1: Open Issue
__label__no - Any modifications you've made relevant to the bug
__label__bw # Setup the dev environmentbar/botpress $ yarn run bootstrap
__label__ct - RFCs
__label__dc There's a small amount of Bourne shell code(the script that sets up a new development install).If you modify it, make sure it passes shellcheck(a static analysis tool for shell).
__label__sc BUNDLE_GEMFILE=gemfiles/rails_6.0.rb bundle installBUNDLE_GEMFILE=gemfiles/rails_6.0.rb bundle exec rake
__label__no - Building
__label__no Thank you for your interest in contributing to Doctrine Extensions!
__label__dc - comparator.py: the class handling the comparison for compare
__label__bw Creating a Local Development Release
__label__sc Scope
__label__sc If you are submitting a pull-request, please read the Contributing information below.  Pull-requests without tests or a project to demonstrate the new behavior will probably be rejected.
__label__sc The release process is automated using semantic-release, for best release results follow these simple steps:
__label__cf A good branch name would be (where issue #325 is the ticket you're working on):
__label__cf 4.  Ensure pnpm is installed (version 3.5.x or higher).
__label__cf 3.  Commit changes in your feature branch.
__label__no - If possible, please also provide an error message or a screenshot to illustrate the problem
__label__sc - [optional] Verify that your change works on other platforms by adding a GitHub service hook to Travis CI and AppVeyor.  You can use this technique to run the Thrift CI jobs in your account to check your changes before they are made public.  Every GitHub pull request into Thrift will run the full CI build and test suite on your changes.
__label__sc git push origin my-fix-branch
__label__sc git push origin feature/my-new-feature
__label__no Before you submit an issue, search the archive, maybe your question was already answered.
__label__sc - If you've added code that should be tested, add tests. Ensure the test suite passes.
__label__sc - Use the imperative mood in the title. For example: "Apply editor.indent preference"
__label__bw If you have forgotten the root password you'll need to take some extra steps to reset it. Take a look atthis Stack Overflow answer for further details.
__label__sc - perf: A code change that improves performance
__label__dc In order to maintain a consistant code structure we follow PSR2 standards and using travis CI to validate a proper formatting.
__label__no Found an Issue?
__label__cf 1.  Fork the repo
__label__no Criteria changes
__label__no Credits
__label__bw Building project
__label__no - Respond to Feedback on Pull Request
__label__no ## Actual result
__label__no Documentation with good quality is a great help to developers. If there is a powerful API that is not easy to use, it becomes useless. So, we welcome contributions to help documentation of Weex become precise and easy to read.
__label__dc Syntax:
__label__cf 1.  Become familiar with the project structure.
__label__sc - Add export let only=true to a test in test/e2e to just run that test
__label__sc Signed-off-by: YOUR NAME <YOUR.EMAIL@EXAMPLE.COM>
__label__no Suggesting Enhancements
__label__tc For questions about working with Bolt or support issues, please post on theforum instead. If you post these kinds of topics there,we can keep the issues list organized, with actual issues that need to behandled in the Bolt source code itself.
__label__no We may ask you to sign a Contributor License Agreement (CLA) for larger changes.
__label__sc Squash your Commits
__label__cf 4.  Describe your approach with as much detail as necessary in the gitcommit message
__label__cf Refactoring is a necessary part of any software project's evolution. Thefollowing guidelines cover refactoring pull requests for the project.
__label__tc WAMR is a Bytecode Alliance project, and follows the Bytecode Alliance's Code of Conduct and Organizational Code of Conduct.
__label__sc Testing
__label__sc - Follow the style guide below
__label__no - Is this a known bug or are you falling into a common trap? Check the Gotchas wiki page.
__label__dc - File naming follows the same rule as most CloudCompare elements (first letter in lower case, etc.)
__label__no 1.  A title and clear description
__label__no Found an Issue?
__label__no - Trolling, insulting/derogatory comments, and personal or political attacks
__label__cf Change flow
__label__dc - Indentation is 4 spaces
__label__cf 2.  Clone your fork of Camelot from your GitHub account:
__label__sc 1.  It is a good habit to create a feature request issue to disscuss whether the feature is necessary before you implement it. However, it's unnecessary to create an issue to claim that you found a typo or improved the readability of documentaion, just create a pull request.
__label__no - Contributing
__label__sc - :lock: :lock: when dealing with security
__label__dc - Please also observe the following:
__label__bw 5.  Open File->Import...
__label__no You can now begin with the real work: implementing the plugin action. There are some modifications that have to be done first however.
__label__dc todo username: todo details
__label__bw 3.  Install Kotlin for Eclipse plugin (builds scripts are written in Kotlin)
__label__sc The scope should be the name of the npm package affected (as perceived by person reading changelog generated from commit messages.
__label__dc - Use Google Java Style as basic guidelines of java code.
__label__cf - renderers/ renders visualization data.
__label__no Issues created without steps to repeat are likely to be closed.  E-mail requests for support will go un-answered; All support needs to be public so that other people can read the problems and solutions.
__label__no - Provide the following for bug reports:
__label__sc After you've built the modules you want to work on once, use yarn watch for each module that you are modifying.
__label__sc Push to your fork and submit a pull request. When describing your pull request, it is best to explain the problem you are solving or feature you are adding, some reasoning behind it, and how the code can be verified. If your modifications affect multiple platforms, please make a note of which platforms and OS versions you have tested on and which ones still need to be tested. If your contribution has already been discussed in an issue or forum post, linking to that may be a sufficient explanation.
__label__no StackOverflow is a much better place to ask questions since:
__label__sc - removing or modifying existing properties on an options argument
__label__sc Pull Request Process
__label__tc 3. Temporary Ban
__label__cf New OAuth Providers
__label__dc - All files in web/ and dist/ are generated.Do not make direct changes to these.
__label__sc If we have comments or questions when we do evaluate it and receive no response, it will probablylessen the chance of getting accepted. Eventually, this means it will be closed if it is not accepted.Please know this doesn't mean we don't value your contribution, just that things go stale. If in thefuture you want to pick it back up, feel free to address our concerns/questions/feedback and reopenthe issue/open a new PR (referencing old one).
__label__sc - If adding new feature:
__label__bw Now you can make your changes locally.
__label__sc $ git commit -m "WIP widget [ci skip]"
__label__tc - Trolling, insulting or derogatory comments, and personal or political attacks
__label__dc - Apollo best coding practice: Please also refer to Apollo Best Coding Practice for more coding practice disciplines.
__label__sc Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.
__label__sc Submitting Changes
__label__no Backers
__label__cf Note: the optional commit -a command line option will automatically "add" and "rm" edited files.
__label__sc Whether a pull request is merged into Bitcoin Core rests with the project mergemaintainers and ultimately the project lead.
__label__dc - Prefer using T = X over typedef X T.
__label__no Contributing
__label__dc - It must not duplicate existing code, unless the new code deprecates the old one
__label__sc Submit only relevant commits. We don't mind many commits in a pull request, but they must be relevant as explained below.
__label__no Contributing to this project
__label__dc Code Conventions
__label__no - Write documentation
__label__cf 1.  Search GitHub for an open or closed PR that relates to your submission.You don't want to duplicate existing efforts.
__label__sc Working on your first pull request? You can learn how from this free series: How to Contribute to an Open Source Project on GitHub.
__label__no - Please also observe the following:
__label__cf 7.  If necessary, write unit tests (guide) and run with npm test.
__label__no Ensure the bug is actually an issue with asdf and not a plugin. If the bugonly occurs when using one tool installed by asdf and not others it's likely anissue with the asdf plugin. Find the plugin repository onasdf-vm/asdf-plugins and follow theplugin creators instructions for reporting the bug.
__label__no - Aslak Helles@aslakhellesoy)
__label__sc We follow a rough convention for commit messages that is designed to answer twoquestions: what changed and why. The subject line should feature the what andthe body of the commit should describe the why.
__label__sc - Provide a convincing reason to add this feature. Ideally, you should open a suggestion issue first and have it approved before working on it.
__label__sc Contributor License Agreement
__label__no Credits
__label__sc The default for each contribution is that it is accepted once no committer has an objection.During the review process committers may also request that a specific contributor who is mostversed in a particular area gives a "LGTM" before the PR can be merged. There is no additional"sign off" process for contributions to land. Once all issues brought by committers areaddressed it can be merged in by any committer.
__label__sc Signing the CLA
__label__sc - Feature A didn't set Foo when Bar was set
__label__no If you are suggesting a feature that you are intending to implement, please see the Contributing code/features section below for next steps.
__label__sc If you don't have hexdump available on your platform,you can try hxd, which is also a bit faster.
__label__sc Checklist before creating a Pull Request
__label__sc - Commit your changes to src/*, spec/*, and web-src/*; exclude build artifacts.(Build artifacts include dist/* and web/*).
__label__no - Conventions
__label__sc Look at these files for more detials.
__label__dc - Performance optimisations for React applications
__label__sc - Add the frontend port to docs/configuration/application_ports.md, ensuring you've not clashed with an existing application.
__label__no Contributing
__label__sc 5.  Test and test again your code.
__label__sc Some things that will increase the chance that your pull request is accepted:
__label__dc - Quotes via http://stackoverflow.com/a/56190/5549
__label__sc - If fixing a bug:
__label__sc If the CLA gets changed for some (unlikely) reason, you will be presented with the new CLA text after sending your first PR after the change.
__label__no - Run Examples
__label__no - Writing on GitHub
__label__dc By default, Berkshelf will only give you the top-level output from a failed command. If you're working deep inside the core, an error like:
__label__bw mysql -u root
__label__sc Always write a clear log message for your commits. One-line messages are fine for small changes, but bigger changes should look like this:
__label__cf Step 5: Push your feature branch to your fork
__label__sc $ git push origin issue1234 -f
__label__cf 5.  Finally, push them to your GitHub fork:
__label__no Filing a bug report
__label__no Vocabulary
__label__no - What actually happened.
__label__bw - git remote add upstream https://github.com/assemblymade/coderwall.git
__label__no - Please do not use the issue tracker for personal support requests (useStack Overflow ( Old Tag)or our Gitter Chat).
__label__no Contributing to Rest Hooks
__label__sc For any contributions of more than a few lines of code, we will need a signed copyright transfer statement before we can review your submission. Later, if these projects do become part of the .NET Foundation, the process will change and you will need to have a contribution agreement on file with the foundation.
__label__bw - Open pre-commit with your favourite text editor, and append before the last block, here is how the end should look:
__label__dc - "inspired by", "learned from" and "references to" are vague concepts in copyright.
__label__ct - feature: An issue will be marked with this label if it adds a new, discrete functional element to the codebase. They will generally require large amounts or effort to implement, require changes to both front-end view templates and back-end code, and assume prior knowledge of the codebase, making these the most tricky kinds of issues to close. However, they can be the most rewarding to close for the intrepid!
__label__dc - Try to strike a balance between readability, brevity, and performance.
__label__cf Contributions should follow the normal GitHub pull request process: fork therepo, make a new branch with your change, push the branch, and create a pullrequest with a meaningful title and description, including any interestingdetails of the change and references to any issues closed by the change.
__label__no If you are looking for packages to be added to the community feed (aka https://chocolatey.org/packages), please see Package Requests.
__label__sc - Make the required updates.
__label__sc - Pull pull requests to the master branch will be closed. Please submit all pull requests to the develop branch.
__label__sc The chance of getting your pull request accepted increases considerablyif you adhere to the following rules in addition to the aforementionedformatting and naming standards:
__label__sc Executing tests
__label__no - If you would like to add a new document, you need to add it to the navigation document as well. Navigation document is located in doc/WebSite/Navigation.md.
__label__sc License
__label__dc - CRIU mostly follows Linux kernel coding style, but we are less strict than the kernel community.
__label__sc - To provide a code contribution for an issue you will need to set up your own fork of the Avored repository, make your code changes, commit the changes and make a Pull Request to the dev branch on the Avored repository.
__label__bw 4.  Add the upstream fork - git remote add upstream git@github.com:chocolatey/choco.git
__label__no 2.  If not, create a ticket describing the change you're proposing in the Jira issue tracker.
__label__bw The two sections below deal with manually setting up the database servers needed for running tests. If you prefer aneasier alternative you can use Docker containers instead, as explained in the previous section.
__label__sc 5.  To keep the process simple with just a few contributors, development happens directly on the master branchand releases will be deployed on the same branch.
__label__sc - sorting
__label__dc import * as T from '../types';
__label__sc - For Eclipse you can import our code style settings xml: eclipse_formatting.xml.
__label__no Do you want to contribute the asdf documentation?
__label__no - Submit pull request
__label__bw Install git on your test system.
__label__no - MongoDB server
__label__cf 9.  Run the unit tests again and ensure they pass.
__label__no We actively encourage ongoing participation by community members.
__label__no - clientMutationId - an identifier used by Relay (our front-end client statecache) to process the mutation request.
__label__no Thanks for considering contributing to C++ Insights.
__label__sc This is mostly the same as
__label__sc - Follow code style guidelines (C++, functional tests);
__label__no - Output from a reproduction.
__label__sc Older IEs serialize html uppercased, but IE9 does not...Would be better to expect case insensitive, unfortunately jasmine doesnot allow to user regexps for throw expectations.
__label__sc To overwrite any test fixtures when fixing a bug or anything, add the env variable OVERWRITE=true
__label__no 3.  Issue tracker
__label__no - If you can reproduce the problem with cefclient then you'll need to report the bug on https://bitbucket.org/chromiumembedded/cef/overview there is no point opening an issue here. (Make sure you search before opening an issue)
__label__no How To Contribute
__label__sc 0. Try to write a good commit message.
__label__no Contributing to Compodoc
__label__no - Following characters are lower case
__label__cf The main project, YamlDotNet.csproj, is organized in three main namespaces: Core, RepresentationModel and Serialization. The Core namespace contains everything that is related to reading and writing YAML. The RepresentationModel has classes that represent a YAML stream, similar to XmlDocument for XML. The Serialization namespace contains classes to serialize and deserialize object graphs to / from YAML.
__label__no - Check if you are using the latest repository clone.
__label__dc #include "caf/example/my_class.hpp"
__label__sc GitHub provides additional document on forking a repository andcreating a pull request.
__label__no - Developing
__label__ct - Localization
__label__sc - Make the required updates.
__label__sc 5.  Make your change, add tests and documentation, and make sure the tests still pass
__label__sc - A commit is a small logical unit that represents a change.
__label__no - Update changelog if needed
__label__no - Triaging Issues
__label__bw git clone https://github.com/<username>/Carbon.gitcd Carbongit remote add upstream https://github.com/briannesbitt/Carbon.git
__label__bw However, to keep up to date, you will continually have to run the python -m pip install -r requirements.txt file to pull in the latest changes from the develop branch of botocore.
__label__no You can help the team even more and submit a Pull Request with a fix.
__label__sc 2.  git pull codeigniter develop
__label__cf - Browse the source code. Got an itch to scratch, want to tune some operation or add some feature?
__label__no Aim of the project
__label__no ??? ??? ?? ???? ??(issue template)? ???? ???, ?? ??? ??? ??? ???? ??? ???? ??? ????.
__label__sc This will run 3 nodes:
__label__no - Contributor Testing
__label__sc Must be one of the following:
__label__cf - Run the tests so your patch doesn't break existing functionality.
__label__sc All unit tests must pass before a pull request will be approved.You can run unit tests with NPM like so:
__label__cf - Cannot be to a paid service or product.
__label__cf - Suggestions to improve your implementation
__label__bw npm i yarn lerna -g
__label__sc The package and scope fields can be omitted if the change does not affect a specificpackage and is not displayed in the changelog (e.g. build changes or refactorings).
__label__no Contributing to Bolt
__label__bw 8.  Delete the old CyberChef html file
__label__dc We are always accepting of pull requests, but we do adhere to specific standards in regards to coding style, test driven development and commit messages.
__label__bw To install the latest version of gitbook and prepare to build the documentation, run the following:
__label__no New services added:
__label__cf CONTRIBUTING ?
__label__ct For the more major features, there are the following that you can give a try. They are also described in more detail in the project list:
__label__dc - Define multiple variables on the same line, if possible. Use meaningful names (e.g. letter instead of lt) and follow existing conventions as seen in other snippets. Do not use trailing or leading underscores in variable names.
__label__dc - Static member or global variables that are concrete class objects are completely forbidden. If you must have a global object it should be a pointer, and it must be constructed and destroyed via appropriate functions.
__label__sc Contribution Flow
__label__no How would you like to help?
__label__dc - Never declare more than one variable per line.
__label__bw For more details about updating Ruby versions with rbenv, seehttps://github.com/rbenv/ruby-build andhttp://dan.carley.co/blog/2012/02/07/rbenv-and-bundler/.Note that 'rbenv install 2.3.0' is equivalent to the longerruby-build 2.3.0 $HOME/.rbenv/versions/2.3.0.
__label__no - [dir] mimic: change flavor spec for mimic
__label__no - Make a suggestion
__label__sc All pull requests should target the master branch, with a planned 3.0 major release.
__label__cf Development workflow
__label__sc Each commit message consists of a header, a body and a footer.  The header has a specialformat that includes a type, a scope and a subject:
__label__sc - chore - build-related work, e.g. doclint changes / travis / appveyor.
__label__cf 7.  Commit the changed files in your contribution branch.
__label__no Verify Karaf features
__label__sc - Tests should not include any hardcoded values, such as location, resource id, etc.
__label__sc * alternatives considered and why they were discarded, if appropriate.
__label__no - pubsub
__label__sc - If the change increases the version of the package, ensure pkgver is updated and pkgrel is reset to 1.
__label__sc pytest -v --cov allennlp.nn.util tests/nn/util_test.py
__label__no - How is the proposed feature better than the work around?
__label__sc - Open a terminal and navigate to the root of the project
__label__sc 2.  Clone fork to local repository
__label__no Requirements
__label__cf 2.  Add relevant changes to files in the project structure such that they will be added to only theCeph versions and distros in scope for the feature.
__label__sc A commit message should observe the following (based on "A Note About Git Commit Messages"):
__label__cf - Develop and test your modifications there
__label__cf - In GitHub, send a pull request to angular.js:master. This will trigger the check of theContributor License Agreement and the continuous integration tests.
__label__bw In order to resolve this issue, remove all node_modules via yarn clean-deps and then reinstall them in the correct environment via yarn. If using/running from a docker container, this is done from within the container; however if running locally, then run from your local shell.
__label__bw You can also use Docker to simulate and debug the built binary. In a temporary folder (for example from the folder /tmp/test-folder/) start a Docker image:
__label__dc Please make your code look like the other code in the project.
__label__cf - Create a new branch in your fork, based on the devel branch
__label__dc This tool is used to generate our low-level CloudFormation resources(L1/CfnFoo). It is executed as part of the build step of all modules in theAWS Construct Library.
__label__bw If you are an Apache Camel committer then clone the ASF git repo at
__label__cf At this point, you're ready to make your changes! Feel free to ask for help;everyone is a beginner at first :smile_cat:
__label__sc We greatly appreciate any and all testing for the project. When testing, pleasebe sure you do the following:
__label__sc Explain the motivation for the change in the commit message body. This commit message should explain why you are making the change.You can include a comparison of the previous behavior with the new behavior in order to illustrate the impact of the change.
__label__sc Commit messages
__label__dc - Syntax:
__label__bw See also DEVNOTES.txt
__label__sc - If changes are requested do not close the pull request but rewrite your history. Details about rewriting your history
__label__sc $ npm run build -- --light$ npm run clean:server:test
__label__no - performance issues track ideas on how to improve AVA's performance
__label__dc Linting
__label__cf If you are thinking about adding entirely new functionality, open a FeatureRequest or ping the maintainers to ask forfeedback first before beginning work; again this is to make sure that no oneelse is already working on it, and also that it makes sense to be included inthe SDK.
__label__sc - perf: A code change that improves performance
__label__cf Easy way GitHub allows in-line editing of files for making simple typo changes and quick-fixes. This is not the best way as you are unable to test the code works. If you do this you could be introducing syntax errors, etc, but for a Git-phobic user this is good for a quick-fix.
__label__dc - Anything inside a namespace starts with no indentation.
__label__cf - Fix bugs by creating PR's
__label__sc To get started with testing, please follow the steps below:
__label__bw git remote add upstream https://github.com/apache/incubator-dolphinscheduler.git
__label__sc Then, you can run it on the items you've added to your staging area, or all files:
__label__sc 1.  Two or more members of the owners, approvers, or reviewers groups must approve your PR. See the Chef Infra OSS Project for a list of all members.
__label__no Include as much sample code as you can to help us reproduce the issue. (Inline, repo link, or gist, are fine. A failing test would help the most.)
__label__sc - Limit the first line to 72 characters or less.
__label__no - Bug reports
__label__sc 6.  Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.
__label__sc - Patches that refactor key components will only be merged in the next major versions.
__label__no Models and Database Tables
__label__no - Issue Reporting Guidelines
__label__cf - Shellcheck your work. Current shellsheck exceptions at the beginning of bashtop.
__label__no Interested in contributing? Awesome!
__label__sc Format is handled by pre-commit. You should install it:
__label__bw If you are using the command-line, you can do the following to update your fork to the latest changes:
__label__sc Pull request comment should contain description of the problem your changessolve and a brief outline of the changes included in the pull request.
__label__no - Pull Request Guidelines
__label__bw 4.  Link all drivers and dependent packages where you make changes in packages/cubejs-server-core.
__label__no Weex Community Github Issue to report and track bugs ?The more information provided in a Github issue, the sooner it get solved.
__label__cf 8.  ? Squash your changes into a meaningful commits (usually 1 commit) (git rebase -i HEAD~N where N is commits you want to squash)
__label__dc This codebase is typed with flow. Changes will not be merged without correct flow typing. If you are not sure about a particular use case let flow break the build and it can be discussed in the pull request.
__label__dc Development
__label__sc Submitting Your Patch!
__label__no - System Design
__label__ct We are open to anything that improves the SDK and doesn't unnecessarily cause backwards-incompatible changes. If you areunsure if your idea is something we would be open to, please ask us; Open an issue, send us an email, or ask in theGitter channel. Specifically, here are a few things that we wouldappreciate help on:
__label__ct - Pull Requests
__label__cf Project Structure
__label__cf 5.  Open a PR with the [WIP] flag against the development branch and describe the change you are intending to undertake in the PR description. (see our branch naming conventions)
__label__dc StateProps need not mirror the types of elements in the global app state.These types are specifying the component API and so if we have mismatches we are responsible for transforming values inside mapStateToProps.It can be convenient to draw a type from the Redux app state but doing so will weaken the contract for the component.
__label__sc - Provide detailed description of the bug in the PR. Live demo preferred.
__label__no - There are limited resources/time and not all issues/pull requests can be considered as well as we would like.
__label__no - [ ] Better and more modern layout
__label__dc Optimization
__label__cf 3.  Install/update dependencies:
__label__no I have found a bug!
__label__dc See https://source.android.com/source/code-style.html
__label__sc 3.  Leave "pull" in the first line.
__label__no Contributing
__label__no Reporting security issues
__label__sc To build and run tests, use 'build'
__label__sc When opening a pull request, try to keep the changes focused onone topic and avoid unrelated changes (even small things, likeediting punctuation or whitespace in comments).
__label__sc - If the package is only supposed to be built for specific architectures, ensure the buildarch variable is set correctly (see the README)
__label__dc - Core - This contains the building blocks of any MVVM solution such PropertyChangedBase, Screen & EventAggregator. It's a Portable Class Library designed to work on as many platforms as possible. However due to some limitations we create the Core assembly for Silverlight 5 and .NET 4.0 separately although they share code using linked files and compilation symbols.
__label__sc git fetch upstream
__label__no - nvm and node
__label__dc The Contiki source tree contains scripts to assist with correct code formattingand we recommend Uncrustify as thepreferred auto formatter. Everything is undertools/code-style.
__label__no Contributors
__label__dc - getURI instead of getUri
__label__no - Heron Architecture
__label__sc - Update your master with the latest upstream version:
__label__cf - Once your PR is approved and you are done with any follow up changes:
__label__ct - The "Priority" List
__label__sc 2.  Permissions to the jsbeautifier package.  File an issue here on GitHub and the appropriate person will help you.
__label__no - settings-view - the settings UI pane item.
__label__cf These are the branches in this project, and what they're for.
__label__sc # examplegit log 1.1.0..HEAD --pretty=format:%s
__label__no First: if you're unsure or afraid of anything, just ask or submit theissue or pull request anyways. You won't be yelled at for giving your besteffort. The worst that can happen is that you'll be politely asked to changesomething. We appreciate any sort of contributions, and don't want a wall ofrules to get in the way of that.
__label__dc 6.  If db requires connection pooling prefer use generic-pool implementation with settings similar to other db packages.
__label__sc First of all, you must decide on what branch your changes will be based depending of the nature of the change.See the dedicated documentation entry.
__label__tc Got a Question or Problem?
__label__dc js
__label__no - Add Translations
__label__sc - Checkout a new topic branch from master branch, and merge back against master branch.
__label__no - Development Process
__label__sc The above log is too short and useless in the long run. A better version (and note the issue link):
__label__no If you are looking to provide language translation files, Please do so via WordPress Plugin Translations.
__label__sc - chore: Changes to the build process or auxiliary tools and libraries such as documentationgeneration
__label__tc If you would like to get acquainted with the current developers and the status of Clasp in general, you are more than welcome to check by our IRC channel #clasp on Freenode. It is also a good place to be if you just want to lurk around and watch the development happen before your very eyes.
__label__ct If you create an issue for your feature request or bug, it gives the maintainers a chance to comment on your ideas before you invest a lot of work on a contribution. It may save you some re-work compared to simply submitting a pull request. It's up to you whether you submit an issue.
__label__ct Choosing something to work on
__label__bw bundle install
__label__no If you're reporting a bug in Certbot, please make sure to include:
__label__no First, checkout the main Moloch README for information on how to build and run Moloch.
__label__dc - Create README.md and readme.stories.tsx under that folder, package.json will be auto generated.
__label__cf In general, the contribution workflow looks like this:
__label__dc Documentation
__label__sc - Write tests and make sure they pass (tests are in the test directory).
__label__sc - You are legally able to provide and license your contributions as stated,
__label__ct - type:task
__label__no Create single nuget package
__label__cf git rebase -i upstream/master
__label__no //! Inline simple methods by keeping the implementation on the same line as the declaration.void 	setVar1( int var )		{ mVar1 = var; }//! Try to align the interface so it is easier to read.void 	setVar2( int var )		{ mVar2 = var; }
__label__sc Pull Requests should be made against the current release branch. You can find the current release branch here.
__label__no - Step 4: Commit
__label__no 3.  We have very limited active contributors so please spend as much time looking into your own problem as possible, the more you help yourself, the quicker things will get fixed.
__label__cf Each milestone corresponds to a Conan release, a branch release/xxx will be opened from the develop branch.When the branch is ready, a tag corresponding to the version will be pushed and it will be merged into develop branch.
__label__no That would be amazing! Reach out to the core team here:https://discord.gg/dQHfcWF. We would love to support you anyway we can.
__label__sc Upcoming Releases / Features
__label__dc - Run your changes throughshellcheck with test/shellcheckand the bats testsuite with test/run
__label__sc Must be one of the following:
__label__sc 5.  Make sure your code lints.
__label__sc Type
__label__sc Now your fork is up to date. This should be done regularly, or before you send a pull request at least.
__label__no If possible try to explain how you would expect to use feature.For example, should it be a configuration option or a hot-key.
__label__tc - #clasp on irc.freenode.net / Archive
__label__dc # (For tests names test.xxx.ts)$ node --inspect-brk /path/to/aws-cdk/node_modules/.bin/nodeunit -t 'TESTNAME'
__label__sc There will be a static check program when you submit a PR,and the following rules will be checked:
__label__sc > puts File.read(".env")
__label__no Pull Request Labels
__label__no In order to contribute code to vlayout, you (or the legal entity you represent) must sign the Contributor License Agreement (CLA).
__label__sc Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.
__label__tc Do you have questions about the source code?
__label__cf Submitting a Pull Request (PR)
__label__dc - Use .hpp as suffix for header files and .cpp as suffix for implementationfiles.
__label__bw A Gemfile.local file can be used, to have your own gems installed to supportyour normal development workflow.
__label__ct - Performance improvements
__label__sc Scope
__label__sc Contributing code
__label__no - Snyk
__label__no * Framework name & version: {YOUR DATA}
__label__no - https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storage/resource-manager/Microsoft.Storage/stable/2019-06-01/blob.json
__label__sc - Almost all changes of AntennaPod are done on the develop branch. If a new version of AntennaPod is released, the develop branch is merged into master. As a result, the master branch probably doesn't contain the latest changes when you are reading this. Please make sure that you are branching from develop! Otherwise, there might be a lot of merge-conflicts when merging your changes into develop and therefore it might take longer to review your pull-request. Exceptions are urgent issues that need to be fixed in the production version.
__label__dc - HTML5 Rocks - dnd basics
__label__no - Redis
__label__sc - plugin-feature-redex
__label__sc - If you are fixing a bug:
__label__sc Make sure all tests succeed before submitting your pull-request, else we will not be able to merge it.
__label__ct Bug Fixes & Enhancements
__label__bw The CRIU sources are tracked by Git. Official CRIU repo is at https://github.com/checkpoint-restore/criu.
__label__no Contributing to Angular
__label__sc Visualizing dependencies in a CloudFormation Template
__label__cf git push origin feature-xxx
__label__bw # Create an admin user in your metadata databasesuperset fab create-admin
__label__dc Code Conventions and Style Guide
__label__dc - Add add-on details in scripts/packages.js
__label__sc - Ensure you have signed the Contributor License Agreement (CLA) - without this we are not able to take contributions that are not trivial.
__label__no How to Contribute to the Android Beacon Library
__label__sc --BLANK LINE--(optional) Connects-to: #issue-number(mandatory) Change-type: major | minor | patch(optional) Signed-off-by: Foo Bar <foobar@balena.io>
__label__no Client Libraries
__label__no As you may have noticed, there is quite a bit of documentation in the schema examples listed here.
__label__no 1.  Get the migration heads
__label__sc - feat: new features, e.g. add support for a config file.
__label__cf - Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__no Triggers
__label__cf 1.  Visit https://github.com/alibaba/cobar
__label__no - You can upload the PNG/GIF images to Imgur.
__label__bw You can reset this, if something has happened to it, using:
__label__no - AChecker, https://achecker.ca/checker/index.php, a web accessibilitychecker.  This tool looks for web accessibility problems.We typically check the following paths(these are key forms in the system): "/", "/signup", "/login","/projects", and "/projects/1".Our goal is to have no known problems and no likely problems per this tool(this was true on 2017-06-03).The "potential problems" list is very noisy, so we don't worryabout that list as much.
__label__cf Push to your fork and submit a pull request.
__label__no - The version of our code being used
__label__dc blueprints = app.config["BLUEPRINTS"]
__label__sc :star2: Have a patch
__label__dc To ensure a consistent code base, you should make sure the code follows thecoding standards PSR-1 andPSR-2.
__label__cf 5.  Submit a Pull request so that we can review your changes
__label__sc The following is a list of guidelines that pull requests opened in the Azure PowerShell repository must adhere to. You can find a more complete discussion of Azure PowerShell design guidelines here.
__label__sc Please note that PRs are looked only for approved issues. Follow the PR guide for opening a PR
__label__bw 1.  Create new project using cubejs create or use existing one.
__label__no We have a dedicated forum with a welcoming community and wiki to answer your question:
__label__sc 0. DO NOT commit any PR to such a branch.
__label__dc - src/css/site.less - the landing page stylesheet
__label__sc - For corporations we'll need you toprint, sign and one of scan+email, fax or mail the form.
__label__bw 2.  Install the Groovy Eclipse plugin and select Groovy Compiler 2.4 (some tests are written in Groovy)
__label__bw - For git specific information:
__label__no Issues
__label__sc (The last part is automatically performed by our CI system.)
__label__sc 2.  Updating Reason: Different with issue. Briefly describe your reason and logic about why you need to make such modification.
__label__no We also welcome financial contributions in full transparency on our open collective.Anyone can file an expense. If the expense makes sense for the development of the community, it will be "merged" in the ledger of our open collective by the core contributors and the person who filed the expense will be reimbursed.
__label__no Before you submit your issue search the archive, maybe your question was already answered.
__label__sc git push my-fork --delete my-fix-branch
__label__no In the release of every stable version, there will be a PM who has the following responsibilities in different stages of the release.
__label__no Please do not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on StackOverflow where the questions should be tagged with tag ui-kitten.
__label__sc - feat: A new feature
__label__cf You do not need to include a changelog entry for fixes to bugs introduced inthe developer version and therefore are not present in the stable releases. Ingeneral you do not need to include a changelog entry for minor documentationor test updates. Only user-visible changes (new features/API changes, fixedissues) need to be mentioned. If in doubt, ask the core maintainer reviewingyour changes.
__label__no :bar_chart: What needs to be developed
__label__dc type Props = StateProps;
__label__cf Non-experimental features should be accompanied with tests and documentation.
__label__bw git@github.com:Caliburn-Micro/Caliburn.Micro.git Caliburn.Micro
__label__bw 1.  Add a Environment Variable via a global variable (have to restart VS afterwards)
__label__sc - You have read the terms and conditions of the CLA and agree with them in full,
__label__no - atoum version (sha1, phar, tag): get it with bin/atoum --version or php atoum.phar --version or git rev-parse --short HEAD,
__label__no This exercise does two things:
__label__bw Database
__label__sc Testing
__label__no - Suggesting Enhancements
__label__ct Required knowledge: PHP, HTML, CSS and Javascript
__label__no Contributing to ArrayFire
__label__sc - grunt version prepare the code for release
__label__no - Routes are defined in /server/controllers/ directory
__label__dc - Add class qualifier to static member access outside declaring class only
__label__sc - When opening a PR for a specific issue already open, please name the branch you are working on using the convention issue-[issue number]. For example, if your PR fixes Issue #803, name your branch issue-803. If the PR is a larger issue, you can add more context like issue-803-new-scrollable-area If there is not an associated open issue, create an issue using our Issue Template.
__label__no Please take a moment to review this document to make contributing easy andeffective for everyone involved!
__label__dc You will see how the babel part of Linaria work, result JS file will be stored in dist directory. You will not see the resulting CSS file, because this is the role of next layer - bundlers (CSS content is stored in babel metadata to be consumed by bundler).
__label__cf We are always very happy to have contributions, whether for typo fix, bug fix or big new features.Please do not ever hesitate to ask a question or send a pull request.
__label__cf yarn lint --fix
__label__no - Specify any relevant exception messages and stack traces
__label__ct We'd like to fix priority issues first. We'd love to see progress on low-priority issues too. future issues are those that we'd like to get to, but not anytime soon. Please check before working on these since we may not yet want to take on the burden of supporting those features.
__label__no If you didn't found anything related in the archive, you can create a new issue providing:
__label__no Financial contributions
__label__no - There are issues with label "help wanted" that are best to help you get started.
__label__no - X is a major release, which may not be fully compatible with prior major releases
__label__dc - Read it to check for nastiness.
__label__sc $ cd path/calabash-android/ruby-gem$ git checkout master$ git pull$ git checkout -b release/1.2.3
__label__no At a high level, the process for proposing changes is:
__label__cf Get Buyoff Or Find Open Community Issues/Features
__label__no First of all, thank you for considering contributing to GrapesJS!
__label__sc git checkout -b my-fix-branch master
__label__dc We have a worldwide community and respect everyones backgrounds and languages, however Forge Networking is primarily developed by English (US) speakers. Because of this the variables, names, functions, comments, and everything else for this code base should be exclusively in English (US).
__label__cf We use the master branch as the development branch, which indicates that this is a unstable branch.
__label__no - Fix problems that are important to users
__label__no .NET is using the ApiCompat tool to enforce API compatibility between versions. Builds of GA'ed libraries will fail locally and in CI if there are breaking changes.
__label__no Guidelines
__label__sc tox -e py36
__label__no Issues
__label__no The following is a set of guidelines for contributing to cloudscribe and its related projects, which are hosted on GitHub.These are just guidelines, not rules, use your best judgment and feel free to propose changes to this document in a pull request.This document is just a first draft put together quickly because people are beginning to express interest in contributing, we expect this document to evolve over time.
__label__sc Optional. Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes".The body should include the motivation for the change and contrast this with previous behavior.
__label__sc Testing
__label__no * Your base framework: .Net Framework or .Net Core.
__label__cf We adhere to semver so breaking changes will require a major release.For breaking changes, it would normally be helpful to discuss them by raising a 'Proposal' issueor PR with examples of the new API you're proposingbefore doing a lot of work.Bear in mind that breaking changes may require many hundreds / thousands of users to update theircode.
__label__cf 1.  Submit an issue describing your proposed change to the repo in question.
__label__sc Send the pull request from your feature branch to us. Be sure to include a description that lets us know what work you did.
__label__sc - For components ui module the scope should be the name of the component that was affected:
__label__sc - There is a reasonable amount of comment
__label__sc Commit Message Format
__label__dc - Some of the code (namely some HTTP parts) uses unaligned memory access (requiring newer CPUs and possibly introducing undefined behavior).
__label__dc - awslint
__label__no Before you submit an issue, search the archive, maybe your question was already answered.
__label__cf Bug fixing. If you have a fix for a bug, please attach your patch in the corresponding issue in the issue tracker. If there is no entry for the bug yet, then please create a new one. If you are confident working with Git, see the Get Ready section below on how to submit your change.
__label__bw Now that the projects are linked, run the following installation steps:
__label__no - Commit Message Guidelines
__label__sc MySQL
__label__no 2.  Projects of related packages are grouped together in a folder following the structure specified in Repo Structure
__label__dc - Math symbol following a cast to a typedef
__label__sc If the test fails it is likely that something is wrong with yourcode. Please look carefully at the log. It might also be that somepackage on the testing VM was updated and causes the build to fail. Ifyou are sure that is is not your code causing the tests to fail starta new issue describing the problem. Also note this in your pullrequest.
__label__ct Any contribution is appreciated. The currently known errors are registered in the Issues tab. Feel free to take a swing at any one of them.
__label__dc - Tabs should be used for indentation. Please do not use spaces.
__label__no - Check existing bug reports, see if it is already reported.
__label__no If only a small portion of the code/log is relevant to your issue, you may paste it directly into the post, preferably using Markdown syntax for code block: triple backtick ( ``` ) to open/close a block.In other cases (multiple files, or long files), please attach them to the post - this greatly improves readability.
__label__no We're happy that you have chosen to contribute to the MonoGame Extended project.
__label__no Is this already an open issue?
__label__dc - Follow AOSP Code Style for rest of android related code style.
__label__no - Before anything else, please make sure you are on the latest version, the bug you are experiencing may have been fixed already!
__label__no Your reward is the sweet karma in knowing you
__label__ct We do not accept CS fixes pull requests. Fixes are done by the project maintainers when appropriate to avoid causing too many unnecessary conflicts between branches and pull requests.
__label__no 5.  Release the gem to rubygems using ShipIt
__label__cf - libraries/RootCommands: A vendorize Android library to run root shell commands
__label__sc - Run node scripts/server.js
__label__dc - execute intrepreted variables through the shell
__label__no Brave welcomes contributions of all kinds! You can make a huge impact without writing a single line of code
__label__bw Clone both repositories into directories next to each other.
__label__sc - feat: A new feature
__label__dc - {a: 1, b: 2} instead of { a: 1, b: 2 }
__label__sc - compiler
__label__dc - Place a function's variable declarations in the narrowest possible scope and always initialize variables in their declaration.
__label__dc - Put output parameters in functions before input parameters if unavoidable.This follows the parameter order from the STL.
__label__no - @area55git (Area55) contributed the logo under a Creative Commons Attribution 4.0 International License..
__label__sc Contributors must sign-off each commit by adding a Signed-off-by: ...line to commit messages to certify that they have the right to submitthe code they are contributing to the project according to theDeveloper Certificate of Origin (DCO).You can sign-off a commit via git commit -s.
__label__no Contribution Guide
__label__no - Matijs van Zuijlen (@mvz)
__label__sc # ~46 sec on a MacBook Pro (Mid 2015)$ make test
__label__sc 3.  Create a branch for your changes (best practice is issue as branch name, e.g. THRIFT-9999).
__label__sc git commit -a
__label__no - tabs - the tabs for open editors at the top of the UI.
__label__no - Reproduce the Error - provide a live example (using StackBlitz IDE) or a unambiguous set of steps
__label__ct - Implementing features - Report as an issue, wait for the community to agree, then PR (to development) the feature and supporting unit test(s) and integration test(s). If you don't get the go-ahead for a feature, please don't be offended if your PR is not pulled.
__label__sc If you have questions regarding development, send us an e-mail at lynis-dev.
__label__cf Getting started
__label__no - The host has some dependencies on having some Azure resources provisioned, so before you get started, make sure you have reliable access to an Azure subscription. E2E tests require a lot of various services to be provisioned. If you're making large contributions which would affect E2E tests, it'll be expected that you can provision those services yourself.
__label__no - Motivation for or Use Case - explain what are you trying to do and why the current behavior is a bug for you
__label__no - xDebug version (if loaded),
__label__cf - components/ contains UI components.
__label__no Getting Started
__label__sc Use the summary field to provide a succinct description of the change:
__label__dc #include "caf/example.hpp" // header for this .cpp file
__label__no Contributing to Cypress
__label__no General Advice
__label__sc Checklist for Contributed Code
__label__cf To contribute a patch, the workflow is as follows:
__label__sc - If you break the build with your PR, please fix it :)
__label__cf 4.  Create a feature branch to work in.
__label__no If you have questions or ideas regarding AngularJS Material, please direct these to theAngularJS Material Forum.
__label__dc - If a parameter is expected to be modified by a method, it should be a pointer (not reference) so it is clear at the call site. An exception is when you are using private utility methods.
__label__sc - Prior to issuing the pull request:
__label__dc - installer.py: the class handling the installation of dotfile for install
__label__no Now, push to master (in the future we will release from a release branch, but in the meantime we release directly from master):
__label__no 4.  What did you see instead?
__label__sc - Make sure npm test passes.
__label__tc By contributing to this project you agree to the Code of Conduct.
__label__sc 3.  run the tests
__label__no Etiquette
__label__no - Useful aliases
__label__no When posting to Stack Overflow or CodersClan, be sure to include relevant information:
__label__sc $ DB=pg bundle exec rake spec (`DB=postgres` & `DB=postgresql` work too)$ DB=mysql bundle exec rake spec
__label__no - A succint, detailed description of the problem you're experiencing. Thisshould include:
__label__sc - Behind the scenes, we conduct a number of tests or checks with new pull requests.This is a technique that is called continuous integration, and we use Travis CIand CircleCI. To prevent the automated tests from running, you can add [ci skip]to your commit message. This is useful if your PR is a work in progress (WIP) andyou are not yet ready for the tests to run. For example:
__label__sc - build: Changes that affect the build system, CI configuration or external dependencies(example scopes: gulp, broccoli, npm)
__label__no It is every maintainer's responsibility to:
__label__no - OWASP ZAP web application security scanner.You are encouraged to use this and other web application scanners to find andfix problems.
__label__sc - don't capitalize the first letter
__label__bw $ git clone https://github.com/<your-github-username>/babel$ cd babel$ make bootstrap
__label__ct - Creating projects to make Lucene.Net easier to use with various .NET frameworks (ASP.NET MVC, WebApi, AspNetCore, WPF, EntityFramework, etc). In general, we would like common tasks as easy as possible to integrate into applications build on these frameworks without everyone having to write the same boilerplate code.
__label__dc Style Guide
__label__no Some issues are opened and sadly forgotten about by the person originally opening the issue.
__label__ct - Once you're up and running, find an interesting issue to fix. Check out issues labelled with good first issue
__label__dc - ATL, MFC, WTL
__label__sc - remove
__label__tc Contributor Code of Conduct
__label__sc We also rely on various make targets to perform some common tasks:
__label__dc - Assert liberally, but make it clear with comments next to the assert what went wrong when the assert is triggered.
__label__sc Actionhero is a large project with lost of different servers and tools. We don't expect you to know about everything, that's why we have a robust test suite. This allows us to ensure that no matter who makes a change, Actionhero will continue to work the way it is supposed to.
__label__sc git rebase master -igit push -f
__label__sc git pull --ff upstream master
__label__no ISSUES
__label__dc The vast majority of Gooey's code does not follow PEP8. This is because the vast majority of Gooey's code is build on top of WxPython code, which does not follow PEP8. Everything in Gooey's core honors the general camelCase style used throughout Wx.
__label__bw - if you want to work on the homepage, start it with yarn start:home, itwill be available on http://localhost:8000/
__label__dc - If possible, don't use it. See the advice on avoiding subprocesses and usingprintf -v in the Command substitution section above.
__label__sc - The SDK is released under the Apache license. Any code you submit will be released under that license.
__label__dc - Are there dependencies other than the astropy core, the Python StandardLibrary, and NumPy 1.16.0 or later?
__label__no Reporting Issues
__label__dc Please see the Parameter Best Practices document for information about parameter design guidelines.
__label__no You can read Crowdin's getting started guide for translators here: https://support.crowdin.com/crowdin-intro/
__label__sc 4.  Ensure all configurations are validated as a correct schema (the tool does this automatically when editing via "raw json" mode).
__label__tc If you have any questions about how to contribute, either create a GH issue or ask your question in the #ksql channel in our public Confluent Community Slack (account registration is free and self-service).
__label__cf To run the example app on iOS:
__label__dc - The nameof(.) operator;
__label__no Note on Patches/Pull Requests
__label__dc - java.util.Queue -> arc.struct.Queue
__label__dc - Use exceptions only when an error is encountered that terminates a query (e.g. parser error, table not found). Exceptions should only be used for exceptional situations. For regular errors that does not break the execution flow (e.g. errors you expect might occur) use a return value instead.
__label__no - Creates a transparent decision making process which makes it clear howcontributors can be involved in decision making.
__label__no - You want to be part of a community of like-minded individuals.
__label__dc You can see the current ruby versions we support in .travis.yml.Obviously, any language features you use must be available in the oldest version we support.Therefore, it's often helpful to develop / test against the oldest version to avoid accidentallyusing unsupported features.
__label__no All contributions are welcome to this project.
__label__sc Onion is distributed under GPL2 and Apache2 licenses.
__label__no How Can I Contribute to Heron?
__label__no - Provide a reproducible test case. If a contributor can't reproduce an issue,then it dramatically lowers the chances it'll get fixed. And in some cases,the issue will eventually be closed.
__label__sc 6.  Now, you can submit your pull request on  specific version branch.
__label__no Bug Reports
__label__no - The plugin should have a meaningful and unique icon
__label__sc Signing
__label__no How Do I Submit A (Good) Enhancement Suggestion?
__label__no 4.  Optionally add a compiler deprecation warning (until we move to VS 2015).
__label__cf - Add a descriptive title and description which includes a detailed list of what has been changed and any known issues. You may also wish to include screenshots, examples and important design decisions you made in the description too.
__label__dc Python
__label__bw - .NET Core 3.0: this is to benefit from nullable annotations in the BCL.
__label__no - aws-amplify-react
__label__no - Issues with no clear steps to reproduce will not be triaged. If an issue is labeled with "needs info" and receives no further replies from the author of the issue for more than 5 days, it will be closed.
__label__no - [ ] Appropriate labels have been added to the PR (for example: label type: breaking change if it is a breaking change)
__label__dc - Avoid platform-dependent code
__label__no - caffe tag on StackOverflow,
__label__bw 1.  run npm link from the forked module.
__label__no Some hints:
__label__bw - CompressImages.cs - clones the repo, compresses the images, pushes the commit
__label__dc - If you wish to use command substitution to initialize a local variable, andthen check the exit status of the command substitution, you must declare thevariable on one line and perform the substitution on another. If you don't,the exit status will always indicate success, as it is the status of thelocal declaration, not the command substitution.
__label__cf - Summarize the change and the motivation for the change.
__label__sc The scope could be anything specifying place of the commit change. For exampleexpress-engine, common, etc.
__label__bw docker-compose down --remove-orphans
__label__sc - Push the branch to your fork on GitHub
__label__sc Pull requests for bugs may be sent without creating any proposal issue. If you believe that you know of a solution for a bug that has been filed, please leave a comment detailing your proposed fix.
__label__no When requesting or submitting new features, first consider whether it might be useful to others. Opensource projects are used by many developers, who may have entirely different needs to your own. Think aboutwhether or not your feature is likely to be used by other users of the project.
__label__bw If you update Ruby but don't update the parser gem(e.g., a new version may not be available yet), you may get a numberof warnings from the static analysis tools that we run via rake.Where possible, consider updating the parser gem as well.These warnings will look like these:
__label__no Introduction
__label__no If you do not provide a self-contained gist and would like your issue to be reviewed, do provide at a minimum:
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell asfollows:
__label__no File an issue if you find a bug in AMP. Provide a detailed description and steps for reproducing the bug; screenshots and working examples that demonstrate the problem are appreciated!
__label__bw - Tomcat 8
__label__sc - Create feature branches. Don't ask us to pull from your master branch.
__label__sc # run tests from a specific filenpm run cypress run -- --spec cypress/integration/explore/link.test.js
__label__no We welcome bug fixes and patches from 3rd party contributors. Pleasesee the Contributor Agreementfor details.
__label__no :+1::tada: First off, thanks for taking the time to contribute! :tada::+1:
__label__no bundle updatebundle exec rakegit commit -m "Release X.Y.Z"# Make sure you run gem signin as the cukebot@cucumber.io user before running the following step. Credentials can be found in 1Passwordrake release
__label__no Post-merge Responsibility
__label__cf 5.  If you've added code that should be tested, add tests.
__label__sc - docs: Documentation only changes
__label__cf In such cases, use the GitHub issue description to collect requirements anduse cases for your feature.
__label__dc void my_class::print_name() const {std::cout << name() << std::endl;}
__label__dc To reset the session (either when all tasks finished or if you wish to run a different session), run:
__label__sc - Rebase your branch and force push to your GitHub repository (this will update your Pull Request):
__label__no Alpha is the early stage of a release cycle and is typically made to test themechanics of an upcoming release. These should be considered relativelyunstable. The format for an alpha release tag is v4.3.0-alpha.1, which in thiscase indicates it is the first alpha release for 4.2.
__label__no Issue Submission Guidelines
__label__cf Coding
__label__no We do require certain guidelines to be followed so that the quality of the project remains top-notch:
__label__no 2.  The issue may already be resolved. Always try to reproduce the issue in the latest stable release.
__label__no Contributing
__label__sc 2.  Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.
__label__cf 7.  (Required for new flags) Add flags to tab_complete.sh file.
__label__bw To clone CRIU repo and switch to the proper branch, run:
__label__cf - Coding standards pointers
__label__sc Pull requests should be submitted from your cloned repository's master branch to the upstream master branch. Please make sure that you rebase your local branch against the upstream branch before you submit your pull request.
__label__sc - :arrow_up: :arrow_up: when upgrading dependencies
__label__no We are proactive
__label__sc We currently have 2 development branches, v1.1.x, which is used for the v1.1.X releases and v1.2.x for new feature developments.The v1.0.x branch was used for the v1.0.X releases but is no longer used.The master branch is synced with the latest stable release, but can include documentation updates.Since we follow semantic versioning, that means that pull requests that require a new (configuration) parameter need to be submitted to the v1.2.x branch. Pull requests that don't need a new parameter, such as a bug fix, should be submitted to the v1.1.x branch.
__label__no TO BUILD:
__label__no If you made it all the way to the end, bravo dear user, we love you. You can includethis emoji in the top of your ticket to signal to us that you did in fact read thisfile and are trying to conform to it as best as possible: ?
__label__no - If the issue happens while loading Bash-it, please also include your ~/.bash_profile or ~/.bashrc file,as well as the install location of Bash-it (default should be ~/.bash_it).
__label__sc - Cassandra Distributed Tests aka dtests
__label__dc Robo adheres to the PSR-2 Coding Style Guide for PHP code. An .editorconfig file is included with the repository to help you get up and running quickly. Most modern editors support this standard, but if yours does not or you would like to configure your editor manually, follow the guidelines in the document linked above.
__label__no - Development Process
__label__cf Create a ticket in the issue tracker.This serves as a placeholder for important feedback, review, or any future updates.
__label__no - Development
__label__sc 0. It's RECOMMENDED to commit hotfix (like typo) or feature PR to dev.
__label__no "Facil" comes from the Spanish word "easy", and this is embedded in facil.io's DNA.
__label__bw After editing the pg_hba.conf file you'll need to restart the PostgreSQL server for the changes to take effect.
__label__sc We have two main branches:
__label__no cd superset-frontendnpm run storybool
__label__sc If you think that your changes make one "logically" cohesive change to theproject, create a commit of them in the repository with:
__label__sc This will automatically open the test suite at http://127.0.0.1:9998 in the default browser, with livereload enabled.
__label__dc If there's existing JDBC Driver in place for Database of interest you can just create DbTypes configuration insidecubejs-jdbc-driver/driver/JDBCDriver.js.Most of times no additional adjustments required for base JDBCDriver implementation as JDBC is pretty standard.In case you need to tweak it a little bit please follow Implementing Driver steps but use JDBCDriver as your base driver class.
__label__no - QA: file bug reports, the more details you can give the better (e.g. screenshots with the console open)
__label__no We welcome contibutions in the form of pull requests, issues, or code reviews. Here are some quick guidelines to help ensure we can make use of your effort.
__label__no Contributing Rules
__label__sc Local Testing
__label__cf We both value and encourage the community to provide feedback about using ArrayFire and the issues they are facing.The more detailed the information, the easier it is for the developers to resolve the issue.
__label__cf - Clearly describe the issue including steps to reproduce when it is a bug.
__label__cf - Open a new Pull Request with the patch.
__label__no If you find a bug in the source code or a mistake in the documentation, you can help us by submitting an issue to our GitHub Repository. Even better, you can  submit a Pull Request with a fix.
__label__cf The goal of JSONView is to be a very simple, straightforward add-on that formats JSON. Given that, even though I'm very appreciative of the time and thought put into contributions, I regularly reject them because they add complexity to the add-on that I don't think should be there. Please consider filing an issue before doing any work, so you don't accidentally waste time on something I won't accept.
__label__no Open milestones can be patched if a minor bug is detected while if you're on a closed milestone, we'll more likelyask you to update first to an open one. See currently open milestones:
__label__sc - merge commits via fixup, etc
__label__sc 5.  All your changes are now in a single commit.
__label__sc You may have made more changes than you want to contribute at this point intime (this is very common). So, we select which changes we want to commitwith:
__label__sc If you make focused commits (instead of one monolithic commit) and have descriptivecommit messages, this will help speed up the review process.
__label__bw - Note: today you have to have Node.js and Java installed, but in the long run we hope move those tests out into their own repos
__label__no Contributing to AwesomeNestedSet
__label__sc License
__label__no Thank you for your attention to this project. Any bug, doc, examples and suggestion is appriciated. Here are some suggestions for you to create Pull Requests or open Issues.
__label__cf If you'd like to make some changes yourself, see the following:
__label__sc Submission
__label__cf If you do decide to work on an issue, comment saying you intend to pick it up and we'll assign it to you. If you decide it's too much, however, do tell us and we can try to help out or unassign it so it's free for someone else to pick up.
__label__sc Testing
__label__no Issues
__label__cf Setup
__label__cf - Make sure you have a GitHub account.
__label__sc Separate your changes
__label__sc - You also cannot run all tests within a file by selecting somewhere outside a testing class and attempting to run tests. You will see the message above.
__label__sc - Run mailslurper
__label__sc - Consider our release cycle - We try to follow SemVer v2.0.0. Randomly breaking public APIs is not an option.
__label__no +2pRVtn2xNJ9rBipGG86ZU88vurYjgPZrXaex3M1QGD/8+9Wlp/TR7YUzjiZbtwc6mpG4SUlwZheX9RbTRdjnLr7Qy+CddOWvGxebgk23/U90KrDyHDHig===2M/2
__label__sc Once you are ready, you can create a Pull Request for it to bemerged into the master branch in this repo.
__label__no If you believe you've found a bug on this project, but you're not sure how to fix it, you may create an issue with [Bug] prefixed in the title.
__label__sc When inserting an item on the middle of a linked list one reference was not being updated properly.
__label__sc - ve: used for changes specific to ViewEngine (legacy compiler/renderer).
__label__sc - If adding new feature:
__label__sc With your code ready to go, this is a good time to double-check your submission to make sure it follows our conventions. Here are the things to check:
__label__no - auth
__label__no - Determine which repository the enhancement should be suggested in.
__label__no - Commercial project-friendly licensing, allowing for private cookiecutters and private Cookiecutter-based tools
__label__tc - Send an email to the Azure Developer Platform team adpteam@microsoft.com alias.
__label__bw # Start the botpress serverbar/botpress $ yarn start
__label__no You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that we can use it. Please consider what kind of change it is:
__label__sc Short answer: with pull requests to the gunicorn repository.
__label__no Submitting a Pull Request (PR)
__label__sc git pull --ff upstream master
__label__tc We're all friends! Please try and adhere to our simple rules
__label__dc If your code is not straightforward for other contributors to understand, it is recommended to implement the code in a clear and efficient way, and provide sufficient comments and documentation.Apollo uses doxygen to help generate formatted API Document with command bash apollo.sh doc.Document your code following this guide How to document code.
__label__sc Commit Message Guidelines
__label__sc - This is usually the master branch.
__label__sc - docs: Documentation-only changes
__label__no - A clear description of the problem,
__label__no - Supporting the community by answering questions on the forum.
__label__no Got a Question or Problem?
__label__cf 3.  Create a separate branch, commit your work and push it to yourfork. If you add comments, please make sure that they are compatible withYARD:
__label__sc - Check the codebase to ensure that your feature doesn't already exist.
__label__sc - Try to be as specific as possible. Please not only explain what the feature does, but also how. If your request is about (or includes) changing or extending the UI, describe what the UI would look like and how the user would interact with it.
__label__no - Prerequisites
__label__no NOTE: If this is a feature you intend to implement, please be sure tosubmit the feature request before working on any code changes. This willallow members on the SDK team to have a discussion with you to ensure that it'sthe right design and that it makes sense to include in the SDK. Keep in mindthat other concerns like source and binary compatibility will also play adeciding factor.
__label__cf Steps towards contributions
__label__no - For a Major Feature, first open an issue and outline your proposal so that it can bediscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,and help you to craft the change so that it is successfully accepted into the project.
__label__sc You can publish your branch from GitHub for Windows, or run this command fromthe Git Shell:
__label__dc Jetbrains support (WebStorm/IntelliJ)
__label__sc - style: Changes that do not affect the meaning of the code (white-space, formatting, missingsemi-colons, etc)
__label__sc master?develop         <--- PR(bugfix/typo/3rd-PR)? PR{type}/{description}
__label__no Contributing to CodeTriage
__label__cf 1.  Please be as detailed as possible and provide plenty of context.
__label__no - Collection Extensions
__label__tc - PLEASE keep a civil and respectful tone when discussing and reviewing contributions.
__label__sc 4.  Commit your changes and push them to GitHub.
__label__sc - Commit both changes with the commit message Version bump.
__label__no 1.  I (@rbrito) may not even know that what you are proposing exists or havenot yet "seen the light" as to why I should use it instead of using whatI am currently using.
__label__no Our Standards
__label__dc import mathfrom typing import Union
__label__sc Where a patch set proposes to change the Bitcoin consensus, it must have beendiscussed extensively on the mailing list and IRC, be accompanied by a widelydiscussed BIP and have a generally widely perceived technical consensus of beinga worthwhile change based on the judgement of the maintainers.
__label__no - Commands
__label__no - Install and Start Elasticsearch
__label__no StackOverflow is a much better place to ask questions since:
__label__sc It is enough to provide this notification only once.
__label__sc - git rebase develop
__label__dc To keep the source consistent, readable, diffable and easy to merge, we use afairly rigid coding style, as defined by thegoogle-styleguide project. All patcheswill be expected to conform to the style outlinedhere.
__label__no - The operating system you're running it on.
__label__no - Related Issues - has a similar issue been reported before?
__label__bw - Install Yarn.
__label__sc This is a rough outline of what a contributor's workflow looks like:
__label__sc - Are the sources for the tests documented?
__label__no - Press Ctrl-c to stop it.
__label__dc Auto-formatter
__label__tc All contributors are expecting to abide by our Code of Conduct.
__label__dc - Don't leave commented out code. A record of this code is already preserved in the commit history.
__label__no Before you contribute
__label__sc - Send coherent history. - Make sure each individual commit in your pull request is meaningful.If you had to make multiple intermediate commits while developing, pleasesquash thembefore submitting.
__label__dc Put the implemented header always first in a .cpp file.
__label__dc CSharp
__label__tc Enforcement
__label__sc Here we now created a new branch called devel. This is the development branch.
__label__no - A stack trace if available, any Exception information.
__label__cf Contributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:
__label__sc - If pkgrel=1.1, change to pkgrel=1.2
__label__bw This will ask you some questions about the new package. Start with 0.0.0 as the first version (look generally at some of the other packages for how the package.json is structured).
__label__sc For non-bug-fixes, please open an issue first and discuss your idea to make sure we're on the same page.Alternatively, prepend your PR title with [discuss] to have a conversation around the code.
__label__no Responsibilities
__label__no - If the issue is due to a crash, include the stack trace -- throwable.printStackTrace() -- and any other detail that will shed light on the problem
__label__no - For issues in the web browser, check the JavaScript console and your Network tab in your DevTools.
__label__cf - Am I happy to release my code under the MIT license?
__label__no How to report a bug
__label__dc 2.  In your terminal, depending on the type of test, run either:
__label__cf - Send a pull request.
__label__sc - RecordingDbConnection keeps a log of every opened transaction, executed command and other things we likely care about
__label__dc Java styleguide
__label__cf 7.  Create a pull request
__label__sc - System.Runtime.Serialization.Formatters.Tests
__label__no Gunicorn follows the timeless, highly efficient and totally unfair systemknown as Benevolent dictator forlife, withBenoit Chesneau (aka benoitc), in the role of BDFL.  This means that alldecisions are made by default by me. Since making every decision myselfwould be highly unscalable, in practice decisions are spread acrossmultiple maintainers.
__label__sc - deps: Updates about dependencies
__label__dc return math.sqrt(x)
__label__dc - Always use statement blocks for control statements, e.g., in a for-loop, if-condition, ...
__label__no Typically these take the form of creating a Pull Request for Coral, andsubmitting it to be reviewed by a member of our team and the greater Coralcommunity.
__label__dc Versions of the beautifier adapted to other languages are available on branch attic-other.Take a look and feel free to resurrect them, but know it's pretty dusty back there.
__label__no - [ ] New algorithms are documented in the code with link(s) to external docs (flowcharts, w3c, chrome, firefox).
__label__dc - Elegance: New functions, classes or components should be well designed.
__label__ct - Improve our test coverage
__label__sc The integration tests provide a docker configuration for a SFTP and FTP server you can use to test the synchronization.A folder in /tmp is mounted into the docker container which can be used to compare the result after running PHPloy.
__label__sc - All tests need to be passing before your change can be merged. Werecommend you run tests locally (see below)
__label__no Contributing to Boostnote (Japanese)
__label__dc Coding style
__label__cf - The source of this project is written in javascript, not coffeescript or typescript. Please write your bug reports in JavaScript that can run in vanilla Node.js.
__label__no - Keep feature versions as small as possible, preferably one new feature per version.
__label__no To successfully do that, they must be compilable. The easiest way to do that is usinga fixture, which looks like this:
__label__no Open proposals are still under discussion. Please leave your concrete, constructive feedback on this proposal. +1s and other clutter posts which do not add to the discussion will be removed.
__label__no Contributing
__label__no - Attempt to replicate the problem, to ensure that it wasn't a coincidental incident.
__label__ct You could also contribute by reporting bugs, reproduction of bugs with sample code, documentation and test improvements.
__label__sc <type>(<scope>): <subject><BLANK LINE><body><BLANK LINE><footer>
__label__dc Please, adhere to the Google coding style guide:
__label__cf - Polish the example library or add new examples
__label__cf Making your First Code Contribution
__label__no When submitting an issue, please include a reproducible case that we can actually run. Protractor has a test Angular application available at http://www.protractortest.org/testapp which you can use for the reproducible test case. If there's an error, please include the error text.
__label__sc Optional. The footer should contain any information about Breaking Changes and is also the place toreference GitHub issues that this commit Closes.
__label__no Contributing to AVA
__label__sc The scope should be the name of the npm package affected as perceived by the person reading changelog generated from the commit messages.
__label__no Please follow this simple checklist before submitting:
__label__no - By default, all audio services now stream to a fifo pipe file instead of alsa backend.
__label__no Unclassified
__label__ct How can you contribute?
__label__no - The stacktrace for any errors you encountered
__label__no #pragma once
__label__no - Ask or Answer Questions
__label__no How to contribute
__label__no - The date/commit of the code you're running
__label__dc - In some cases we might use the work in progress disclaimer and document the issues in that until they are fixed.
__label__no * KIND, either express or implied.  See the License for the
__label__bw git clone git@github.com:USERNAME/allennlp.git
__label__ct If you are looking for ways to help you should start by looking at the Open Issues.  Please let us know if you plan to work on an issue so that others are not duplicating work.
__label__sc - Use VERBOSE=true npm run tdd to add logging output to the above command
__label__ct - Documentation
__label__cf 2.  Clone the repo. If it was already cloned, then git pull to get the latest from master.
__label__sc 2.  If you add a feature, it is best to write the test as if it would be anexample how to use the newly introduced feature and to test all major,newly introduced code.
__label__sc Document change on antvis/f2#123
__label__cf 3.  Pick an Issue you'd like to work on. Introduce yourself in that Issue.
__label__dc Please check your code using npm run lint before submitting your pull requests, as the CI build will fail if eslint fails.
__label__no Contributing to Meshroom
__label__sc Document change on antvis/g2plot#123
__label__sc - As with all pull requests, put your changes in a branch.For contributions that change the dc.js API, create your branch off of develop.If your contribution does not change the API, branch off of master instead.
__label__no Do you have a new cool feature that you'd like to contribute toContiki? Or a fix for a bug? Great! The Contiki project loves codecontributions, improvements, and bugfixes, but we require that theyfollow a set of guidelines and that they are contributed in a specificway.
__label__sc $ git commit -m "A brief summary of the commit>> A paragraph describing what changed and its impact."
__label__sc - Your commits have been squashed git rebase -i.
__label__no - queue: Issue has been categorized and is ready to be done in a following release (not necessarily in the next one).
__label__sc - Use the imperative mood ("Move cursor to..." not "Moves cursor to...")
__label__no Documentation
__label__cf - Check the pull requests tab to ensure that the feature isn't already in progress.
__label__cf 4.  Create a feature branch to work in
__label__sc Please update the tests to reflect your code changes. Pull requests will not be accepted if they are failing on Travis CI.
__label__sc - no dot (.) at the end
__label__no 2.  State your operating system and its version
__label__no DOs and DON'Ts
__label__sc - Get any changes from upstream.
__label__dc - All case statements inside a switch need an extra indent
__label__no - Flask server
__label__no Include details about your configuration, circuit and environment:
__label__no We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:
__label__no - Contribute Documentation
__label__no Make sure to mention the following things:
__label__sc To be accepted your code contribution must follow atoum's coding style.
__label__ct Or, if none of that interests you, join our dev mailing list and ask!
__label__bw See docs here
__label__bw To kick off the generation
__label__no How to become a contributor and submit your own code
__label__sc Conan is an Open Source MIT licensed project.Conan is developed by the Conan maintainers and a great community of contributors.
__label__dc - In Visual Studio under Tools > Options > Text Editor > C# > Advanced, make surePlace 'System' directives first when sorting usings option is disabled (unchecked).
__label__sc - ci: Changes to our CI configuration files and scripts (example scopes: Circle, BrowserStack, SauceLabs)
__label__no Branch Structure
__label__sc git push -u origin feature/#777
__label__cf Submit a pull request to the master branch to request merging your change.
__label__cf 1.  Stage the flavor on which the bug was found (make FLAVORS=<bugged flavor> stage).
__label__no Logo Resources of Cocos2d-x
__label__dc - Documentation comments preferred when useful for documentation, except when member variable is exposed to the Inspector GUI, in which case the comment is placed in Tooltip string so that it can aid users.
__label__bw 1)  Make sure that MonoTorrent.dll and SampleClient.exe are in the same folder
__label__cf How to Contribute
__label__bw 3.  Run Composer to get the dependencies: cd composer && php ../composer.phar install
__label__dc - Variable and function names that are visible outside of their modulemust begin with the name of the module. Like this:simple_udp_send(), which is in the simple-udp module, declared insimple-udp.h, and implemented in simple-udp.c.
__label__no - Language specification: ballerina-spec repo
__label__bw To compile a standalone browserify module, use the following command. A minified version will also be produced. The compiled bundles are placed inside dist. Since these are autogenerated, please don't include them in your pull requests.
__label__sc In general, we review pull requests first that best adhere to these suggestions.
__label__no - docker image is created from the local source file, instead of getting pulled from Docker hub
__label__cf About how to submit a PR refer to [Pull Request] (./pull-request.md).
__label__sc - platform-browser
__label__bw Install all dependencies:
__label__no Contribute
__label__cf - Report Bugs
__label__no - Provide a step-by-step description of the suggested enhancement in as many details as possible.
__label__no Has the issue gone stale?
__label__sc Testing
__label__bw - For development, it's usually best to use non-minified assets. Run rake build NOCOMPRESS=1 to skip minification.
__label__bw - npm test -- --watch runs an interactive test watcher.
__label__no Guidelines:
__label__dc 2.  We follow all of the relevant PSR recommendations from the PHP FrameworkInterop Group. Please submit code that follows these standards.The PHP CS Fixer tool can be helpful for formatting your code.
__label__no This Code of Conduct is adapted from the Contributor Covenant, version 1.4,available at http://contributor-covenant.org/version/1/4
__label__cf Note: You may gain more ground and avoid unecessary effort if you first open an issue with the proposed changes, but this step is not necessary.
__label__no - Superset version.
__label__bw sudo apt-get install mysql-server mysql-client
__label__sc Test in a local sample app
__label__sc Bringing this all together, the steps below should configure, build,and run all tests in the Debug compilation.
__label__no 2.  Version of Rails
__label__sc If you recently pushed your changes GitHub will automatically pop up a Compare & pull request button for any branches you recently pushed to. If you click that button it will automatically offer you to submit your pull-request to the confluentinc/ksql repository.
__label__sc To run the test suite, run the following command:
__label__ct What kinds of contributions make sense?
__label__tc Please be considerate towards maintainers when raising issues or presenting pull requests. Let's show the world that developers are civilized and selfless people.
__label__no Responsibilities
__label__no - Provide a title in the format of <Error> when <Task>
__label__dc - PSR-2 Coding Standard. The easiest way to apply the conventions is to install PHP CS Fixer.
__label__no - Ensure the bug was not already reported by searching on GitHub under Issues.
__label__bw 2.  git pull codeigniter develop
__label__no How to Contribute Japanese
__label__ct - "Good First Bug" issues are a good entry point to get familiar with Jetpack's code base.
__label__sc - Submit your pull request!
__label__no Feedback and Contribution
__label__bw - .NET Standard 1.3
__label__no 1.  This is the first step
__label__no 1.  Documentation
__label__dc We prohibit tools like dotPeek, ILSpy, JustDecompiler, or .NET Reflector which convert compiled assemblies into readable code.
__label__dc - enumerators:
__label__no aren't actually stored in that directory. Instead, you should add and commitimages (and any other static assets) to the superset-frontend/images directory.When the docs are deployed to https://superset.incubator.apache.org/, imagesare copied from there to the _static/images directory, just like they're referencedin the docs.
__label__tc - @AzureFunctions on twitter
__label__sc - Unit and/or acceptance tests
__label__cf 9.  Address review comments if any.
__label__sc 4.  Develop and test your changes as necessary.
__label__dc - Learn Chef
__label__sc 7.  Use the body to explain what and why vs. how(git tracks how it was changed in detail, don't repeat that)
__label__no You can also contribute to this list if you have a sample request.
__label__no First and foremost Amplify exposes to you WHAT things do and then HOW best to do them. The WHAT is at a functional use case with HOW being an opinionated implementation that you can override with
__label__sc - After the subject, skip one line and fill out a body if the subject line is not informative enough.
__label__bw git clone --recursive https://github.com/balena-io/etchercd etcher
__label__no Feature Requests
__label__sc git push origin --delete my-fix-branch
__label__no Thank you!
__label__no - https://help.github.com/articles/about-commit-email-addresses/
__label__no - Pull Requests
__label__cf Discovering the project structure
__label__no - [ ] Tests are testing the code
__label__sc Releasing
__label__sc - Cassandra Testing Guidelines - see TESTING.md
__label__bw 2.  Install all dependencies: yarn install
__label__bw 4.  Fire it up! Fire it up! Fire it up!
__label__no 2.  Configure and install the dependencies: script/bootstrap
__label__no Found an Issue?
__label__no How to suggest a feature or enhancement
__label__sc Each commit message consists of a header, a body, and a footer.
__label__sc 2.  If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md.
__label__sc - Try to keep pull requests short and submit separate ones for unrelatedfeatures, but feel free to combine simple bugfixes/tests into one pull request.
__label__no - List some other text editors or applications where this enhancement exists.
__label__no Your idea will have a much better chance of becoming reality if you contribute code for it (even if the code is incomplete!).
__label__no - Anything unusual about your environment or deployment
__label__no Using Git(Hub)
__label__sc This document is based on https://github.com/nayafia/contributing-template/blob/master/CONTRIBUTING-template.md
__label__no Reporting Bugs/Feature Requests
__label__no - Large renames of APIs
__label__cf Development
__label__sc - After the pull request is submitted:
__label__sc # Create a new branch for development. The name of branch should be semantic, avoiding words like 'update' or 'tmp'. We suggest to use feature/xxx, if the modification is about to implement a new feature.$ git checkout -b branch-name
__label__no Thank you for your interest in contributing back to CMB2. Please help us review your issues and/or merge your pull requests by following the below guidelines.
__label__ct - bugsnag: If an issue or exception in production code has been flagged via Bugsnag, it is labelled with this automatically.
__label__sc - update or bugfix
__label__no - There is a detailed log of the output in both build_output and code_drop\build_artifacts. The build_artifacts folders contain a lot of detail with each individual tool's output and reporting (helpful when wanting to see a visual of what tests failed).
__label__bw Next, start the app:
__label__sc - **Have good tests. If you don't have tests for every line and branch in your changes, I won't accept the PR.
__label__sc As a result, all decisions can be expressed as changes to therepository. An implementation change is a change to the source code. AnAPI change is a change to the API specification. A philosophy change isa change to the relevant documentation. And so on.
__label__no We sometimes run this to check if assets compile properly (seeheroku_rails_deflate):
__label__no - Before you get started
__label__sc How to Provide Your First Patch
__label__no Helping out
__label__dc - Images (icons) should all be saved in the images directory (or one of its subdirectories).
__label__no Contributing to bqplot
__label__cf - [ ] Add @babel/syntax-new-syntax to @babel/standalone.
__label__sc An editor will be opened with your 3 commits, all prefixed by pick.
__label__ct How Can I Contribute?
__label__ct - Discuss changes
__label__no Finally, if you are up to date, supported, have collected information about the problem, and have the best reproduction instructions you can give, you are ready to open an issue.
__label__sc To publish in Verdaccio, start a verdaccio instance and then,
__label__sc - no dot (.) at the end
__label__cf Contributing Workflow
__label__no Our version numbering roughly follows Semantic Versioning standard. Our standard version numbers look like X.Y.Z which mean:
__label__no - Non-trivial feature requests welcome (example)
__label__dc DEBUG=linaria* LINARIA_LOG=debug npx babel -d dist PATH_TO_COMPONENT
__label__ct Fix Bugs
__label__no If you have any comment or advice, please report your issue,or make any change as you wish and submit an PR.
__label__dc - Use the final keyword where its use can be justified.
__label__no Contributing to CMB2
__label__no - Finding dependency cycles between packages
__label__no Contributing Guide
__label__no - Code
__label__sc Submitting PRs
__label__no - Updating NPM packages
__label__dc The Spring Java Format Plugins are added to the build. Checkstyle will enforce the consistency of the code. Nevertheless there are some disabled rules, due to backward compatibility. You can find these disabled rules in a comment in src/checkstyle.xml.
__label__no - which version of beanstalkd you're using
__label__sc And finally, please update the CHANGELOG with notes on your contribution in the "Unreleased" section at the top.
__label__no To save time and headaches we use Vagrant. Vagrant is a automation tool for VirtualBox that will help you spin up a virtual environment with pretty much everything in place and ready for you to start hacking (even on Windows!)
__label__no To save your and our time, we will be systematically closing all the issues that are requests for general support and redirecting people to StackOverflow.
__label__no Thank you for taking the time to contribute! ?
__label__no - asciinema/asciinema-player - player
__label__cf Getting Started
__label__sc - npm run static-serve to load the application along with the service worker asset using live-server
__label__no Working on the website
__label__sc - Add your work. For example by cherry-picking your changes from another branch.
__label__no - If you are able to create one, include a Minimal Working Examplethat reproduces the issue.
__label__sc Our pre-commit hooks verify that your commit message matches this format when committing. If you are working on some in progress commits and don't care about the pre-commit hook, pass the --no-verify (-n) flag to git when committing (e.g. git commit -n -m "wip").
__label__no - [ ] If a breaking change or a change to a commonly used API, the proposed changes have been discussed and agreed upon in the weekly team meeting (or a separate meeting if a larger change).
__label__sc - If your pull request fixes an issue in the issue tracker, use the closes/fixes/resolves syntax in the body to indicate this.
__label__no - Unit tests
__label__sc By submitting a patch, you agree to allow the project owners to license yourwork under the terms of the LICENSE. Additionally, you grant the projectowners a license under copyright covering your contribution to the extentpermitted by law. Finally, you confirm that you own said copyright, have thelegal authority to grant said license, and in doing so are not violating anygrant of rights you have made to third parties, including your employer.
__label__tc - Be friendly and patient,
__label__no If you think you've found a bug, try to make sure it's actually a bug, and notthe result of something else going wrong. For example, make sure your web serveris functioning correctly, and try the issue in another browser, if possible. Besure to search for similar bugs. Perhaps somebody has already reported theissue. If so, you should add any additional information to the existing bug. Itmight make it easier for us to fix, and at the very least it'll get bumpedhigher onto the list.
__label__sc Make the changes to the code and tests, following the code conventions as you go. Once you have finished, commit the changes to your branch:
__label__sc - Include the relevant issue number(s) if applicable
__label__sc 5.  If the PR is accepted (does not require review/comments/modifications),your branch is merged into master.
__label__no WE ARE USING VIRTUALBOX 4.3.20 DUE TO COMPATABILITY ISSUES WITH VBOX GUEST ADDITIONS.
__label__cf 6.  Submit a pull request
__label__tc - Using welcoming and inclusive language
__label__dc - In Visual Studio, run CodeMaid > Cleanup Active Document or Ctrl+M, Space on each file that you have altered. This will ensure the correct whitespace consistency.
__label__sc This specification is inspired and supersedes the AngularJS commit message format.
__label__dc Once you've done that, you can run the make reindent command from the topdirectory to recursively check and correct the style of any source files in thecurrent directory. Under the hood, make reindent will run citus_indent andsome other style corrections for you.
__label__sc We have very precise rules over how our git commit messages can be formatted.  This leads to morereadable messages that are easy to follow when looking through the project history.  But also,we use the git commit messages to generate the Angular DevKit change log.
__label__dc Develop the dictionary UI live
__label__no - Time
__label__no Open in Gitpod
__label__sc GitHub provides additional document on forking a repository and creating a pull request.
__label__sc Install PHP if you haven't yet, then install composer:https://getcomposer.org/download/
__label__no 1.  What version of C3?
__label__sc - Tests can also be run on the browser by going to http://localhost:8888/spec whenserver is running.
__label__no If the language that you are interested in translating is not already listed, create a new account on Crowdin, join the project, and contact the project owner (https://crowdin.com/profile/kspearrin).
__label__no Triage Issues Open Source Helpers
__label__bw Dependencies
__label__dc - Follow existing code conventions. Most of what we do follows standard .NETconventions except in a few places.
__label__cf - If you are an individual writing original source code and you're sure youown the intellectual property, then you'll need to sign an [individual CLA](http://code.google.com/legal/individual-cla-v1.0.html).
__label__sc - Review BoardFor large changes. Create an account on Hue's Review Board.Post the patch against the "hue-rw" repository. Enter "hue" in the "groups" field.Example: https://review.cloudera.org/r/4019/. Blog posts about using Code Reviews and the extended process.
__label__no - Coding Rules
__label__sc nosetests
__label__cf If this is something you think you can fix, then fork Active Admin and createa branch with a descriptive name.
__label__no To get started, sign the Contributor License Agreement.
__label__no Want to show Apache JMeter some love? Help out by contributing!
__label__no 3.  What are the EXACT steps to reproduce this problem (including source/destination types, mapping configuration and execution)?
__label__dc - Offsets must be in hexadecimal. Example: 0x00408CF0.
__label__no I fixed a bug
__label__sc git checkout master
__label__no - BLAS library,
__label__ct 2.  Docsand via a pair of YARD plugins.
__label__dc # (For tests names xxxx.test.ts)$ node --inspect-brk /path/to/aws-cdk/node_modules/.bin/jest -i -t 'TESTNAME'
__label__sc This project subscribes to the Moya Contributors Guidelines which TLDR: means we give out push access easily and often.
__label__sc - Be sure to use the latest version of Ruby 2 when you write and test your code
__label__cf 4.  Build test versions of the images (make FLAVORS=<new distro flavors> build).
__label__no - Anything unusual about your environment or deployment
__label__sc 1.  Need: What function you want to achieve (Generally, please point out which issue is related).
__label__dc - React Testing Cookbook
__label__no - Set up the Ballerina plugins
__label__cf Join the community
__label__sc - e.g fix/subproviders/missing-import
__label__cf New Features
__label__sc Submitting patches
__label__sc npm run lint
__label__no For the record, when this document mentions "I", it mostly means RogBrito's (@rbrito) is the one to blame.
__label__bw Common Top Level Tasks
__label__no * Description of the change, thanks to [@contributor](https://github.com/contributor) (#PR).
__label__dc If you wish, you can format all changed resources in your working treeautomatically if thetools/code-style/uncrustify-changed.shscript is added as a Git pre-commithook to your Gitconfiguration.
__label__dc - Use semicolons ;
__label__bw Next step is to fork the repository on GitHub and clone the fork to you localmachine. For more details on forking see the GitHubDocumentation.
__label__no - We are comfortable supporting the proposed API for the long term.
__label__no - [file] osd_disk_activate: edit the src/daemon/osd_scenarios/osd_disk_activate.sh file
__label__bw Prepare your environment:
__label__no Contributor License Agreement
__label__dc - PSR-2 Coding Standard - The easiest way to apply the conventions is to install PHP Code Sniffer.
__label__no CefSharp vs Chromium Embedded Framework(CEF)
__label__sc 3.  Install the development dependencies by running bundle install.To install rails other than latest (set in Gemfile): RAILS='5-2-stable' bundle install
__label__no - Browsers and Operating System - is this a problem with all browsers?
__label__sc You can rebase your local dev on upstream/dev (to remove any merge commits), rename it, and recreate dev
__label__no - Submission Guidelines
__label__sc - "I have tested the code", involving change-specific manual testing inaddition to running the unit, functional, or fuzz tests, and in case it isnot obvious how the manual testing was done, it should be described;
__label__no - Submitting a fix
__label__sc git show -p
__label__no We would love for you to contribute to Angular Flex Layout and help make it ever better!As a contributor, here are the guidelines we would like you to follow:
__label__no - Cypress offers support via email when signing up for any of our our paid plans, so remind them that this is an option. Cypress also offers screen sharing and workshops with our premium support options if they would like something higher-touch.
__label__sc *. DO NOT commit any PR to such a branch.
__label__no Try to give your issue a title that is succinct and specific. The devs will rename issues as needed to keep track of them.
__label__sc Peer Review
__label__no - What you expected would happen
__label__no - Encourage people in testing their code and keep communicating their needs
__label__sc - Short description of the payload of pull request.
__label__sc - Sort using statements
__label__bw This outputs a lot of debugging lines. To focus on an individual module, run with DEBUG=cypress:launcher for instance.
__label__no 1.  Version of onion (or master)
__label__no - If you have a defect please include the following:
__label__no Feel free to star the repository. This will help increase the visibility of the project, therefore attracting more users and contributors to Shields!
__label__no Open an issue which describes the feature you would like to see, why you want it, how it should work, etc.
__label__cf GitHub has outlined instructions for forking a repo. To work on an update to this repo, you will:
__label__no Contributing to Cytoscape.js
__label__sc - refactor: A code change that neither fixes a bug nor adds a feature
__label__no Line Endings : If working on windows OS ensure git is installed with Checkout Windows-style, commit Unix-style option or core.autocrlf set to true in git config. If working on Unix based Linux or MacOS ensure git is installed with Checkout as-is, commit Unix-style option or core.autocrlf set to input in git config
__label__sc - Ensure your PR addresses three of the most common problems:
__label__tc Please be considerate towards maintainers when raising issues or presenting pull requests. Let's show theworld that developers are civilized and selfless people.
__label__no Thank you to all our backers! [Become a backer]
__label__dc - All of your code should be in at least a namespace named after the package and conform to the naming convention specified earlier in this document.
__label__sc When you're working on a component:
__label__no - fixtures
__label__dc Coding Rules
__label__no Licensing
__label__no - apache-superset/superset-ui-pluginscontains the code for the default visualizations that ship with Supersetand are maintained by the core community.
__label__dc Please refer to the community Ruby & Rails Style Guides created by bbatsov, author of Rubocop.
__label__tc - A Committer is a subset of contributors who have been given write access to the repository.
__label__sc Pull Request Philosophy
__label__sc - Use the imperative mood ("Move cursor to..." not "Moves cursor to...")
__label__no Thanks for taking a look at the project and thinking about contributing!
__label__sc - All code should compile without errors or warnings.
__label__dc - Code may be run through astyle version 3 or newer. If using astyle, it is important that the astyle changes go into their own commit, so that style changes are not mixed with actual code changes. Command: astyle --options=rawtherapee.astylerc code.cc
__label__no - See the discussion in issue #3853
__label__tc Communication Channels
__label__no Translation
__label__bw If you don't want to compile and run the CompressImagesFunction directly, you can use docker. See the image on dockerhub.
__label__dc - eslint
__label__dc Then "cd GEMNAME-VERSION" to review the code.We presume that the Rubygems site will not insert malicious code into whatit distributes, but clearly individual gem writers can be malicious.
__label__dc - Define the method as a function on the Cheerio prototype
__label__sc Commit Message Footer
__label__no Example: We are creating a new AWS SAM resource called "API". Here is how itwill look:
__label__cf The general workflow for code contributions:
__label__cf 2.  Click the Compare & pull request button next to your branch.
__label__sc You can run tests + lint for all packages (slow) via:
__label__no We welcome you to use the GitHub issue tracker to report bugs or suggest features.
__label__tc - Twitter: http://www.twitter.com/cocos2dx
__label__sc - Re-run the test suite to ensure tests are still passing.
__label__sc To create an RFC follow this process:
__label__no This project is open source, and as such, the maintainers give their free time to build and maintain the source codeheld within. They make the code freely available in the hope that it will be of use to other developers. It would beextremely unfair for them to suffer abuse or anger for their hard work.
__label__sc - Please do not upgrade dependencies or build tools unless you have a good reason for it. Doing so can easily introduce bugs that are hard to track down.
__label__no Contributors don't need to worry about versions, this is something Committers do at important milestones:
__label__no - Ask other Cypress users for help in our chat.
__label__cf 1.  Fork the repository.
__label__bw 3.  from the root of the project: yarn to install all dependencies
__label__sc - One pull request per feature - If you want to do more than one thing, send multiple pull requests.
__label__no - libpcap: https://github.com/the-tcpdump-group/libpcap/tree/libpcap-1.7.4
__label__cf - Read Open Source Contribution Etiquette and Don't "Push" Your Pull Requests.
__label__ct - Money: we welcome financial contributions in full transparency on our open collective.
__label__sc We actively welcome your pull requests:
__label__sc Robolectric tests are required for most changes, and should be submitted along with the PRExceptions include Bluetooth or Android OS-level changes that cannot be tested with Robolectric. Examples of Robolectric tests exist in the src/test folder.
__label__sc - no dot (.) at the end
__label__cf - Decoupling logic or creation of new utilities.
__label__cf 1.  Set up Git (Windows, Mac & Linux)
__label__dc - a = b and not a=b.
__label__sc - A few unit tests should be added for a new feature or an important bug fix.
__label__sc - Capitalize the subject line
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:
__label__sc To run the tests without linting, use rake test.
__label__cf 3.  Setup all dependencies and build. Chakra UI uses yarn and lerna, so runyarn bootstrap. This command will install dependencies, bootstrap the repousing lerna and build all packages.
__label__no """body is the Comment body, the content of the Comment."""body: String!
__label__no - If it's a duplicate, close with link to bug already reported.
__label__no - Please mention if you've checked it in other browsers as well
__label__no Contributing
__label__no - Check if there is an issue that already covers or relates to it (including closed issues)
__label__sc Commit Message Format
__label__no docker push courseradl/courseradl
__label__sc - changing the side effects of using a particular API
__label__no - Write a clear and concise description, with particularly clear steps to reproduce the problem. Include logs that display the bug. Try to report only facts in your issue report, keeping your assumptions out of it.
__label__sc Before you submit a pull request, check that it meets these guidelines:
__label__sc Sometimes we may need you to rebase your commit against the latest code before we can review it further. If this happens, you can do the following:
__label__no - Git Commit Specific
__label__sc - If you are an individual writing original source code and you're sure youown the intellectual property, then you'll need to sign an individualCLA.
__label__cf - Clearly describe what is being fixed. If possible, reference a bug report or a feature request.
__label__sc Then you can create a Pull Request at g2plot.
__label__sc 2.  One feature per pull request. Each PR should have one focus, and all the code changes should be supporting that one feature or bug fix. Using a separate branch for each feature should help you manage developing multiple features at once.
__label__sc - In the description, explain your changes and the problem they are solving. Be sure to also call outany breaking changes as described above.
__label__cf 1.  Fork the repo
__label__sc - grunt watch:build watch for changes and run build
__label__sc $ composer install
__label__sc - Do not end the subject line with a period
__label__no If you are considering a contribution, please read and follow these guidelines.
__label__no Please do not post installation, build, usage, or modeling questions, or other requests for help to Issues.Use the caffe-users list instead.This helps developers maintain a clear, uncluttered, and efficient view of the state of Caffe.See the chapter caffe-users below for guidance on posting to the users list.
__label__bw However, this will be time consuming. In this section we'll describe some common issues you may encounter and some moretargeted commands you can run to resolve your issue.
__label__sc - A member of the Azure SDK team will review the pull request on GitHub.
__label__dc Architecture of the codebase
__label__no - dotnet msbuild eng\mgmt.proj /t:Build /p:scope=Compute
__label__sc - To add a dependency for a specific module, run yarn add <dep> inside the module's directory.
__label__no Exceptions:
__label__sc - chore: Other changes that don't modify src or test files
__label__no - Deployment
__label__bw Step 5: Run the tests
__label__cf - Fork the repo
__label__no Introduction
__label__cf 1.  Add flavors for new Ceph versions to the Makefile.
__label__sc You should do all of your development for the issue in this branch.
__label__no 3.  Provide a small test-case and a link to a gist containing your entire metabox registration code.
__label__dc Do not modify a String literal in-place(e.g., using "<<", "sub!", or "gsub!") until you have applied ".dup" to it.There are current plans thatRuby 3's string literals will be immutable.See issue 11473 for more.Even if this doesn't happen, freezing string literals is both faster andreduces the risk of accidentally modifying a shared string.Use "dup" on a string literal to produce a mutable string;since "dup" is already permitted in the language,this provides a simple backwards-compatible way for us to indicatethat the String is mutable in this case.For example, if you want to build a string using append, do this:
__label__no Contributing to SyncTrayzor
__label__no Y Axis
__label__no - Trivial documentation issues welcome (example)
__label__dc To lint the code run at the command prompt.
__label__no 2.  Submit a reduced test case that clearly demonstrates the bug. This means submitting a plunker or jsfiddle with the bare minimum of code necessary to reproduce the bug. Without this, your issue may be closed as invalid.
__label__tc - Please do not derail or troll issues. Keep the discussion on topic andrespect the opinions of others
__label__sc - Make sure all tests pass. Visit test/index.html in your browser torun them.
__label__no 1.  Open Developer Command Prompt
__label__no Updating or filing a new issue
__label__sc Pull Requests
__label__no Issues
__label__no - Possible workaround
__label__no Contributing to Mongoose
__label__sc - If necessary, you can have an options.json with different options in each subfolder.
__label__no Deployment
__label__cf Then you can submit it back as a Pull Request for inclusion here.
__label__sc While you're working away in your branch it's quite possible that your upstream dev may be updated. If this happens you should:
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell asfollows:
__label__dc - Reformat file
__label__bw - Any IDE which can compile C# code.
__label__no This section is for project maintainers.
__label__cf Please ask first before embarking on any significant pull request (e.g. implementing features, refactoring code, porting to a different language),otherwise you risk spending a lot of time working on something that the project's developers might not want to merge into the project.
__label__no Thanks for taking the time to contribute! :smile:
__label__sc 1.  To rebase and squash based on the remote branch
__label__no - Want to paste some code or output? Put ``` on a line above and below your code/output. See GFM's Fenced Code Blocks for details.
__label__no 5.  Remove it after the next 2 minor versions or next major version, whichever comes first.
__label__no - Run bin/rake release from the target branch once the PR is merged.
__label__bw Optionally you can generate Eclipse project by running
__label__sc Licensing is very important to open source projects. It helps ensure the software continues to be available under the terms that the author desired.
__label__no - If you intend to implement this feature, indicate that you'd like to theissue to be assigned to you
__label__bw Captain by default uses captain.localhost as its root domain. It's not always needed, but if you need a rootdomain for your development, you can simply run a local DNS server on your local machine and point
__label__sc REMOTE=true bundle exec rake
__label__no - Cross-platform and cross-version support are more important than features/functionality
__label__no - Question or Problem?
__label__cf If you're making big changes, consider discussing it on themailing list first. You might save yourself a lot of time if itturns out that the changes you want to make aren't a good fit forthe project. This is especially true if you are adding newfunctionality.
__label__sc 2.  Allows for a way to verify if the stacks are still valid CloudFormation templates, as part of an intrusive change.This is done by running yarn integ which will run cdk deploy across all of the integration tests in that package.Remember to set up AWS credentials before doing this.
__label__no - Ensure the bug was not already reported by searching for existing issues in Moloch
__label__dc - Are the documentation guidelines followed?
__label__no Credits
__label__no Feature Requests
__label__sc 5.  Add tests. We need good pytests for your code. This will help us keep the project stable.
__label__sc The header is mandatory. For changes which are shown in the changelog (fix, feat,perf and revert), the package and scope fields are mandatory.
__label__dc If your prop-mapping functions don't depend on OwnProps it is safe to leave that out of the type annotation.
__label__cf - ASTs (Abstract Syntax Tree): The Babel AST spec is a bit different from ESTree. The differences are listed here.
__label__sc - Explain why this changes will be useful to most Unifiedtransform users
__label__no Where "standards compliant" refers to the default policies of bitcoin-core,  we adhere to the following:
__label__dc - reselect: we use reselect heavily to ensure that state selectors are as fast as they can be. Please have a read of its main page, especially the sharing Selectors with Props Across Multiple Components section.
__label__sc Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.
__label__no How to Contribute
__label__bw Set up your dolphinscheduler GitHub Repository
__label__no - self health monitoring is disabled in debug so that we can see possible crashes
__label__bw Setup packages
__label__dc - Expression-bodied members;
__label__bw Debian-based Linux (Ubuntu, Debian)
__label__no This section includes step-by-step descriptions of common workflows.
__label__no Your questions may be asked and solved by others. So please spend several minutes on searching. Remember DRY, both code and questions.
__label__sc The MonoGame.Extended project is under the MIT License unless a portion of code is explicitly stated elsewhere. See the LICENSE for more details. Third-party libraries used by MonoGame.Extended are under their own licenses, we always seek permission from the original author of those libraries.. Please refer to those libraries for details on the license they use.
__label__dc 3.  If a string literal has the same value in two or more places, it should be a single constant referenced in both places.
__label__no Note: If you find a Closed issue that seems like it is the same thing that you're experiencing, open a new issue and include a link to the original issue in the body of your new one.
__label__ct - security: If you spot an issue related to security issues (e.g. invalid SSL certs, potential CSRF issues), mark it with this label. Don't forget to be a good OSS citizen and always report zero-day issues through a private channel to minimise impact to your fellow users!
__label__sc After your pull request is merged
__label__sc 8.  Open a Pull Requestwith a clear title and description.
__label__no Translate
__label__no Render Documentation
__label__no Issues
__label__tc - Be respectful of time and language differences between community members ( such as scheduling meetings, email/issue responsiveness, etc ).
__label__dc - Adhere to ISO C99 in all C language source files. Exceptions areallowed for those platform-dependent source files that rely on theextensions of a specific set of compilers.
__label__sc - If we suggest changes then:
__label__sc git checkout -b <topic-branch-name>
__label__sc - Are the inputs to the functions sufficiently tested?
__label__sc IMPORTANT: By submitting a patch, you agree to allow the project owner to license your work under the same license as that used by the project.
__label__cf 1.  No --force pushes or modifying the Git history in any way.
__label__sc For PR adding new features, I'd be very thankful if you could add eithera unittest testing the added feature or a bash script test, thanks!
__label__cf - Is it a requested change or feature?
__label__sc 3.  Remember to make a separate branch on your fork. This makes it a lot easier for the core developers to helpgetting your pull-request ready.
__label__no - now only two mandatory steps remain:
__label__sc Contributing to CUPS
__label__no gem owner aruba --add <NEW OWNER RUBYGEMS EMAIL>
__label__dc 2.  You can use [codeformatter] (https://github.com/dotnet/codeformatter) if you can run VS2015 to automatically update your format
__label__sc export SUPERSET_CONFIG=tests.superset_test_configsuperset db upgradesuperset initsuperset load_test_userssuperset load_examplessuperset run --port 8081
__label__no How to Help?
__label__no - Build and improve github page
__label__sc To run the tests run at the command prompt.
__label__no 3.  If you use Xprivacy read and understand THIS first! Give our app another try after reading.
__label__no SEEKING
__label__dc - All required reused components MUST be open source software (OSS).It is not acceptable to insert a dependencythat requires proprietary software; making it portable so it can usesome proprietary software is gratefully welcome.We also have to combine them legally in the way they are used.
__label__sc - No merge-commitsIf you have commits that looks like this "Merge branch 'my-branch' into dev" or "Merge branch 'dev' of github .com/akkadotnet/akka.net into dev" you're probaly using merge instead of rebase locally. See below on Handling updates from upstream.
__label__no - We permit returning comments when the author has the following conditionsassociated with their account: SUSPENDED, BANNED, or PENDING_DELETION.
__label__no - Screenshots and animated GIFs
__label__cf 1.  Click 'watch' on the github repo
__label__no :aws_secret_access_key: yyy
__label__sc - perf: A code change that improves performance
__label__tc - #bitcoinjs-dev on Freenode IRC
__label__bw - Ensure you have the latest version of Node and Yarn.
__label__tc - Showing empathy towards other community members
__label__no New Platforms
__label__no - Explain that this issue if a duplicate of another issue, linking to the relevant issue (#1234).
__label__no Bolt has a warm, welcoming, and helpful team of core developers who can, collectively,help you to get a new feature into Bolt.
__label__no Contributing
__label__sc - Add prefix [WIP] to title if not ready for review (WIP = work-in-progress). We recommend creating a PR with [WIP] first and remove it once you have passed CI test and read through your code changes at least once.
__label__no Found an Issue?
__label__sc Updating the Commit Message
__label__cf 3.  Checkout a relevant branch like: git checkout some-branch
__label__sc - WebJobs.Script.Test.Integration
__label__dc However, there are still some styles that the linter cannot pick up. If you are unsure about something, looking at Airbnb's Style Guide will guide you in the right direction.
__label__no - Open a new Release Proposal MR, and write History as node CHANGELOG. Don't forget to correct content in documentation which is related to the releasing version. Commits can be generated automatically.$ npm run commits
__label__sc The scope could be anything specifying place of the commit change. For example DateObject,configuration, yearView, monthView, dayView, hourVuew, minuteView, templates, etc...
__label__no 2.  As much relevant information as possible including the exact steps to reproduce the bug.
__label__no Thank you to all our sponsors! (please ask your company to also support this open source project by becoming a sponsor)
__label__sc A philosophy we would like to strongly encourage is
__label__dc - Lua must be installed.
__label__dc 2.  Build the CDK application using the appropriate npm script (typically, yarn build) and then run the link-all.sh script as so -
__label__sc - util or lib for changes to the utils or libraries
__label__no Any questions posted to Protractor's Github Issues will be closed with this note:
__label__no Branch Strategy
__label__no General info
__label__sc - Title of the pull request is clear and informative
__label__no Help us keep UI Kitten open and inclusive. Please read and follow our Code of Conduct.
__label__bw You'll need to have git installed obviously. Begin by forking themain repository and then getting the code from your forked copy:
__label__sc - Please commit your code after passing all of the unit tests.
__label__sc This is script will:
__label__cf 1.  You are working against the latest source on the master branch.
__label__sc git pull [--rebase] upstream master
__label__sc 3.  You can now work directly in vendor/api-platform/core, create a new branch: git checkout -b my_patch
__label__bw This method works if you want to submit a patch via email, butthe difference in using the sources distribution and a VCS is that you have tomanually generate the patch file by using diff. If this is what you want, youcan download the sources from the "Source Code Distributions" section of theDownload Page. There is one such page for every major Tomcat version:
__label__sc Any line of the commit message cannot be longer 100 characters! This allows the message to be easierto read on GitHub as well as in various git tools.
__label__sc - Include unit tests if applicable
__label__bw export enum FeatureFlag {SCOPED_FILTER = 'SCOPED_FILTER',}
__label__cf - Is my code formatted using the PSR-2 coding standard?
__label__dc - Do not remove any existing positional elements from functions. We need to maintain compatibility with older versions of Chocolatey.
__label__no Contributing guidelines
__label__dc - After you made your translations, ensure that you added your locale key in alphabetical order at line in the tests/TestCase.php file for the tests.
__label__dc - Internal functions that aren't to be used by the end user should start with an underscore, e.g. _my-new-internal-function.
__label__bw - Clone the repository and run the commands inside WSL 2.
__label__no Without this change the install script will not fully install the new
__label__dc - The linter is also run as part of the full test suite with rake
__label__no Time
__label__sc This approach means we can exercise all the features in DbUp for all target databases without ever touching a real database. This approach does not test that the database driver is setup correctly and that DbUp can actually run commands against that database. But this is easy to test manually, is unlikely to ever break and would be reported/fixed very quickly.
__label__no - enhancement issues are features we're open to including
__label__tc Got a Question or Problem?
__label__no Updating documentation
__label__no - How to reproduce it. Bugs with a failing test in a pull request get fixed much quicker. Some bugs may never be fixed.
__label__sc git stash
__label__no - version of compodoc, Node.js used
__label__sc At this point, you should switch back to your master branch and make sure it'sup to date with Active Admin's master branch:
__label__dc Historically the gems that cause trouble updating in this app aregithub_api, octokit, and the various "pronto" gems.If you update Rubocop you're likely to need to make a number of changes(either to code or to disable a new checker).
__label__sc In order for us (YANDEX LLC) to accept patches and other contributions from you, you may adopt our Yandex Contributor License Agreement (the "CLA"). The current version of the CLA you may find here:
__label__sc $ cmake -Bdebug-build -H. -DCMAKE_BUILD_TYPE=Debug -DCATCH_BUILD_EXAMPLES=ON -DCATCH_BUILD_EXTRA_TESTS=ON
__label__sc * rationale behind the specific implementation
__label__no Current TSC members
__label__no - be saved as a stand alone script in the altair/examples/ directory.
__label__sc 3.  Ensure local tests pass.
__label__sc All features should be worked out of a well named feature branch. Branch off the master branch.  Submit a pull request to merge your work into the master branch when your work is ready for review.
__label__sc Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.
__label__dc We're passionate about what code can do rather how it's formatted.But in order to make code and docs maintainable following style guides will be enforced.Following these guidelines is not a requirement but you can save some time for maintainers if you apply those to your contribution beforehand.
__label__cf - Send me a pull request on GitHub.
__label__no - questions and answers stay available for public viewing so your question / answer might help someone else
__label__sc - execute npm install to install the necessary dependencies
__label__sc - Commit all changes to ts, js, and d.ts files.
__label__no I found a bug
__label__sc 3.  Related Testing: Briefly descirbe what part of testing is relevant to your modification.
__label__no - If an issues is already open, make a comment that you are experiencing the same thing and provide any additional details
__label__sc - assertThat(myList).containsExactly("a", "b", "c"); instead of assertTrue(myList.contains("a", "b", "c"));
__label__sc - Don't branch from master! This will cause you pain!
__label__bw create-new-snippet <my-snippet-name>
__label__no - Code of Conduct
__label__no Contribution Guidelines
__label__sc - Create your patch, including appropriate test cases.
__label__sc You can do some things to increase the chance that your pull request is accepted the first time:
__label__cf 8.  When your work is ready for the mycli team to review it, push your branch to your fork:
__label__no - [StackOverflow](http://stackoverflow.com/questions/ask?tags=ruby squib) with the tag "ruby" and "squib" will get you answers quickly and a great way to document questions for future Squibbers.
__label__sc <type>(<scope>): <subject><BLANK LINE><body><BLANK LINE><footer>
__label__no - Get Buyoff Or Find Open Community Issues/Features
__label__ct - writing documentation
__label__sc Respond to Feedback on Pull Request
__label__sc When dividing your change into a series of commits, take special care toensure that CRIU builds and runs properly after each commit in theseries.  Developers using git bisect to track down a problem can end upsplitting your patch series at any point; they will not thank you if youintroduce bugs in the middle.
__label__sc Render tests should describe what the produced image is:
__label__sc 5.  Squash your changes to a single commit.  This maintains clean change history.
__label__no When you're not sure where your issue belongs, report it at arduino/Arduino and we'll move it to where it belongs (but remember: Only bug reports and feature requests, do not ask for help with your own code there).
__label__no */
__label__cf In terminal window 2 (your react app to test use-http in)
__label__dc type DispatchProps = {createNote: () => any;trashNote: (noteId: T.EntityId) => any;}
__label__sc Waiting For Feedback
__label__no So first of all, If the Devilbox makes your life easier, star it on GitHub!
__label__cf - Use reasonable titles; refrain from using overly long or capitalized titles as they are usually annoying and do little to encourage others to help :smile:
__label__no Here's help on how to make contributions, divided into the following sections:
__label__no Contribution Guidlines
__label__no Making Trivial Changes
__label__dc Performance is critical to this project. Please get familiar with React performance considerations. Changes that break core performance characteristics will not be accepted.
__label__no Contributing
__label__no Docker
__label__no Image query
__label__bw $ git checkout -b <your-feature>
__label__sc - Make a new branch for your work. It helps to have a descriptive name, like fix-fullscreen-issue.
__label__no Feel free to share link to your blog withUser & Dev lists.Blogs are reffered from Apache Ignite Blogs.
__label__no /**
__label__bw You require IntelliJ 2018.3.1 or newer.
__label__no This document describes a very simple process suitable the projectsin the Cucumber ecosystem.
__label__sc - If you commit a new feature, be prepared to help maintaining it. Watch the project on GitHub, and please comment on issues or PRs regarding the feature you contributed.
__label__sc - Stash any un-committed changes you need to
__label__dc - Store images in the azkaban-images repo
__label__no Reporting Bugs/Feature Requests
__label__no #region Snippet:<snippetName>//some sample codestring snippet = "some snippet code";
__label__bw - npm run bootstrap This runs lerna bootstrap which will install dependencies in this repository's packages and cross-link packages where necessary.
__label__dc 5.  We may choose not to accept pull requests that change files in the src/datadirectory, since we generate these files based on our internal knowledge ofthe AWS services. Please check in with us ahead of time if you find a mistakeor missing feature that would affect those files.
__label__sc f2 uses semantic versioning in release process based on semver.
__label__no About to create a new GitHub Issue? We appreciate that. But before you do,please learn our basic rules:
__label__no Triaging issues is a great way to help the project. This can include reproducing bug reports or asking for additional information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to backup on CodeTriage.
__label__dc Coding guidelines
__label__no - whitespace_check - runs "git diff --check" to detecttrailing whitespace in latest diffyaml_syntax_check - checks syntax of YAML (.yml) files.Note that the automated test suite includes a number of specificchecks on the criteria/criteria.yml file.
__label__tc - Development: For discussing the internals and development of the FoundationDB core, as well as layers.
__label__no Thank you for your contribution! PHPloy wouldn't be so great without you.
__label__dc - Add an explicit return when your function ends with a for/while loop andyou don't want it to return a collected array.
__label__dc - The script directory has all build scripts (written in TypeScript andcompiled with Sucrase).
__label__no Issue Guidelines
__label__sc A detailed explanation can be found in this document.
__label__sc dotnet test /p:Coverage=true
__label__cf 10. Commit your changes git commit -am 'Added some feature'
__label__sc Before you submit your Pull Request (PR) consider the following guidelines:
__label__cf It's really easy to start contributing, just follow these simple steps:
__label__sc - feat
__label__sc When working on a new feature or fix that may span multiple commits, please do so in a feature branch (ex: feature/my_cool_thing). Please clean up these feature branches once merged into development.
__label__bw JS assets are located in app/javascript/active_admin. The config will take care of compiling a complete bundle with Rollup using the build script and exported to app/assets/javascripts/active_admin/base.js ready to be used by Sprockets.
__label__no Opening Issues
__label__no Let our app start up in your native language!
__label__sc Get latest changes from the upstream
__label__cf Conan follows the "GitFlow" branching model.Issues are triaged and categorized mainly by type (feature, bug...) complexity (high, medium...) and priority (high, medium...) using GitHublabels. Then they are moved to a stage called "queue" when they are considered to be ready for implementation.
__label__no front end development:
__label__sc $ grunt connect:tests
__label__sc - use the imperative, present tense: "change" not "changed" nor "changes"
__label__no - The issue list of this repo is exclusively for bug reports and feature requests. Non-conforming issues will be closed immediately.
__label__cf - Does this feature already exist in a similar framework?
__label__sc Note you may need to create your own app on GitHub for CodeTriagehere, and replace the valuespreviously set (via the above) for GITHUB_APP_ID and GITHUB_APP_SECRET inorder to complete the OAuth flow locally.
__label__sc git pull --ff upstream master
__label__sc 1.  Own the contribution that you are providing or have obtained permission fromthe contribution owner
__label__no Create issues...
__label__cf Fork the project, create a feature branch, and send us a pull request.
__label__no The following is a set of guidelines for contributing to AdAway.These are mostly guidelines, not rules.It will help you to understand the projet, find answers, deal with the source code and interact with maitainers.The project is open to any kind of contribution so feel free to share your ideas and participate to the development.
__label__no alias cdaim='mkdir /sdcard/aimsicd_log; cd /sdcard/aimsicd_log'alias logclr='logcat -c -b main -b system -b radio -b events'alias logdmp='logcat -d -v threadtime -b main -b system -b events -f /sdcard/aimsicd_log/aimdump.log'export DUMTXT="When bug occurs, press any key to kill app and dump logcat to file..."alias aimrun='cdaim; logclr; am start -n com.SecUpwN.AIMSICD/.AIMSICD; read dummy?"${DUMTXT}"; am force-stop com.SecUpwN.AIMSICD; logdmp;'
__label__bw Set NPM to use the cloned project
__label__sc - Be able to automatically reference relevant changes from a dependency upgrade.
__label__sc fix($compile): [BREAKING_CHANGE] couple of unit tests for IE9
__label__no Contributing to UI Kitten
__label__bw Install third-party dependencies listed in package.json:
__label__tc - A Contributor is any individual creating or commenting on an issue or pull request.
__label__cf 2.  Take a moment to think about the best way to make a case for, and explain what you're thinking as it's up to you to convince the project's leaders the change is worthwhile. Some questions to consider are:
__label__dc - Declare functions without the function keyword.
__label__bw Clone this repo:
__label__bw and enter the password when asked. Then just set an empty password for root like so:
__label__no NOTE: Don't hesitate giving as much information as you can (OS, PHP version extensions...)
__label__tc - Other conduct which could reasonably be considered inappropriate in aprofessional setting
__label__no - Contributing
__label__sc git commit -a
__label__sc - don't capitalize first letter
__label__no - Tag commit as "v0.1.2"
__label__bw To bootstrap an IDEA project run the following from the root folder of the repo::
__label__no For CLA assistant service works properly, please make sure you have added email address that your commits linked to GitHub account.
__label__no Thank you for contributing! Please select:
__label__cf 9.  Issue a PR with your work when it is ready for review. (Note: Only PRs from those with valid Assembly account will be merged).
__label__no Members can be added to the TC at any time. Any committer can nominate another committerto the TC and the TC uses its standard consensus seeking process to evaluate whether ornot to add this new member. Members who do not participate consistently at the level ofa majority of the other members are expected to resign.
__label__dc Code style
__label__dc - options.py: the class embedding all the different options across dotdrop
__label__sc - Don't bump version numbers. Those will be updated semver master.
__label__no Branch Strategy
__label__bw - OS
__label__no <url> - a link to the project/file uploaded on cloud storage or other publicly accessible medium.
__label__sc Please try to keep your pull request focused in scope and avoid including unrelated commits.
__label__no // Lines prefixed with the below comment format will appear in the snippet markdown, but will remain comments in the C#` code.// Note: these comments should only be used for non-critical code as it will not be compiled or refactored as the code changes.//@@ snippet = "value that would never pass a test but looks good in a sample!";
__label__no - Feature Requests
__label__sc - directive
__label__cf The general flow for making a change to the script host is:
__label__no Contributing to the Cucumber Aruba Project
__label__dc - Check if the gem is thread-safe, in particular, avoid gems thatdon't control modifying objects shared between threads.This is less of an issue today, because in many cases the objectsbeing modified are not being shared, and threaded implementationshave become common (Heroku encourages them).
__label__no TC members who wants to receive administrative access on the project's resources(like rubygems.org push rights) are required to have the most secure possibleconfiguration on their respective accounts (e.g. unique, strong password with2FA enabled when available)
__label__sc Both of these are compiled against the single-header distribution ofCatch2, and thus might require you to regenerate it manually. This isdone by calling the generateSingleHeader.py script in scripts.
__label__cf When something is not clear, please ask questions to clear things up.
__label__sc # Run test-unit in all packages with the name starting with `@packages/`$ yarn test-unit --scope @packages/*
__label__sc - Add a best-effort scope designation to commit subjects. This could be a directory name, file name,or the name of a logical grouping of code. Examples:
__label__no Just use the GitHub issue tracker to submit your bug reports and featurerequests. If you are submitting a bug report, please follow the issue template.
__label__bw 6.  Add the script section from the previous viewer/public/cyberchef.html file before the end </body></html> tags at the end of viewer/public/CyberChef_v*.html
__label__dc 1.  Keep the style consistent to the project, when in doubt refer to the GoogleC++ Style Guide.
__label__sc # Clone your fork of the repo into the current directorygit clone https://github.com/<your-username>/ui-grid.git# Navigate to the newly cloned directorycd ui-grid# Assign the original repo to a remote called "upstream"git remote add upstream https://github.com/angular-ui/ui-grid.git
__label__sc Test cases and codesniffer
__label__no Instances of abusive, harassing, or otherwise unacceptable behavior may bereported by contacting the project team. Allcomplaints will be reviewed and investigated and will result in a response thatis deemed necessary and appropriate to the circumstances. The project team isobligated to maintain confidentiality with regard to the reporter of an incident.Further details of specific enforcement policies may be posted separately.
__label__sc Fork the project. Optionally, create a branch you want to work on.
__label__cf 5.  Make your change, add tests, and make sure the tests still pass
__label__no - CCLib doxygen documentation
__label__dc 5.  engine.ts MUST export at least two functions:
__label__dc Specify the BERKSHELF_DEBUG flag when running your command to see a full stack trace and other helpful debugging information.
__label__cf Make changes to the Appium code or docs
__label__bw Setting Up Your Environment
__label__sc git checkout -b my-fix-branch develop
__label__sc Please ensure that your change still passes unit tests, and ideally integration/UI tests. It's OK if you're still working on tests at the time that you submit, but be prepared to be asked about them. Wherever possible, pull requests should contain tests as appropriate. Bugfixes should contain tests that exercise the corrected behavior (i.e., the test should fail without the bugfix and pass with it), and new features should be accompanied by tests exercising the feature.
__label__no - Quick Iteration
__label__sc Try to keep the commit message short. Use the notes section if there is any extra detail you want to convey, and keep commits and pull-requests as focussed as possible.
__label__sc - git cherry-pick abcd1234 # the SHA from the stable branch
__label__sc That's it! Thank you for your contribution!
__label__dc - 4 SPACES - tabs do not exist :)
__label__sc Git Commit Specific
__label__sc Branch Strategy
__label__dc - Constants are UPPER_CASE.
__label__cf 2.  Documentation - otherwise the PR will not be merged
__label__sc git diff > ../THRIFT-NNNN.patch
__label__sc 3.  For committing the code, please see Prepare Commits.
__label__no This Code of Conduct is adapted from the Contributor Covenant, version 1.4,available at http://contributor-covenant.org/version/1/4.
__label__bw Install dependencies
__label__sc yarn dist won't commit or push anything. A dry-run of the release process can also be performed using --no-write option.
__label__no - Any relevant stack traces ("Full trace" preferred).
__label__no - A clear description of the feature you want added.
__label__sc - Open a new GitHub pull request with the patch.
__label__sc Other Requirements
__label__ct - DO NOT send PRs for code style changes or make code changes just for the sake of style.
__label__dc There is a High-level code walkthrough describing the layout of the project.
__label__sc - In almost all cases, code & documentation should be peer-reviewed by at least one other contributor.
__label__cf 1.  Ensure any install or build dependencies are removed before the end of the layer when doing a build.
__label__no We will review security issues promptly.
__label__dc Please follow the existing style in the code you are patching.
__label__no 1. How to contribute
__label__no - When opening a new issue in the issue tracker, please include information about which Operating System you're using, and which version of Bash.
__label__no 2.  If issue is a bug report, attempt to verify
__label__sc First, the commit log is frozen and can not be changed. If it contains a mistake or outdated information, the log can not be amended. However, further updates can be still posted to the linked issue, which can be followed from the commit log itself.
__label__dc - Do not use braceless if/else statements. if(x) statement else statement2 should never be done. In very specific situations, having braceless if-statements on one line is allowed: if(cond) return; would be valid.
__label__cf - Small Changes can be crafted and submitted to theGitHub Repository as a Pull Request.
__label__no - No pull requests will be accepted that drop test coverage on any platform, including Windows
__label__no Lucene.NET Contributor's Guide
__label__no This does not do code generation and it does not do JSII checks and JSII assembly generation. Instead of doing apackage-by-package ordered build, it compiles all .ts files in the repository all at once. This takes about the sametime as it does to compile the biggest package all by itself, and on my machine is the difference between a 15CPU-minute build and a 20 CPU-second build. If you use this methods of recompiling and you want to run the test, youhave to disable the built-in rebuild functionality of lerna run test:
__label__sc ```html<md-content md-scroll-x md-scroll-y md-scroll-xy>```
__label__sc - Updates in Dependencies: Make sure you run make bootstrap before you run make build or make watch before you run the tests.
__label__sc - You should squash your commits to hide non-valudable commits (coding style fix, unit tests,
__label__sc cdk8s is licensed under Apache 2.0 and accepts contributions viaGitHub pull requests. This document outlines some of the conventions on commitmessage formatting, contact points for developers, and other resources to helpget contributions into cdk8s.
__label__dc Unenforced coding conventions
__label__sc After you submit a PR the MonoGame.Extended build server will build your changes and verify all tests pass. Project maintainers and contributors will review your changes and provide constructive feedback to improve your submission.
__label__cf The contributing workflow relies on Github Pull Requests.
__label__no Happy coding!
__label__cf Submitting a Pull Request
__label__sc - deps: Updates about dependencies
__label__dc We like our code to be properly formatted. We have a well-defined coding style,and .clang-format style file represents it fully.You can enforce your commits to follow it:
__label__sc While not required, it is recommended to make your branch name along the linesof: REL_X_Y/branch-name where the branch-name is something descriptivefor what you're working on.
__label__no Contributions to this project are released to the public under the project's open source license.
__label__no Contributing
__label__no You can contribute as you would for code through patch or PR (pull request).
__label__sc 2.  Create a markdown file based off ofrfc/0000-template.md under therfc/<nnnn>-<title-of-rfc> where <nnnn> is the tracking issue number and<title-of-rfc> is a symbolic name for the title. For example:rfc/0030-construct-operators.md.
__label__sc - For sample / test code, try to keep binary data to a minimum. For test assets, the folder samples/data contains some assets you can possibly make use of, or adding new assets there means they can be used by future samples. App icons should also be referenced from this folder, reducing our overall binary weight and also making it easy to update in the future.
__label__dc - Documentation is loosely based on the NumPy docstring style. When in doubt, refer to existing examples
__label__sc Submitting Changes
__label__sc - To add a global dependency, run yarn add <dep> --dev at  the root.
__label__dc - Adhere to const correctness wherever possible. See this and this for explanation.
__label__no Here are some other tools we sometimes use for checking quality or security,though they are not currently integratedinto the default "rake" checking task:
__label__cf - Attempt to replicate the problem, to ensure that it wasn't a coincidental incident.
__label__no 7.  'Ask Don't Tell' : Ask how to achieve something, don't say it's broken just because you haven't got it working yet!
__label__tc Communication
__label__no If you find what you might think is a bug:
__label__sc Out tests utilize jest snapshot testing. In case a snapshot needs to be updated, just run:
__label__no - Commit Message Guidelines
__label__no - Use pwncat and report bugs
__label__tc - The Audacity forum is the best place to get help with using Audacity.
__label__sc - Once the pull request is in, please do not delete the branch or close the pull request(unless something is wrong with it).
__label__bw Building C3 from sources
__label__tc There really aren't any hard and fast rules here for contributing. Feel free toraise issues, you can even just ask questions in an issue if you'd like,although IRC or StackOverflow is probably a much better forum for that. You canping me on twitter, or even email me at jk@handle.it
__label__sc - The pull request must have a description. The description should explain what you did and how its effects can be seen.
__label__no When filing a new Issue:
__label__sc BREAKING CHANGE:
__label__no Pull requests are welcome! We'd love help improving this library.
__label__no Ongoing participation
__label__sc If you are interested in using the latest released version of the AWS CLI, please see the Installation section in the README. This section is for anyone who wants to install the development version of the CLI. You might need to do this if:
__label__no - Git Commit Specific
__label__cf Pull requests
__label__no Resolution may involve returning the issue to committers with suggestions on how tomove forward towards a consensus. It is not expected that a meeting of the TCwill resolve all issues on its agenda during that meeting and may prefer to continuethe discussion happening among the committers.
__label__cf Install all dependencies
__label__tc Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.
__label__no Contribution Guidelines
__label__no 2.  This is the second step
__label__no - Is this feature solving a problem faced by other serverless application developers?
__label__bw Installing Dependencies
__label__no Contributing to Word To Markdown
__label__sc To run tests a single time, simply run the following command. This is used in CI testing.
__label__sc Step 2: Make your changes
__label__no Brunch internals overview
__label__sc - GitHub Pull Request
__label__no - If Chrome's developer tools pane is shown without you triggering it, that normally means that you have a syntax error in one of your themes or in your styles.less. Try running in Safe Mode and using a different theme or comment out the contents of your styles.less to see if that fixes the problem.
__label__sc The scope could be anything specifying place of the commit change.
__label__bw $ git clone git://github.com/cocos2d/cocos2d-x.git$ cd cocos2d-x$ git checkout v3$ ./download-deps.py$ git submodule update --init
__label__cf - Respect the current coding style
__label__dc Coding Style
__label__sc - Add appropriate test coverage if applicable.
__label__no - Improving this document :smile:
__label__dc We use the release branch to hold releases, including built files for bower and the website.
__label__sc 1.  Add [dictID]/engine.spec.ts to test the engine.
__label__sc 7.  Commit your changes using a descriptive commit message that follows ourcommit message conventions. Adherence to these conventionsis necessary because release notes are automatically generated from these messages.
__label__no Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.
__label__sc Finding Reviewers
__label__ct - QA: file bug reports, the more details you can give the better (e.g. screenshots with the console open)
__label__ct Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.
__label__tc - Giving and gracefully accepting constructive feedback
__label__no Feature Requests
__label__cf - Signup to be a BOINC Android Tester
__label__sc Once your pull request is sent, it's time for the team to review it. As such, please make sure to:
__label__no - Get started with open source
__label__no - Only include one bug per issue. If you have discovered two bugs, please file two issues
__label__tc Please see the Community Guide for information on how to ask questions on the mailing lists and IRC.
__label__cf This repository is made up of various packages. They are discrete modules with different responsibilities, but each is necessary for the Cypress app and is not necessarily useful outside of the Cypress app.
__label__no - Are you using Atom with multiple monitors? If so, can you reproduce the problem when you use a single monitor?
__label__sc If you changed the weather script for example try running it and see if it works as intended. Run bats tests when inside the Bash-Snippets directory to test the tools.If you added a new script/tool test it to see if it works.
__label__sc - use the imperative, present tense: "change" not "changed" nor "changes"
__label__dc Coding Style
__label__no - Feature Requests
__label__dc #include "udfs/myudf/9.0-1.sql"
__label__dc Unix compliance
__label__no Airpal is an OPEN Open Source Project
__label__no Running "rake test" (the automated test suite) will show"Run options: --seed ...", "# Running:", and a series of dots (passing tests).
__label__bw To build the code, follow these steps.
__label__dc The CodeSandbox client is currently divided in to 5 parts. We use lerna toshare dependencies between these parts.
__label__no After releasing version 1.0.0 the scheme changes to become:
__label__bw The clone directory is read from environment variable %TMP% or falls back to /private/tmp/ if this environment variable is not set.
__label__sc 2.  Limit the subject line to 50 characters
__label__sc Type
__label__tc While we appreciate everyone who is eager to contribute to this project and help it succeed, we must ask that some forms of interaction be avoided:
__label__no - Explain which behavior you expected to see instead and why.
__label__no - Include the expected behavior as well as what actually happened.
__label__no Contributor License Agreements
__label__no - Can you reliably reproduce the issue? If not, provide details about how often the problem happens and under which conditions it normally happens.
__label__tc - To discuss code for a proposed change, best to subscribe to audacity devel email list.
__label__sc Please send pull requests against the development branch instead of master. Themaster branch is reserved to contain only the latest official public release ofthe framework.
__label__no And finally, have fun!
__label__sc We recognize the need for a very tight feedback loop (running and debugging tests right inside Visual Studio). Some great tools for running and debugging automated tests are TestDriven.NET and ReSharper (you only need one, although both are recommended for development). We recommend TestDriven over other tools as it is absolutely wonderful in what it does.
__label__cf 2.  Follow the official installation steps onDocsForge. Itmake sure to have the drogon_ctl executable in your shellPATHenvironment variable in case you use a terminal.
__label__no ????????Pull Request????????????????????BoostIO?
__label__no Please format code and markup in your issue using github markdown.
__label__cf GitHub provides additional document on forking a repository andcreating a pull request.
__label__dc For the why part, if no specific reason for the change,you can use one of some generic reasons like "Improve documentation.","Improve performance.", "Improve robustness.", "Improve test coverage."
__label__sc - Bugfix branches will be based on master.
__label__sc - Make separate commits for logically separate changes. Avoid commits such as "update", "fix typo again", "more updates". Rebase your commits before submitting your PR to ensure they represent a logical change.
__label__cf 1.  Visit your fork at https://github.com/$user/cobar (replace $user obviously).
__label__no - API documentation
__label__sc When you make a pull request, the tests will automatically be run again by Travis CI on multiple php versions and hhvm.
__label__sc Choose Your Method of Submission
__label__sc If your pull request has a conflict with master, it needs to be rebased:
__label__sc When you are happy with your changes and you are ready to contribute them, you will create a Pull Request on GitHub to do so.  This is done by pushing your local changes to your forked repository (default remote name is origin) and then initiating a pull request on GitHub.
__label__dc - Do not catch generic Exception/Throwable errors, but always catch the most specific type of the exception/error
__label__sc - You should run php build and check the PHAR file works before submitting your pull request. You may need to change phar.readonly php.ini setting to 0 or run the command as php -d phar.readonly=0 build.
__label__bw In dev mode, administrator username is root and password is test.
__label__no 4.  Remove it after the next 2 minor versions or next major version, whichever comes first.
__label__sc - Run PeerTube using mailslurper SMTP port: NODE_CONFIG='{ "smtp": { "hostname": "localhost", "port": 2500, "tls": false } }' NODE_ENV=test npm start
__label__sc git fetch origingit rebase origin/master
__label__dc $ lerna run pkglint
__label__sc - All SQL syntax changes and enhancements should come with appropriate function tests.
__label__no This Code of Conduct is adapted from the Contributor Covenant, Version 1.4
__label__no 2.  Code of Conduct
__label__sc 4.  When committing, reference your issue (if present) and include a note about the fix.
__label__bw Alternatively, you can also open this repository in Gitpod, an online IDE for GitHub. Just click on the button below and all of the above mentioned work is automated, so you don't have to worry about setting up your environment.
__label__bw git clone https://github.com/<username>/ksql.git
__label__sc Testing
__label__sc Prerequisites:
__label__bw IntelliJ IDEA
__label__sc - Make your changes in a new git branch:
__label__no sdk\eventgrid\Microsoft.Azure.EventGrid\src\Microsoft.Azure.EventGrid.csprojsdk\eventgrid\Microsoft.Azure.EventGrid\tests\Microsoft.Azure.EventGrid.Tests.csprojsdk\eventgrid\Microsoft.Azure.Management.EventGrid\src\Microsoft.Azure.Management.EventGrid.csprojsdk\eventgrid\Microsoft.Azure.Management.EventGrid\tests\Microsoft.Azure.Management.EventGrid.Tests.csproj
__label__dc - Indent preprocessor statements in a similar way to regular code.
__label__dc We have designed the application to be thread-safe (Rails is itselfthread-safe, including its caching mechanism).Please follow the guidelines inHow Do I Know Whether My Rails App Is Thread-safe or Not?;see alsoHow to test multithreaded code.In short: Each concurrent request runs in its own thread.Threads typically create objects within their own thread; they may alsoread shared objects with impunity.However, be extremely cautious about changing shared objects.You should normally only change shared objects through mechanismsdesigned for the purpose (e.g., the database or internal Rails cache).
__label__no Before you get started
__label__no from nose.plugins.attrib import attrfrom tqdm import tqdm
__label__sc - While not required, a comprehensive description of all the changes in the PR is best.
__label__sc - Add accompanying test case.
__label__no Contributing Guidelines
__label__cf - Make the required changes.
__label__sc If the commit reverts a previous commit, it should begin with revert: , followed by the header of the reverted commit. In the body it should say: This reverts commit <hash>., where the hash is the SHA of the commit being reverted.
__label__no - It is required that you clearly describe the steps necessary to reproduce the issue you are running into. Issues with no clear repro steps will not be triaged. If an issue labeled "need repro" receives no further input from the issue author for more than 5 days, it will be closed.
__label__no - More how to's on how to setup a specific framework or CMS
__label__no - Fix Bugs
__label__no How Can I Contribute?
__label__no Contributing
__label__no 2.  Check if the issue has been fixed — try to reproduce it using thelatest master or development branch in the repository.
__label__sc - [ ] PR has summary of the change and links to the detailed issue.
__label__tc You can ask general questions by using:
__label__sc Submitting changes
__label__sc --BLANK LINE--(optional) <body>
__label__tc Code of Conduct
__label__no Core source base of ceph-container - src/
__label__no TLDR;
__label__sc - If the commit is a Breaking Change, please note it clearly in this part.
__label__no - Community: presenting the project at meetups, organizing a dedicated meetup for the local community, ...
__label__cf 1.  Set up Git (Windows, Mac, & Linux).
__label__no In the worst case, this can drag out for two weeks. Keep contributing! Even in the rare cases where a nomination fails, the objection is usually something easy to address like "more patches" or "not enough people are familiar with this person's work."
__label__no - It is relevant to the issue.
__label__dc - No oneliners (conditions, loops, variable declarations ...)
__label__tc Getting in touch
__label__cf - Changes in src/interfaces need to go to the node repository because theymight affect other components like the wallet.
__label__no Intro
__label__sc - If this commit includes breaking changes, they must be listed at the end in the following format (notice how multiple breaking changes should be formatted):
__label__sc To link linaria on the command line to local copy in a development build:
__label__sc - Run "gulp" locally and make sure that no error is generated
__label__no The issue tracker isthe preferred channel for bug reports, features requestsand submitting pull requests.
__label__no - In some cases, you may want to create a context that is more alignedto your production environment, and use the similar broker as well asresults backend configuration
__label__no - Step 1: learn the component inside out
__label__dc ##Coding Standards
__label__bw Note: Currently the site doesn't build with ruby 2.5.x, so you need ruby 2.4.4 or below. (rbenv is useful for switching between ruby versions.)
__label__ct We've got a few open issues and are always glad to get help on that front. You can view the list of issues here. Most of the issues are labelled, so you can use the labels to get an idea of which issue could be a good fit for you. (Here's a good article on how to find your first bug to fix).
__label__no - If the problem is related to performance or memory, include a CPU profile capture with your report.
__label__no Please read and understand the contribution guide before creating an issue or pull request.
__label__no master branch is the latest stable version.
__label__dc - Static methods: If the functionality does not require a reference to aCheerio instance, simply define a named function within the module it isneeded.
__label__sc - test: Adding missing tests
__label__no - Close the issue (if not already transferred).
__label__dc You'll need to set up a test account with Stripe for local development until this dependency is refactored out of development/test.
__label__sc Document change on antvis/g6#123
__label__no Thank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additionaldocumentation, we greatly value feedback and contributions from our community.
__label__sc (2). You are recommended to submit bugfix or feature PR on specific version branch.
__label__no ??? ??? ?????.
__label__sc Signing the CLA
__label__cf Adding a distro build
__label__cf - Tests: these are usually tests to ensure code that previouslyfailed now works (regression tests), or tests that cover as much as possibleof the new functionality to make sure it does not break in the future andalso returns consistent results on all platforms (since we run these tests onmany platforms/configurations). For more information about how to writetests, see our testing guidelines.
__label__no - Are you running Atom in a virtual machine? If so, which VM software are you using and which operating systems and versions are used for the host and the guest?
__label__bw The steps to import the sources (based on Eclipse 2019-06) into Eclipse are as follows:
__label__sc The default values are localhost, root, no password, 3306, and utf8.You only need to set the values that differ from the defaults.
__label__sc Here's a few things you should always do when making changes to the code base:
__label__sc Commit messages should never contain any @ mentions (usernames prefixed with "@").
__label__no - Typo correction, white space and formatting changes
__label__sc We have very precise rules over how our git commit messages can be formatted.  This leads to morereadable messages that are easy to follow when looking through the project history.  But also,we use the git commit messages to generate the Angular CLI change log.
__label__sc Pull Requests
__label__dc scripts/foreach.sh
__label__cf Sign the Contributor License Agreement
__label__dc Headers
__label__no We also welcome financial contributions in full transparency on ourOpen Collective. Anyone can file an expense. If theexpense makes sense for the development of the community, it will be "merged" in the ledger of ouropen collective by the core contributors and the person who filed the expense will be reimbursed.
__label__sc - Add accompanying test case.
__label__sc 5.  When you're done making changes, check that your changes pass the tests and lint check:
__label__no # source the library under test. "${BASH_LIB_DIR}/git/lib"
__label__sc - Dependencies: Be careful about adding new dependency and avoid unnecessary dependencies.
__label__no The style is basically that enforced by the "markdownlint" tool.Don't use tab characters, avoid "bare" URLs (in a hypertext link, thelink text and URL should be on the same line), and try to limitlines to 80 characters (but ignore the 80-character limit if that wouldcreate bare URLs).Using the "rake markdownlint" or "rake" command(described below) implemented in the developmentenvironment can detect some problems in the markdown.That said, if you don't know how to install the development environment,don't worry - we'd rather have your proposals, even if you don't know how tocheck them that way.
__label__bw so that you can start straight away.
__label__dc Ruby best practise
__label__no Release Strategy
__label__dc - Prefer ' over "
__label__no - Browsers and Operating System - is this a problem with all browsers or only specific ones?
__label__sc Body
__label__no // bad, can't tell if assignment is a typo, and// there is a space between the member function and its parametersif(Broodwar->canMake (UnitTypes::Terran_Marine, builder))reservedMinerals=-UnitTypes::Terran_Marine.mineralPrice();
__label__no - [ ] Performance has been factored in (for example, the code cleans up after itself to not cause memory leaks).
__label__no Perform the following steps on a feature branch.
__label__ct - Fixing a typo.
__label__sc When you push to your remote, the output will contain a URL you can use to open a pull request.
__label__no - Discuss, the official Atom and Electron message board
__label__tc This project is governed by the Contributor Covenant Code of Conduct. By participating, you are expected to uphold this code.
__label__cf 1.  Fork this repository.
__label__sc Please merge the fixup commits into the commits that has introduced theproblem before creating a pull request.
__label__no - Updating the Public API
__label__sc - No unnecessary whitespace. Check for whitespace with git diff --check and git diff --cached --check before commit.
__label__sc Commit Message Format
__label__no Pre-commit Hook
__label__sc 2.  Then you can start working on Aseprite. Create a new branch from master, e.g. fix-8 to fix the issue 8.Check this guide about how to name your branch.
__label__no * Licensed to the Apache Software Foundation (ASF) under one
__label__sc git checkout -b <topic-branch-name>
__label__sc <header><BLANK LINE><body><BLANK LINE><footer>
__label__ct Finding contributions to work on
__label__no """status represents the Comment's current status."""status: COMMENT_STATUS!}
__label__sc - test: Adding missing tests
__label__bw def FLASK_APP_MUTATOR(app):app.wsgi_app = ConsoleLog(app.wsgi_app, app.logger)
__label__bw cd corenpm linkcd ../angularjsnpm link '@uirouter/core'
__label__dc - Reference classes with {ClassName}
__label__no - Encourages contributors to remain involved.
__label__no We'd love to accept your patches and contributions to this project. There arejust a few small guidelines you need to follow.
__label__bw Found bindings for the following environments:
__label__bw Now if you do git remote -v again, you'll see
__label__cf - Does my feature fit within the database migration space?
__label__no - or send a note to the user mailing list.Be sure to include all relevant information, like the versions of JMeter youA Test plan  that caused the issue as well as any error messages are also very helpful.
__label__no - Branch ??????????(? Bugfix/IssueNo , Feature/IssueNo)
__label__sc - In each subfolder, you can organize your directory structure by categories of tests. (Example: these folders can be named after the feature you are testing or can reference the issue number they fix)
__label__sc All (new) contributed material must be releasedunder the MIT license.All new contributed materialthat is not executable, including all text when not executed,is also released under theCreative Commons Attribution 3.0 International (CC BY 3.0) license or later.
__label__dc import * as S from '../state';
__label__no Reporting Bugs/Feature Requests
__label__sc Writing tests
__label__no How can I contribute?
__label__dc - Follow the conventions you see used in the code already.
__label__dc /// Does something (maybe).void do_something();
__label__dc - Please follow the PSR-2 Coding Standard and PHP-FIG Naming Conventions.
__label__no - etc.
__label__no - Isolated: Please try to isolate and reproduce the bug with minimumdependencies. It would significantly slow down the speed to fix a bug if toomany dependencies are involved in a bug report.
__label__cf 5.  Create a branch to work in (i.e., git checkout -b mybranch).
__label__bw - .NET Core SDK 3.1.x
__label__tc - Focusing on what is best for the community.
__label__sc - Run vendor/bin/phpunit and make sure everything passes (new and old tests).
__label__sc git pull --ff upstream develop
__label__sc - api: changes to the API component
__label__no When run, the code regions in the format below (where <snippetName> is the name of the snippet):
__label__bw 1.  Install build dependencies
__label__sc $ git checkout master$ git branch -D feature_x$ git push origin :feature_x
__label__sc - npm run format reports no issues
__label__no FILENAME.rb:LINE: warning: constant ::Fixnum is deprecatedFILENAME.rb:LINE: warning: constant ::Bignum is deprecated
__label__bw The script ./tools/link-all.sh can be used to generate symlinks to all modules in this repository under some node_moduledirectory. This can be used to develop against this repo as a local dependency.
__label__no Contributions are welcome and are greatly appreciated! Every little bit helps, and credit will always be given. By contributing, you agree to abide by the code of conduct.
__label__bw Prior to contributing to Composer, you must be able to run the test suite.To achieve this, you need to acquire the Composer source code:
__label__sc - Introduction of incompatible intellectual property
__label__sc - We use Karma commit message convention. Please follow it.
__label__no Declaring formal releases remains the prerogative of the project maintainer.
__label__sc - What does this PR (pull request) do?
__label__sc Be sure that your changes pass the test suite! Run npm test to run the full test suite.You will need redis and node.js installed. We also have an integration which relies on chromedriver (an automated chrome browser). You can install this on OSX via brew install chromedriver No other external dependencies are needed.
__label__sc - You must do this for each Chocolatey project that requires it.
__label__bw ? Running on Windows?
__label__cf Once you have all the information you need to implementing the feature, the discussion can move to the actual feature's PR.
__label__no - Sets a standard baseline for project template creators, facilitating reuse
__label__sc - When contributing trivial documentation fixes (i.e., fixes to typos, spelling,grammar) that don't contain any special markup and are not associated withcode changes, please include the string [skip travis] in your commitmessage.
__label__sc * add test of `ng-change` for `md-chips`
__label__sc 4.  Run ./run-tests to ensure all tests pass before submitting
__label__no 4.  Create your report including Rails and CanCanCan versions. If you are getting exceptions, please include the full backtrace. Use the following gist as a base to reproduce your bug.
__label__sc 11. If necessary, rebase your commits into logical chunks, without errors. Tointeractively rebase and cherry-pick from, say, the last 10 commits:git rebase -i HEAD~10, then git push -f.
__label__sc Submitting PR:
__label__cf If you're going to contribute code then just fork our repo, write your thing,and submit a pull request.
__label__no - OS Tools
__label__sc [optional body]
__label__bw | Configuration |             Description                                                             ||---------------|-------------------------------------------------------------------------------------|| Debug         | Default debug build.                                                                || Release       | Release build.                                                                      || Debug-AOT     | Builds the AOT tests project, that tests compatibility with mono's AOT compilation. |
__label__no - BSD and MIT are compatible with the Apache license but CC_BY_SA is not (https://apache.org/legal/resolved.html#cc-sa).
__label__no 1.  This is the first step
__label__no - Submitting a fix
__label__dc - IntelliJ code style xml file
__label__sc - Before sending a pull request for a feature or bug fix, be sure to havetests.
__label__bw # 2. watch packages$ npm run watch
__label__cf See the Contributing code and features document for details on the process you can use to add code/features.
__label__no Contributing to PEV2
__label__no - Microsoft DI Extensions
__label__no - Elaborate the top 3 PR and the associated issues the nominator has worked with you that can demonstrate your ability.
__label__sc - model
__label__no GROUP BY
__label__no Contributing to Boostnote (Fran
__label__no To make the bug report accurate and easy to understand, please try to create bugreports that are:
__label__cf 6.  Ensure that your code has an appropriate set of unit tests which all pass.
__label__sc When you're ready to make a change,create a branchoff the master branch. We use master as the default branch for therepository, and it holds the most recent contributions, so any changes you makein master might cause conflicts down the track.
__label__ct Implement Features
__label__dc - Naming
__label__sc Submit Pull Request (PR)
__label__cf The best way to contribute is to fork the CodeIgniter4 repository, and "clone" that to your development area. That sounds like some jargon, but "forking" on GitHub means "making a copy of that repo to your account" and "cloning" means "copying that code to your environment so you can work on it".
__label__no All contributions are welcome! This guide will get you up to speed with the contribution process for Gooey.
__label__no Weex adopts Apache License 2.0 as its open source license. Make sure your contribution obeys the requirement of Apache License 2.0.
__label__dc We prefer very small, descriptive functions over long monolythic functions. Try to keep your functions to something around 4-9 lines. If your functions are longer than 9 lines, it probably is a good chance for breaking it into smaller local private methods or turning what is being processed into a class and handling the logic more inside of there. This is not only for code clarity and readability, but also it makes it much easier to debug knowing the names of functons and produces clear stack traces.
__label__sc Running the tests
__label__sc You can also test all packages by running:
__label__sc Opening a pull request
__label__dc + debugger; // breakpointreturn super.generate(this.ast);}
__label__no Contributing to Ant Design Mobile
__label__bw $ gem install bundler
__label__no How-to Guide
__label__cf 1.  Invite yourself to the A-Frame Slack channel.
__label__sc - Ensure your commit messages are well-written. This can double as yourpull request message, so it pays to take the time to write a clear message.
__label__sc - Push to your github repository
__label__cf Fork the repo!
__label__bw You should be able to just fork the repo and run bundle && rake to see thetests running.
__label__tc All contributors must adhere to the Microsoft Open Source Code ofConduct. For moreinformation see the Code of ConductFAQ or contactopencode@microsoft.com with any additional questions or comments.
__label__cf - Through a Github issue (preferred), through the mailing list, or through Gitter, talk about a feature you would like to see (or a bug fix), and why it should be in Chocolatey.
__label__dc The build process is divided into stages, so you can invoke them as needed from the root of the repo:
__label__tc There's now a dedicated support channel in Slack. Visit this page to get an invite. Support requests won't be handled through the repository anymore.
__label__no - Translating to your language
__label__sc Our Public API is protected with TS API Guardian. This is a tool that keeps track of public API surface of our packages.
__label__tc When asking a question or filing a bug report, please follow the guidelines on the Calabash iOS wiki home page.
__label__cf In order to not bloat the core engine with unwanted or unnecessary features (that we will need to maintain forever), here is a list of questions you could ask yourself before submitting a new feature (or feature request) for Babylon.js core engine:
__label__dc - Add spacings between the php begin and end tag.
__label__sc - Describe the changes, why they were necessary, etc
__label__no - Overview of the Issue - if an error is being thrown a non-minified stack trace helps
__label__sc Code reviews
__label__no Firstly in terms of structure, there is no particular concept of "bitcoinjs developers" in a sense of privileged people.Open source revolves around a meritocracy where contributors who help gain trust from the community.
__label__sc We use PHPUnit and the WordPress test suite for our unit/integration tests.
__label__no - Moving source files from one directory or package to another
__label__no First, the technicalities:
__label__dc 3.  Open the CDK application (assume it's hello-cdk in these steps) and the CDK repository as a VS code multi-root workspace.
__label__no Modules Documentation
__label__cf Code Contribution
__label__sc - [link] is the link to the current version of the CLA: https://yandex.ru/legal/cla/?lang=en (in English) or https://yandex.ru/legal/cla/?lang=ru (in Russian).
__label__tc If you have questions, please ask. Submit an issue or contact us directly.
__label__sc - agree to license the contributed code under CodeMirror's MITlicense.
__label__no - A short example of how to reproduce (if applicable)
__label__no - Feature Requests
__label__no Creating releases
__label__cf - apis/ defines outgoing API requests.
__label__sc You generally only need to submit a CLA once, so if you've already submitted one(even if it was for a different project), you probably don't need to do itagain.
__label__sc - You have read the terms and conditions of the CLA and agree with them in full,
__label__sc - Signed-off-by: Sign your commits by providing your full name and email address in the format: Name Surname <email@something.com>. This is an optional tag.
__label__cf 9.  Addressing code review comments
__label__sc Use succinct words to describe what did you do in the commit change.
__label__sc - When only changing documentation, include [ci skip] in the commit title
__label__bw When you are ready to start, go straight to Getting Started or Setting up your local Dev Environment
__label__cf To start contributing
__label__no Should you require a feature isn't suited for mainstream users, consider suggesting a CocoaPods plugin instead.
__label__no - Commit Convention
__label__sc $ pip install -r requirements_dev.txt
__label__sc Creating a pull request (PR)
__label__no GitHub search makes it easy to use labels for finding groups of issues or pull requests you're interested in. For example, you might be interested in open issues across atom/atom and all Atom-owned packages which are labeled as bugs, but still need to be reliably reproduced or perhaps open pull requests in atom/atom which haven't been reviewed yet. To help you find issues and pull requests, each label is listed with search links for finding open items with that label in atom/atom only and also across all Atom repositories. We  encourage you to read about other search filters which will help you write more focused queries.
__label__sc 5.  You can now push your code and open your Pull Request: git push <your-name> my_patch
__label__sc - You could use git cz with a CLI interface to replace git commit command, it will help you to build a proper commit-message, see commitizen.
__label__cf - Alternatively, if a feature is on the issues list with theUp For Grabs label,it is open for a community member (contributor) to patch. You should comment that you are signing up for it onthe issue so someone else doesn't also sign up for the work.
__label__sc You can rebase your local dev on upstream/dev (to remove any merge commits), rename it, and recreate dev
__label__no In short, since you are most likely a developer, provide a ticket that you yourself would like to receive.
__label__no - It is required that you clearly describe the steps necessary to reproduce the issue you are running into. If the issues are asked to provide clear descriptions for more than 5 days, we will close it immediately.
__label__sc - After you have made your commits and pushed them up to your forked repository you then create a Pull Request to be reviewed and merged into the Avored repository. Make a new Pull Request for each issue you fix.    do not combine multiple bugfixes into one Pull Request.
__label__sc - Only code that's ready for release should be committed to the master branch. All development should be done in dedicated branches.
__label__dc Code Style and Linting
__label__no Contributing
__label__no 3.  Run pnpm run release-all or npm run release -- minor dom (assuming you want to release a new minor version for dom)
__label__cf https://github.com/AtomicGameEngine/AtomicGameEngine/wiki/Atomic-Developers
__label__no - Before you report an issue, please search for related issues. Make sure you are not going to open a duplicate issue.
__label__sc Maintainers will take into consideration if a patch is in line with the generalprinciples of the project; meets the minimum standards for inclusion; and willjudge the general consensus of contributors.
__label__cf - Give your pull-request a meaningful title.
__label__no - Question or Problem?
__label__no .editorconfig
__label__ct - Add new features to the code
__label__no Changes to this arrangement
__label__no Reporting New Issues
__label__no Images
__label__no License
__label__sc Always make sure all the tests are passing before sending a pull request.
__label__dc This module family comprises facil.io's core. Although it can (mostly) be used outside of facil.io, none of the modules in this family can be removed.
__label__sc Making a Pull Request?
__label__dc - Each library component must provide a fwd.hpp header providing forwarddeclarations for all types used in the user API.
__label__no Please read through this document before submitting any issues or pull requests to ensure we have all the necessaryinformation to effectively respond to your bug report or contribution.
__label__cf 3.  External API changes and significant modifications ought to be subject to an internal pull-request to solicit feedback from other contributors.
__label__sc - For TypeScript/JavaScript, include new libraries in package.json
__label__cf 5.  Ensure that your code adheres to the existing style in the sample to whichyou are contributing. Refer to the[Android Code Style Guide](https://source.android.com/source/code-style.html) for therecommended coding standards for this organization.
__label__sc - For individuals we have a simple click-through form.
__label__no Bug reports are accepted through the Issues page.
__label__sc Create a PostgreSQL user with the same name as your username in order to avoid using the postgres user.
__label__sc Testing with tox
__label__bw Alternatively, running func init from the function directory will stamp out everything for you, or if you have a deployed function you can fetch the storage it is using.
__label__sc ?1?type
__label__no BulletImpl::BulletImpl(BW::CBullet* originalBullet, u16 _index): bwOriginalBullet(originalBullet), index(_index){}
__label__bw Logging to the browser console
__label__cf To send us a pull request, please:
__label__sc New Component
__label__no Reporting bugs
__label__bw Updating all Dependencies
__label__sc - changelog: used for updating the release notes in CHANGELOG.md
__label__sc 3.  Ensure local tests pass.
__label__dc Scoping:
__label__no Our History and Ethos
__label__tc We have a code of conduct you can find here and everycontributor is expected to obey the rules therein. Any issues or PRs that don'tabide by the code of conduct may be closed.
__label__sc Historically, CRIU worked with mailing lists and patches so if you still prefer this way continue reading till the end of this section.
__label__dc cd /path/to/cdk/app/path/to/aws-cdk/link-all.sh
__label__sc This way, the issue will be updated when the pull request is sent and, onceit is merged, the issue will be closed automatically.If you simply want the issue to be updated but do not want it to beclosed, use a different construct in your message, like "Related to:XWALK-123".
__label__dc - provide getters for every other classes of dotdrop needing to access elements
__label__dc - Parameters smaller than 4 elements (e.g. Vector3, cChunkCoords) should be passed by value. All other parameters should be passed by const reference, where applicable.
__label__no - and most importantly - a use-case that fails
__label__bw - Need at least .NET Framework 4.6.1 and 4.7 development tools
__label__no Like bug reports, feature requests are submitted through the Issuespage.
__label__ct Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.
__label__sc - Document any change in behaviour - Make sure the README.md and any other relevant documentation are kept up-to-date.
__label__no enum USER_ROLE {COMMENTERSTAFFMODERATORADMIN}
__label__no :+1: First off, thanks for taking the time to contribute! :+1:
__label__no We will be insisting on a minimal reproduce scenario in order to save maintainers time and ultimately be able to fixmore bugs. We understand that sometimes it might be hard to extract essentials bits of code from a larger code-base butwe really need to isolate the problem before we can fix it.
__label__sc Some examples of things likely to increase the likelihood a pull request isrejected:
__label__sc - Describe how you tested and validated your changes
__label__dc - Add final modifier to field
__label__sc $ readlink -f $(which ex)
__label__tc Asking for (or Giving) Help
__label__sc When updating the code, it's usually better to add additional commits to your branch rather than amending the original commit, because reviewers can easily tell which changes were made in response to a particular review. When we merge pull requests, we will squash all the commits from your branch into a single commit on the master branch.
__label__cf 3.  Massive changes should be proposed as issues before any work is done (e.g. I don't like jquery - let's switch to X will be closed if a PR is submitted without discussion).
__label__no Governance and Decision Making
__label__cf bundle exec rake
__label__no - If you have introduced a new document, there is a simple template youshould use. It provides you with the top anchor mentioned to link to(more below), and also with a backlink to the top of the documentation:
__label__sc Integration tests
__label__no - NOT GROUPED BY
__label__bw - Option 2: Install command line tools and install build tools and ndk bundle with sdk manager:tools/bin/sdkmanager "build-tools;x.y.z" ndk-bundle where x.y.z is the latest version
__label__no General suggestions
__label__bw Although criu could be run as non-root (see Security), development is better to be done as root. For example, some tests require root. So, it would be a good idea to set up some recent Linux distro on a virtual machine.
__label__no - What behaviour you expect to see.
__label__sc - Follow the pull request template when opening a pull request.
__label__sc You must write unit tests to cover your modifications.
__label__no Reporting issues
__label__no - ex. if( ! mEnabled ) { ...
__label__dc - No trailing whitespace. Blank lines should not have any space.
__label__sc To publish the documentation, run the following:
__label__no If the issue remains inactive (or dormant) for two to four weeks (depending on the issue), we may close it, assuming that it's been fixed. If you just happen to be late back to the party, simply bump the issue with a comment making sure to include any updates.
__label__no The best way to determine the validity of a bug is to recreate it yourself. Follow the directions or information provided to recreate the bug that is described. Did they provide a repository that demonstrates the bug? Great - fork it and run the project and steps required. If they did not provide a repository, the best way to reproduce the issue is to have a 'sandbox' project up and running locally for Cypress. This is just a simple project with Cypress installed where you can freely edit the application under test and the tests themselves to recreate the problem.
__label__cf - Please follow the code style for the language you are working in and try to match the general structure of Atomic code.  Check that your diff looks as clean and minimal as possible.
__label__cf 4.  Test your changes
__label__sc or simply
__label__no - dotnet msbuild build.proj /t:Util /p:UtilityName=InstallPsModules
__label__cf 11. In GitHub, send a pull request to angular:master.
__label__cf 7.  Submit a PR to the Conan documentation about the changes done providing examples if needed.
__label__sc The scope could be anything specifying place of the commit change. For example webpack,babel, redux etc...
__label__no You can request a new feature by submitting an issue to our GitHubRepository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that we can use it.First open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project.
__label__no - Architecture of the codebase
__label__no Submitting patches
__label__no Report Bug
__label__dc Commenting Code:
__label__cf Develop locally, then submit changes
__label__sc - If you are adding a new behavior or changing an existing behavior, please be sure to update the corresponding test(s)
__label__no - Types of Issue Labels
__label__no Single Service from Command Line
__label__no - Process substitution
__label__sc Code contributions to the SDK are done through Pull Requests.Please keep the following in mind when considering a code contribution:
__label__dc Components shall use the helpers from state in combination with the defined component types to provide typing.
__label__tc Get Help or Ask a Question
__label__bw You can run the local demo with NPM like so:
__label__dc Please make sure commit hooks are run, which will enforce the code style.
__label__bw For instructions, see Installing from source.
__label__sc - While your pull request is open, please keep it up to date with the dev branch so it can be easily integrated
__label__no - Did the problem start happening recently (e.g. after updating to a new version of Arduino or the library) or was this always a problem?
__label__no Thanks
__label__sc Avalonia.Controls.UnitTests.Presenters.TextPresenterTests
__label__dc These are then used to resolve different elements in the config file:see this
__label__sc CakePHP tests requires PHPUnit.To install PHPUnit use composer:
__label__dc - variables and profile's variables are merged
__label__cf - Use code blocks; it helps us help you when we can read your code! On that note also refrain from pasting more than 30 lines of code in a post, instead create a gist if you need to share large snippets
__label__sc - related issues, like Closes #1, Closes #2, #3
__label__no - Fix bugs
__label__sc See what changes will make into your commit
__label__no - Improving the documentation
__label__dc For safety and maintainability reason, Saladict will not support adding dictionaries on the fly. All dictionaries must be merged to this project via pull requests.
__label__no Version Component | Description
__label__no Thank you for reporting any issues you find. We do our best to test and make commitlint as solid as possible, but any reported issue is a real help.
__label__sc - Wrap the body at 72 characters
__label__no """CreateCommentInput provides the input for the createComment Mutation."""input CreateCommentInput {"""storyID is the ID of the Story where we are creating a comment on."""storyID: ID!
__label__tc Code of conduct
__label__no HOW TO CONTRIBUTE TO AXEL DEVELOPMENT
__label__no Dependencies : To ensure that the same versions of dependencies are used for all projects in the repo, package versions are managed from a central location in eng\Packages.Data.props. When adding package references you should first ensure that an Update reference of the package with the version exist in the Packages.Data.props then Include the reference without the version in your .csproj. Contact azuresdkengsysteam@microsoft.com if you need to change  versions for packages already present in Packages.Data.props
__label__no Alice Vision relies on a friendly and community-driven effort to create an open source photogrammetry solution.In order to foster a friendly atmosphere where technical collaboration can flourish,we recommend you to read the code of conduct.
__label__sc - [ ] Local run of mvn install succeeds
__label__no - Question or Problem?
__label__no - Suggest a Fix - if you can't fix the bug yourself, perhaps you can point to what might becausing the problem (line of code or commit).
__label__cf - Using Pull Requests
__label__sc Running only py.test is okay for one-time check, but as it runs on yourcurrently active Python installation, you're only checking the script on onePython version. A combination of tox + pyenv will allow you to run tests on manyPython versions easily.
__label__sc - Bash code License example apollo_base.sh;
__label__no This will trigger the release workflow which will release to all package managers and will also create a GitHub release with a tag.
__label__sc - Test your changes and please help us out by updating and implementing some automated tests. It is recommended that all contributors spend some time looking over the tests in the source code. You can't go wrong emulating one of the existing tests and then changing it specific to the behavior you are testing.
__label__bw $this->call(CanvasTrackingDataSeeder::class);
__label__sc - A commit is a small logical unit that represents a change.
__label__sc - You can run a test or tests within a class.
__label__sc - If the changes include code, ensure all additional code has correspondingdocumentation in and around it. This includes documenting the definition offunctions, statements in code, sections.
__label__no - Participate in ongoing discussions
__label__dc - Ensure that the code lints cleanly
__label__no Newcomers
__label__sc The bigger the pull request, the longer it will take to review and merge. Try to break down large pull requests in smaller chunks that are easier to review and merge.It is also always helpful to have some context for your pull request. What was the purpose? Why does it matter to you?
__label__dc - If your snippet uses recursion, use the recursion tag and explain the base cases.
__label__dc Classes:
__label__sc - [atlas-doc] fix #68, update some instruction
__label__dc - Packages that add autocomplete providers are named autocomplete-[what-they-autocomplete] — ex: autocomplete-css
__label__no New Issues are for bug reports or feature requests only!!  Questions on how to use the grid should be posted to Stack Overflow or Gitter https://gitter.im/angular-ui/ui-grid.
__label__cf 5.  Create your feature branch git checkout -b my-new-feature
__label__no Contributing
__label__sc Once you're done making your changes be sure to make some tests and run all of them. What I do is open up 3 different panes in the same iTerm2 window by pressing ? + D on mac 2 times. In the far left I do yarn build:watch, in the middle I do yarn test:browser:watch (where you'll probably be writing your tests) and in the 3rd window I do yarn test:server:watch. It looks like this.image
__label__no - Include how you run your tests and which testing framework or frameworks you are running.
__label__dc - normalize all config entries
__label__sc - Every public api event/method should be accompanied by a test.
__label__sc - docs: changes into documentation, e.g. add usage example for the module..
__label__no - Coding Rules
__label__sc Where Avalonia.Controls.UnitTests is the name of the project.
__label__bw - cd bootstrap-vue
__label__bw If you already have a local repo and you want a fresh build, run git clean -fdx from the root.
__label__no Table of contents
__label__sc - Check out the develop branch:
__label__dc The tool consults the cdk-build.cloudformation key in package.json todetermine which CloudFormation namespace this library represents (e.g.AWS::EC2 is the namespace for aws-ec2). We maintain strict 1:1 relationshipbetween those.
__label__dc See https://boinc.berkeley.edu/trac/wiki/CodingStyle
__label__bw {"scripts": {"postinstall": "../cdk8s/tools/link-all.sh"}}
__label__no Contributing to API Platform
__label__sc Now that the feature_x branch has been pushed to your GitHub repository, you can initiate the pull request.
__label__no 8.  For management libraries run eng\scripts\Update-Mgmt-Yml.ps1 to update PR include paths in eng\pipelines\mgmt.yml
__label__no You consider contributing changes to commitizenPlease consider these guidelines when filing a pull request:
__label__dc - Check that your code adheres to our coding style
__label__no Reviewing Pull Requests
__label__no - PowerShell
__label__cf - Create a new branch with a descriptive name (tracking master) and submit a Pull Request.
__label__no - Usage examples are good. However, having large code snippets inlinecan make the documentation less readable, and so the inline snippetsshould be kept reasonably short. To provide more complex compilableexamples, consider adding new .cpp file to examples/.
__label__no Contribution Guide
__label__cf 3.  Create a branch and draft a pull request "My new feature" so everyone can follow the development.Explain the implementation in the PR description with links to issues.
__label__no Remember to replace the emoji in the readme, being careful not to replace the ones in all-contributors if any overlap.
__label__sc If a developer is sending another version of the patch (e.g. to addressreview comments), they are advised to note differences to previous versionsafter the --- line in the patch so that it helps reviewers butdoesn't become part of git history. Moreover, such patch needs to be prefixedcorrectly with --subject-prefix=PATCHv2 appended togit send-email (substitute v2 with the correctversion if needed though).
__label__bw Add remote repository address, named upstream
__label__bw First, make sure you have imagemagick and ghostscript installed. You may need libmagic as well.
__label__bw - PGP_PASSWORD - the secret password used for signing commits
__label__no Pull Requests
__label__no Submitting issues
__label__sc $ git checkout -b feature_x(make your changes)$ git status$ git add .$ git commit -a -m "descriptive commit message for your changes"
__label__dc - static methods: should always begin with a upper case letter (like InitGLEW)
__label__cf 1.  You are working against the latest source on the develop branch.
__label__sc - Submit a Pull Request on GitHub. A reviewer will later be assigned by the maintainers.
__label__sc We have very precise rules over how our git commit messages can be formatted.  This leads to morereadable messages that are easy to follow when looking through the project history.  But also,we use the git commit messages to generate the AngularJS change log.
__label__cf If you do these things, it will be make evaluation and acceptance easy.Now if you stray outside of the guidelines we have above, it doesn't mean we are going to ignoreyour pull request. It will just make things harder for us.Harder for us roughly translates to a longer SLA for your pull request.
__label__sc Breaking Change section should start with the phrase "BREAKING CHANGE: " followed by a summary of the breaking change, a blank line, and a detailed description of the breaking change that also includes migration instructions.
__label__sc 4.  Do not reformat code you aren't really changing unless it's absolutely necessary (e.g. fixing linter). Such changes make it really hard to use git blame feature when we need to find a commit where line change of interest was introduced.
__label__ct New Feature and code contributions
__label__no Public API additions
__label__dc Naming
__label__no Here's how it works:
__label__dc Special tooling has been built to collect all source files with appropriate overrides into a uniquestaging directory for each flavor (each staging directory is also specified by a targetarchitecture). From a staging directory, containers can be built directly from the<staging>/daemon-base/ and <staging>/daemon/ image directories. Additionally, developers caninspect a staging directory's files to view exactly what will be (or has been) built into thecontainer images. Additionally, in order to maintain a core source base that is as reusable aspossible for all flavors, staging also supports a very basic form of templating. Some tooling hasbeen developed to make working with staging as easy as possible.
__label__tc Have you reviewed this guide and found it lacking? Or are you confused aboutsome particular step? If so, please let us know! Or better yet, submit a PR toaddress the issue :wink:
__label__sc - Add release date to entry
__label__sc 1.  Run make test to run tests!
__label__dc - Follow code style and commit style.
__label__sc 2.  Create a fork of the Bokeh repository on GitHub (this is only done before first) contribution).
__label__sc master?develop         <--- PR(bugfix/typo/3rd-PR)? PR{type}/{description}
__label__bw 3.  Now you can link it in your project (e.g. /my-project/dashboard-app). You can do so running yarn link "@cubejs-client/core"
__label__dc Doxygen Generation
__label__cf - Fork the repository on GitHub (It's that easy)
__label__no Any issue request regarding performance without a complete example of the issue experienced will be closed.
__label__no 3.  Invoke dotnet build
__label__sc - Please prefix the title of your pull request with [MRG] (Ready for Merge), if the contribution is complete and ready for a detailed review. An incomplete pull request's title should be prefixed with [WIP] (to indicate a work in progress), and changed to [MRG] when it's complete. A good task list in the PR description will ensure that other people get a better idea of what it proposes to do, which will also increase collaboration.
__label__dc Whether you integrate it into your editor or not, a pre-commit hook will runPrettier before a commit by default.
__label__dc Styleguides
__label__no * under the License.
__label__no Fighting feature creep in CocoaPods is not easy. We hear about a lot of great ideas and many of them don't make the cut as they would not be useful for at least 80% of our users.
__label__sc - [ ] Pull request description contains link to relevant issue
__label__no Versioning
__label__no - Small Features can be crafted and directly submitted as a Pull Request.
__label__no Thank you for your interest in contributing to Robo! Here are some of the guidelines you should follow to make the most of your efforts:
__label__no - Feature Flags
__label__no - Thank them for their contribution.
__label__sc - All new code must be GPLv3 licensed
__label__sc AWS Amplify CLI is Apache 2.0-licensed. Contributions you submit will be released under that license.
__label__no - All new features will be added into master or next branch as well as all bug-fix except security issues. In such way, we can motivate developers to update to the latest stable version.
__label__no ##Issues
__label__no Stable
__label__no Here are the first mandatory steps to create a new plugin. In fact these following setps are basically meant to build up a working Code::Blocks project for your new plugin based on the qDummyPlugin template.The different plugins projects are located in the plugins folder. You should see a folder named qDummyPlugin inside.
__label__ct There are lots of ways to contribute to Sucrase! The easiest way to get startedis to just starting using Sucrase for a project and see what issues you runinto. Did you run into any bugs? Were the details confusing? Is there a way tomake it easier to use? All of those would be great issues to file in thisrepository!
__label__sc We use Jest for testing. Tests are located in the various __test__ folders.
__label__dc - For a good understanding of all frameworks used, please see CREDITS
__label__sc Before submitting a pull request run npm run test to run the unit-tests and npm run eslint to check for linting errors in your changes.
__label__ct We'd love for you to contribute to the project. Unsure where to begin contributing to Word To Markdown? You can start by looking through these "good first issue" and "help wanted" issues:
__label__no - Core Contributors
__label__no Contributing to Babylon.js
__label__no * @throws \Exception
__label__dc - All public API methods must be documented. (Details TBC).
__label__no Now how about try become a committer?
__label__sc - Use RecordingDbConnection
__label__no You can help us improve it too!
__label__no - Commit Message Guidelines
__label__dc 1.  Make sure all new .java files to have a simple Javadoc class comment with at least an @author tag identifying you, and preferably at least a paragraph on what the class is for.
__label__sc style(button): add styles for pressed state
__label__no - What is the actual result of the above steps?
__label__no - You, or the copyright owner(s), agree to irrevocably license the contribution under the Atomic Game Engine Contribution License CONTRIBUTION_LICENSE.md
__label__bw return ['post_id'    => \Canvas\Post::all()->pluck('id')->random(),'ip' => $faker->ipv4,'agent' => $faker->userAgent,'referer' => $faker->url,'created_at' => $timestamp,'updated_at' => $timestamp,];});
__label__no 0x Contribution Guide
__label__cf 5.  Don't forget to add yourself in contributors.md.
__label__no Management Libraries
__label__sc The build server relies on git commit timestamps to keep track of new builds that it needs to perform. When updating a PR, sometimes the timestamp of the latest commit in the PR isn't updated. This leads the build server to think that the PR has already been built and tested. In order to force the build server to rebuild and test the updated PR, please follow the instructions outlined in this post How can one change the timestamp of an old commit in Git?.
__label__bw $ brew install redis memcached && brew cask install phantomjs$ redis-server
__label__bw 5.  Hackety Hack!
__label__bw - Install project dependencies: yarn
__label__no If everything is good your changes will be merged into master branch. Eventuallya new version of gem will be published.
__label__dc - Avoid forks if possible.
__label__bw 6.  Ensure you have user name and email set appropriately to attribute your contributions - see Name / Email.
__label__no - tooltip: memory leak on destroy #11133
__label__no There are lots of people using Squib already. If you've gone through the samples and still have questions, here are some other places to get help.
__label__no | Field                           | Type  | Notes || ------------------------------- | ----- | ----- || add_to_dash                   | N/A |       || code                          | N/A |       || collapsed_fieldsets           | N/A |       || comparison type               | N/A |       || country_fieldtype             | N/A |       || default_filters               | N/A |       || entity                        | N/A |       || expanded_slices               | N/A |       || extra_filters                 | N/A |       || filter_immune_slice_fields    | N/A |       || filter_immune_slices          | N/A |       || flt_col_0                     | N/A |       || flt_col_1                     | N/A |       || flt_eq_0                      | N/A |       || flt_eq_1                      | N/A |       || flt_op_0                      | N/A |       || flt_op_1                      | N/A |       || goto_dash                     | N/A |       || import_time                   | N/A |       || label                         | N/A |       || linear_color_scheme           | N/A |       || new_dashboard_name            | N/A |       || new_slice_name                | N/A |       || num_period_compare            | N/A |       || period_ratio_type             | N/A |       || perm                          | N/A |       || rdo_save                      | N/A |       || refresh_frequency             | N/A |       || remote_id                     | N/A |       || resample_fillmethod           | N/A |       || resample_how                  | N/A |       || rose_area_proportion          | N/A |       || save_to_dashboard_id          | N/A |       || schema                        | N/A |       || series                        | N/A |       || show_bubbles                  | N/A |       || slice_name                    | N/A |       || timed_refresh_immune_slices   | N/A |       || userid                        | N/A |       |
__label__no If you're looking for something to fix, please browse open issues.
__label__sc The subject contains a succinct description of the change:
__label__sc See the License section below. Contributions must relinquish ownership of contributed code, so licensing and copyright can be managed without the need to reach out to every contributer.
__label__sc (1).There is a specific version for each Angel version, such as branch-1.0.0, branch-1.1.0. It is our stable developing	 branch. After full testing, specific version branch will be merged to master branch for the next release.
__label__sc - chore: Other changes that don't modify src or test files
__label__no - What type of wallet are you using? (multisig or singlesig)
__label__bw or
__label__dc import * as A from '../state/action-types';
__label__no - Apache Camel committers should work on the ASF git repo
__label__dc - Create functions instead of repeating blocks of code.
__label__bw Example config file:
__label__cf - Check the pull requests tab to ensure that the bug doesn't have a fix in progress.
__label__sc Using your own machine for building and testing.
__label__no Pull Requests
__label__sc Some PRs should be excluded from the release notes, e.g. changes to projectinternal documentation (such as this file). Those changes are not interestingfor external users of the project and would reduce the value of the releasenotes. Maintainers may use the Unlisted Change label to mark those PRs.
__label__no - Do not open up a GitHub issue if the bug is a security vulnerability in Colyseus, and instead send us an email at endel@gamestd.io.
__label__sc Submitting a Pull Request (PR)
__label__dc isn't exactly helpful...
__label__no - High impact - APIs that provide a key solution to a specific problem,such as absl::FixedArray, have higher impact than usage numbers may signaland are released because of their importance.
__label__no Not enough information ever provided
__label__sc - All submissions, including submissions by project members, require review.
__label__cf Send your suggestions using one of these methods:
__label__no Submitting an improvement
__label__sc Testing
__label__sc We have very precise rules over how our Git commit messages must be formatted.This format leads to easier to read commit history.
__label__sc - Ensure proposed changes or problem have already been clearly defined anddiscussed in the issue tracker. We don't want you to burn time on codethat isn't a good fit for the project.
__label__sc - the markdown help files have been regenerated using the commands listed here
__label__no Contributor's Guide
__label__sc To test emails with PeerTube:
__label__no 1.  Request or operate data
__label__sc A pull request for a new feature will be reviewed to see if it meets thefollowing requirements. For any pull request, an astropy maintainer can helpto make sure that the pull request meets the requirements for inclusion in thepackage.
__label__sc - Rebase your feature branch on dev. See Git Branching - Rebasing for more info on rebasing
__label__sc 5.  Send us a pull request, answering any default questions in the pull request interface.
__label__sc At this point, you're ready to make your changes!
__label__dc To run code linter, use:
__label__cf We recommend discussing your plans on the mailinglist before starting to code -especially for more ambitious contributions.  This gives othercontributors a chance to point you in the right direction, give feedbackon your design, and maybe point out if someone else is working on thesame thing.
__label__sc Feel free to add more content in the body, if you think subject is not self-explanatory enough, such as what it is the purpose or reasone of you commit.
__label__no - Credits
__label__cf 1)  Create a fork of AngularFire (See Forking a Project)
__label__sc If you have 3 commits, start with:
__label__no IMPORTANT: CapRover Goals & Scope
__label__dc types contains app-wide type definitions including those for the Simplenote data models, the UI behaviors, and common language/platform helpers.
__label__dc - No trailing whitespace. Blank lines should not have any space.
__label__dc The module in comprised of two files: fio.h and fio.c.
__label__no Backend development:
__label__no Adding Examples
__label__cf 7.  If you would like to implement support for a significant feature that is notyet available in the SDK, please talk to us beforehand to avoid anyduplication of effort.
__label__sc git add modules/my-cool-new-module
__label__cf 5.  We follow conventional-commits to structure our commit messages. Instead of running git commit, you must run npm commit, which will show you prompts to create a valid commit message.
__label__sc - Travis CI is linked to PRs, so, all tests will get executed on creation/updation of a PR.The status is visible on the GitHub PR page.
__label__no - Suggest your feature as a new issue to start a discussion.
__label__no 2.  DO add information if you're facing a similar issue to someone else, butwithin a different context (e.g. different steps needed to reproduce the issuethan previous stated, different version of Bash or BATS, different OS, etc.)You can read on how to do that here: [Information to include][#information-to-include]
__label__no Following these guidelines shows that you respect the time of the developers developing this open source project and helps them help you. In response to this, they should return that respect in addressing your issue, assisting with changes, and helping you finalize your pull requests.
__label__no Want a Doc Fix?
__label__no - Short, descriptive title
__label__sc - chore: Changes to the build process or auxiliary tools and libraries such as documentationgeneration
__label__dc #include "caf/fwd.hpp"
__label__sc Pull Requests
__label__sc git config --global user.name "Firstname Lastname"git config --global user.email "your_email@example.com"
__label__no - Is the problem present on the master branch of Celluloid? Run pre-release from source control and check!
__label__dc They will outline development and test procedures. When in doubt just look at the scripts of each package.json file. Everything we do at Cypress is contained there.
__label__sc - Use the imperative mood in the subject line
__label__dc Formatting is automated through php_codesniffer.
__label__cf How to Contribute, Best Practices
__label__dc // suppress redundant @return if you start the brief description with "Returns"/// Returns the name of this instance.inline const std::string& name() const noexcept {return name_;}
__label__sc - Separate subject from the body with a blank line
__label__sc - There is an index.js file. It imports our test helper. (You don't have to worry about this).
__label__dc - All public API methods must be documented. (Details TBC).
__label__cf 2.  Add enough unit tests to "prove" that your patch is correct
__label__sc - Create feature branches - Don't ask us to pull from your master branch.
__label__no - Once you modify the javadoc, you'll need to rebuild the component and the .adoc will be automatically updated
__label__no 3.  Open a new issue describing the particular problem. Be sure to include a link to the uploaded file.
__label__no Contributing
__label__no - Helping to propose a way to bring documentation to other languages. Right now, everything is in English
__label__cf 6. Make PR
__label__sc - Write a descriptive commit message. What problem are you solving and whatare the consequences? Where and what did you test? Some good tips:hereand here.
__label__cf 8.  Add any relevant documentation.
__label__no Build new Docker image from PyPI package:
__label__sc - feature/123-add-l10n-and-i18n if you want to add localization (l10n) andinternationalization (i18n) as a new feature to the project.
__label__ct We've also created an up-for-grabs Label in the Issues. In general all the Issues could be considered up-for-grabs, but we labeled a few issues to help highlight a possible easy entry point into contributing to the Bridge project.
__label__sc Or alternatively, when on the master branch:
__label__dc pkglint
__label__cf 6.  Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.
__label__tc - Feature requests and design documents: Forums
__label__no The "new issue" form contains a number of prompts that you should fill out tomake it easier to understand and categorize the issue.
__label__dc - inline documentation for new methods, class members, etc.
__label__dc Please use# frozen_string_literal: trueat the beginning of each file.This 'magic comment' (added in Ruby 2.3.0) automatically freezesstring literals, increasing speed, preventing accidental changes, andwill help us get ready for the planned Ruby transitionto immutable string literals.
__label__no If you have discovered a bug or have a feature suggestion, feel free to create an issue on GitHub.
__label__sc - build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
__label__sc git checkout devgit fetch upstreamgit merge --ff-only upstream/devgit push origin dev     #(optional) this makes sure dev in your own fork on GitHub is up to date
__label__dc This project follows the all-contributors specification. Contributions of any kind are welcome!
__label__sc Tests are written using BATS. Each lib has a lib-name.bats file in tests-for-this-repo.Asserts are provided by bats-assert-1. Asserts provide useful debugging output when the assertion fails, eg expected x got y.
__label__dc - updater.py: the class handling the update of dotfiles for update
__label__sc Then update your feature branch from your local copy of master, and push it!
__label__tc Join the Community on Slack
__label__sc - perf: A code change that improves performance
__label__sc - Platform inconsistencies.
__label__ct - New tests
__label__no - GitHub pull request documentation
__label__sc and pull requests are very welcome. Before submitting a pull request, please make sure that your changes are well tested.
__label__dc - Snippet should only use native python 3.6 modules. Snippets using external modules will be disqualified immediately.
__label__sc If the commit reverts a previous commit, it should begin with revert: , followed by the header ofthe reverted commit. In the body it should say: This reverts commit <hash>., where the hash isthe SHA of the commit being reverted.
__label__dc - Copy the the ENV variables that you'll need from GitHub.
__label__cf git checkout -b my-fix-branch master
__label__tc - questions and answers stay available for public viewing so your question / answer might help someone else
__label__no Release Policy
__label__no Table of Contents
__label__cf By contributing you agree that these contributions are your own (or approved by your employer) and you grant a full, complete, irrevocable copyright license to all users and developers of the project, present and future, pursuant to the license of the project. You can also read the same CLA on the Ansible docsite.
__label__dc ??? src???? cli                   # argv parsing, reading files???? formatter             # displaying the results???? models                # data structures???? runtime               # run test cases, emits the event protocol???? support_code_library  # load hooks / step definitions
__label__bw Building the Docs
__label__dc - Place requires in the following order:
__label__bw - I added a dependency but it's not being picked up by the build
__label__cf 4.  Complete a code review by addressing the reviewer's comments.
__label__tc It is preferred to have feature requests discussed viaFORUM orIRC first.
__label__sc While the Coral team is not strict on test driven development (or TDD), anycontributions that include tests are greatly appreciated, and preferred overthose that do not.
__label__cf Pull requests are awesome. If you're looking to raise a PR for something which doesn't have an open issue, please think carefully about raising an issue which your PR can close, especially if you're fixing a bug. This makes it more likely that there will be enough information available for your PR to be properly tested and merged.
__label__no Issue
__label__sc $ cd packages/@aws-cdk/aws-ec2$ yarn watch & # runs in the background$ cd packages/@aws-cdk/aws-iam$ yarn watch & # runs in the background
__label__no When a release is no longer supported, the branch will be renamed following thepattern REL_X_Y_FINAL with the key suffix being FINAL. For example,REL_3_2_FINAL indicates that the 3.2 release is no longer supported.
__label__tc Code of Conduct
__label__no Translate the plugin
__label__sc That's it! Thank you for your contribution!
__label__cf And commit the file changes in the docs folder.
__label__no '''ts fixture=with-bucketbucket.addLifecycleTransition({ ... });'''
__label__sc - Submit proposed changes or additions as GitHub pull requests that follow thePull Request Guidelines.
__label__no Contributing
__label__sc Commits should be atomic units of work, if they are not you should rebase themso that they are (typo corrections from a previous change for example do notjustify a commit).
__label__no If you speak a foreign language, you can help translate Jetpack into your own language. here is how.
__label__cf So you want to contribute to Capistrano? Awesome! We have a whole separate document just you. It explains our pull request workflow and walks you through setting up the development environment: DEVELOPMENT.md.
__label__no - the behavior you saw
__label__sc Pull Requests
__label__no Support for Visual Studio Code & Dev Containers
__label__sc Scope
__label__no - Size of the change being reverted: Reverting a single small PR is a much lower-risk proposition than reverting a massive, multi-PR change.
__label__no - Partial pack
__label__sc e.g.
__label__cf 2.  Download your fork using a Git client like SmartGit (all platforms).
__label__no Not to worry, we will try our best to add your contribution into our next release!
__label__ct - duplicate: If an issue has been reported before, it will be marked with this label. This flags that a previous issue may not have been fixed as expected, or in the case of things we don't intend to fix or issues currently in discussion in another open issue, it means that we are likely to close the issue.
__label__cf Can't code (yet)? No problem, we love you too!
__label__no - JSCS (JavaScript style checker) using the Node.js format.
__label__sc Once again, it is good to have in mind somerules for good commit messages.
__label__tc - The BOINC Contributor call occurs every other week and is announced on the BOINC Development email list
__label__no Packages inside Amplify JS
__label__no 3.  Add mock-ups, etc as needed to clearly demonstrate the idea.
__label__sc - no dot (.) at the end
__label__no If you find a bug in the source code or a mistake in the documentation, you can help us bysubmitting an issue to our GitHub Repository. Including an issuereproduction with StackBlitz IDE is the absolute best way to help the team quicklydiagnose the problem. Screenshots are also helpful.
__label__dc We use the master branch as the primary development branch.
__label__ct Look through the GitHub issues for features. Anything tagged with "enhancement" and "please-help" is open to whoever wants to implement it.
__label__cf 1.  To report a bug, request a new feature, or report a problem withdocumentation, please file an issuedescribing in detail the problem or new feature. The BlazingSQL team evaluatesand triages issues, and schedules them for a release. If you believe theissue needs priority attention, please comment on the issue to notify theteam.
__label__sc User: admin@example.comPassword: password
__label__sc - Follow the conventions you see used in the project. This is especially important when switching between languages,since Genghis is essentially a Ruby server, an PHP server, and a JavaScript client. Make your code look like the codearound it.
__label__dc - These two rules really mean that indent is governed by braces
__label__no - Platform(s) - Caliburn.Micro runs on a lot of platforms and is tightly coupled with their UI stacks, knowing which platform or platforms you're experiencing the issue on helps immensely.
__label__sc git reset -- file-with-changes-to-un-include
__label__sc - assertThat(actual).isEqualTo(expected); instead of assertEquals(expected, actual);
__label__tc Feel free to check out the #discussion/#development channels on our Slack (you can sign-up here for an invite). Some of us are always online to chat!
__label__sc - If you are an individual writing original source code and you're sure youown the intellectual property, then you'll need to sign an [individual CLA](https://cla.developers.google.com).
__label__bw # still in ~/assemblymade/coderwallvagrant ssh# whoa!pwdhostnamels -al# We're not in localhost any longer... well, you get what I mean
__label__ct - Fixing defects - Report as an issue, then PR (to development) a fix and supporting unit test(s).
__label__sc Diffing Binaries
__label__no - Directories
__label__bw 1.  Run git clone https://github.com/composer/composer.git
__label__sc This patch fixes page.pizza so that it works with iframes.
__label__no - The issue list of this repository is exclusively for bug reports and feature requests. Non-conforming issues will be closed immediately.
__label__sc - Ensure that the current tests pass, and if you've added something new, add the tests where relevant.
__label__cf Prerequisites
__label__sc - for example: feature/add_flex_layouthelper
__label__sc 3.  Provide example raw data (as json) if no endpoints are specified
__label__cf - Make sure all tests pass.
__label__no This will compile the documentation, open it in your browser and start watching the files for changes, recompiling as you save.
__label__no Does this issue belong in this repository?
__label__sc - New features and bug fixes should have tests written alongside them
__label__sc - If you continue making changes to your fork of dc.js,please create a separate branch for each pull request and keep the changes separate.
__label__sc - Consider our release cycle.  We try to follow SemVer v2.0.0.Randomly breaking public APIs is not an option.
__label__no - Updating documentation
__label__no 2. Make sure that your question is about Ant Design Mobile, not React
__label__no - steps to reproduce the bug
__label__sc Once you open a pull request, ChaosBot will give it X seconds (where X is determined by github_api.voting.get_voting_window) before collecting votes. During this time, you should let people know about your contribution, so that they may vote for it and ensure your hard work gets merged in. If you do not wish for ChaosBot to consider your PR for merging just yet, add "WIP" somewhere in your PR title. Remove it when you're ready for voting.
__label__sc ```html<md-content scroll-x scroll-y scroll-xy>```
__label__no I don't want to read this whole thing, I just have a question!!!
__label__sc This is now done by the CI system on tagged releases. Previously, the steps to make a Conan.io release were:
__label__sc After submitting changes to your remote repository, you should click on the new pull request On the following github page.
__label__sc License
__label__tc This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.
__label__sc Address Feedback
__label__cf 2.  Fork the repository and make a local clone
__label__dc The implementations are already very similar and neither Python nor JavaScript are that hard to understand.  Take the plunge, it is easier than you think.  If you get stuck, go ahead and file a Pull Request and we can discuss how to move forward.
__label__tc This project and everyone participating in it is governed by the principle of "Be excellent to each other". That's it. TL;DR: Don't be a jerk.
__label__bw For Gitpod users only! The best way to supply CDK with your AWS credentials is to add them aspersisting environment variables.Adding them works as follows via terminal:
__label__no - The plugin should use them variables via Emotion, as passed in by the ThemeProvider
__label__cf What should I know before I get started?
__label__sc - script for changes to the scripts and tools
__label__cf - Make your changes in a new git branch:
__label__sc - If fixing bug:
__label__sc 10. Now browse to the following URL and create your pull request from your fork to beef master
__label__sc 10. To test service worker changes:
__label__cf 4.  Build test versions of the images (make FLAVORS=<bugged flavor> build).
__label__no This feature adds multi-room audio streaming to balenaSound.No breaking changes were made, but considering this a major version bump since it's a big feature and all services were affected.
__label__no On that note, if you think you have found a bug in Browsersync, please reportit via Github Issues.
__label__cf Use master branch
__label__sc If you are running the Linux operating system and haveDocker installed, you can also run the linux_*.shscripts under the ci/(https://github.com/abseil/abseil-cpp/tree/master/ci)directory to test Abseil under a variety of conditions.
__label__sc Now, when you push to your branch, CircleCI will automatically run all of the checks in your own instance, and the coverage check will work since it has the proper Repo Token, and the PR will magically refer to your own checks rather than running them in the 0x CircleCI instance.
__label__cf Make sure to run the necessary tests and lints and fix any errors:
__label__cf - If you would like to implement support for a significant feature that is not yet available in the AWS CLI, please talk to us beforehand to avoid any duplication of effort. You can file an issue to discuss the feature request further.
__label__tc Community
__label__sc 5.  Create a PR
__label__no Do not use trailing two spaces for line breaks, since these cannot beseen and may be silently removed by some tools.Instead, use <br /> (an HTML break).
__label__sc - no dot (.) at the end
__label__no We would love for you to contribute to Kitten Tricks and help make it ever better together! :rocket:
__label__cf Check the issues, I try and keep my short term perspective there. Long term is in the VISION.md.
__label__no - AngleSharp.Xml
__label__sc 2. Build the TestServer.apk.$ rake build_server
__label__dc IntelliJ->Preferences?Other Settings?CheckStyle
__label__dc - For changes to JavaScript files, we recommend installing a Standard plugin for your preferred text editor in order to ensure code style consistency.
__label__tc In any case, feel free to ask here, on the forum or @gethue.
__label__no Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.
__label__bw git clone git@github.com:your_name_here/cookiecutter.git
__label__dc - 120 columns
__label__no - In many cases, it also makes sense to show which Bash-it plugins you are using.This information can be obtained using bash-it show plugins.
__label__no The following is a set of guidelines for contributing to the IRremoteESP8266 library, hosted on GitHub. These are guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.
__label__no <url> - a link to the reduced test case
__label__no License and Contributions
__label__no - CI Status
__label__no To run it, just type: aimrun.If you want to also supply radio logcat, add -b radio somewhere in the logdmp alias, but know that your GPS location and cell info may be included when you do that.
__label__no - Click on any command in the Command Log where the failure occurred, this will log more information about the error to the JavaScript console.
__label__no Submitting Pull Requests
__label__no The src/ directory contains the core code that is applicable for all flavors -- all Ceph versionsand all distros -- and is the "least specific" definition of source files for this project. Thisincludes the ceph-container-specific code that is built into the container images as well as buildconfiguration files. src/ should be viewed as the base set of functionality all flavors mustimplement. To maximize reuse and keep the core source base in one place, care should be taken to tryto make the core source applicable to all flavors whenever possible. Note the existence of the"CEPH_VERSION" environment variable (and other similar variables) built into the containers.ceph-container source code can use container environment variables to execute code pathsconditionally, making an override of source files for specific Ceph versions unnecessary.
__label__tc - Being respectful of differing viewpoints and experiences
__label__dc The API Platform project follows Symfony coding standards.But don't worry, you can fix CS issues automatically using the PHP CS Fixer tool:
__label__no If you are using SSHKit directly, or if you think you've found a bug in SSHKit, please open aGitHub issue.
__label__no It is a good habit which will save maintainers' time. Thank you!
__label__sc You should now be able to open http://localhost:3000/admin in your browser.You can log in using:
__label__dc - Indentation is using spaces, not tabs. Most of the code is indented with 2 spaces, some with 4 spaces. Please try to stick to 2 spaces.If you're using an editor that supports EditorConfig, the editor should automatically use the settings defined in Bash-it's .editorconfig file.
__label__sc - Any new source files should include a GPLv3 license header
__label__bw Common
__label__no Contributing
__label__no Improving visualizations
__label__dc # useMyFunction
__label__no A ceph-releases/<ceph release>/<distro> directory is the most specific source directory andcontains source that is specific to a particular Ceph-release-and-distro combination.
__label__dc PsySH follows PSR-1 and PSR-2. The easiest way to do make sure you're following the coding standard is to install php-cs-fixer and run php-cs-fixer fix before committing.
__label__dc To include the changes, we have to make sure to build Babel:
__label__sc The Calabash iOS Toolchain uses git-flow.
__label__cf In some cases, it is useful to seek for feedback by iterating on a design document. This is usefulwhen you plan a big change or feature, or you want advice on what would be the best path forward.
__label__no - Submission Guidelines
__label__sc - Step 1: Open a pull request. Anyone can do this.
__label__no Some issues are resolved by the community, by giving some guidance or a workaround, but the original opener of the issue forgets to close the issue. In this case you should:
__label__no sphinx-build -b html docs html
__label__dc Error Handling
__label__dc Our contributors try to follow good software development practices to helpensure that the code that we ship to our users is stable. If you wish tocontribute to the Crunchy Container Suite, be it code or documentation, pleasefollow the guidelines below.
__label__dc - (ret)method:(int)arg{// note the lack of semicolon}
__label__dc while (true){DoSomethingFancy();}
__label__sc Scope
__label__dc libui takes backward compatibility seriously. Your code should not break the current compatibility requirements. All platforms provide a series of macros, defined in the various uipriv_*.h files (or winapi.hpp on Windows), that specify the minimum required version. If you find yourself needing to remove these or ignore resultant warnings or errors, you're probably breaking compatibility.
__label__sc When committing a Pull Request for non-application/test code please add [skip ci] to your commit message.
__label__sc git commit -a
__label__no - Run npm run start:test
__label__dc Linting and tests
__label__dc Next, we need to execute Generator.generate(), which can be achieved by running a test case in the @babel/generator package.For example, we can run the test case that tests the generation of class declarations:
__label__tc The maintainers and the community members can be found on the forum and will try to reply to most messages.
__label__no And constructed with the following guidelines:
__label__no - Above all else, the plugin should come with a commitment to maintenance from the original author(s)
__label__sc - Publish the javascript version to npm
__label__ct If you'd like to work on something that isn't in a current issue, especially if it would be a big change, please open a new issue for discussion!
__label__tc If you have any questions, create an issue (protip: do a quick search first to see if someone else didn't ask the same question before!).
__label__no Contributions are welcome and will be fully credited.
__label__cf Do not take criticism personally. When you get feedback, it is about your work,not your character, personality, etc. Keep in mind we all want to make the project better.
__label__no If you find a significant vulnerability, or evidence of one,please send an email to the security contacts that you have suchinformation, and we'll tell you the next steps.For now, the security contacts are:David A. Wheeler dwheelerNOSPAM@dwheeler.com,Jason Dossett jdossettNOSPAM@utdallas.edu,andDan Kohn danNOSPAM@linuxfoundation.com(remove the NOSPAM markers).
__label__bw - Visual Studio 2010+ is recommended for code contributions.
__label__no 1.  Search existing issues.
__label__sc Once you submit a pull request, you should tag reviewers and add labels if needed. If you do not have the necessary GitHub permissions to do so, a Brave member will take care of this for you.
__label__no 3.  Specify this variable to add the datasource model and from which module it is from in config.py:
__label__bw Each package is responsible for building itself and testing itself and can do so using whatever tools are appropriate, but each conforms to a standard set of scripts so that building, watching, testing, etc. can be orchestrated from the root of this repo. Here are the scripts supported and what they mean:
__label__sc If you're curious how we manage all of these tests in CI check out our circle.yml file found in the root cypress directory.
__label__no Documentation
__label__tc - Read the Ballerina Code of Conduct.
__label__no - If this is not a build-related issue, does your installation pass make runtest?
__label__no - Coding Rules
__label__no First, thank you for considering contributing to jquery-adaptive-backgrounds! It's people like you that make the open source community such a great community! ?
__label__dc - camelCase, even for constants or enums. Why? Because SCREAMING_CASE is ugly, annoying to type and does not achieve anything useful. Constants are less dangerous than variables, not more.
__label__no This is another kind of defined type, an Enumeration Type,also called enums.
__label__dc 1.  Clone the CDK repository locally and build the repository. See Workflows section for the different build options.
__label__cf 10. ?? Delete your branch (optional)
__label__no If you want an already configured online IDE to contribute to Babel, you can use Gitpod!
__label__dc Style
__label__bw - We recommend using a version in Active LTS
__label__dc Don't worry about the code style as long as you install the dev dependencies. Git hooks will format and fix them for you on committing.
__label__no - Avoids unnecessary processes and bureaucracy whenever possible.
__label__no Once you've made your changes, run this command to convert the docs into HTML:
__label__no TRANSLATING
__label__no Releasing a new version of Danger
__label__sc Building and running tests
__label__bw yarn install
__label__sc After a pull request has been merged and closed you can delete the feature branch.
__label__no Conversation surrounding contributions begins when you can create an issuedescribing your issue or suggestion.
__label__cf 1.  Follow the project's code style (see below)
__label__no Want to help improve the docs?
__label__dc - Use double-spaces instead of tabs. You should be able to convert tabs to spaces automatically in your editor's settings.
__label__sc The benefit of using VCR over stubbing/mocking methods is that we could swap out implementations if we wanted.
__label__sc - log for changes to log messages
__label__dc Otherwise you can always run mvn spring-javaformat:apply to fix some basic errors, like indentation.
__label__sc - All the checks and tests carried out by our CI are passed
__label__sc After you have submitted your pull request, we'll try to get back to you as soon as possible. We may suggest some changes or improvements.
__label__no - the AngularJS IRC
__label__dc # runs "yarn build" (build + test) for the current modulealias lb='lr build'alias lt='lr test'
__label__no - A description of the troubleshooting steps you
__label__no Reporting a Security Issue
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:
__label__cf 8.  Submit a pull request to the master branch. If you head to the A-Frame repository after running git push from earlier, you should see a pop up to submit a pull request.
__label__bw # Install Yarn globallybar $ npm install --global yarn
__label__cf rake install
__label__cf Making Changes
__label__no Issue
__label__no There is no need to post a new comment. Just add a :thumbsup: or :heart: tothe top post.
__label__no - Fill out the issue template completely
__label__ct Blog Posts & Tutorials
__label__bw Build configurations
__label__dc dist files
__label__no Additional work has been sponsored by the 4CaaST project for cloud computing,which has received funding from the European Union's Seventh Framework Programme(FP7/2007-2013) under grant agreement 258862.
__label__sc - Check the codebase to ensure that your feature doesn't already exist.
__label__dc Cube.js looks up {dbType}-cubejs-driver package among installed modules to fullfil driver dependency if there's no corresponding default driver for the specified database type.For example one can publish foo-cubejs-driver npm package to fullfil driver dependency for the foo database type.
__label__cf 3.  Edit the source location to fix the bug.
__label__dc All JavaScript must adhere to JavaScript Standard Style.
__label__sc - Modify source files located in src/** and demo/**.
__label__no 2.  Navigate to service directory e.g. "sdk\keyvault"
__label__sc Branch structure
__label__sc $> LANG=C bin/behat --format=progress
__label__cf - Push your new branch to your public repository
__label__sc The test suite runs by default
__label__no Contributing to CanCanCan
__label__sc - test: all changes regarding tests (adding new tests or changing existingones)
__label__tc Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:
__label__no First, thank you for considering contributing to ImageGlass! It's people like you that make the open source community such a great community! ?
__label__no To benefit the better support, require Carbon using major version range (^1 or ^2). By requiring 1.26.*,~1.26.0 or limited range such as >=1.20 <1.33, you fall to low priority support (only security and critical issueswill be fixed), our prior support goes to next minor releases of each major version. It applies to bug fixes andlow-cost features. Other new features will only be added in the last stable release. At the opposite, we recommend youto restrain to a major number, as there is no compatibility guarantee from a major version to the next. It meansrequiring >=2, as it allows any newer version, will probably leads to errors on releasing our next major version.
__label__sc - yarn test:integration: run integration tests with jest and puppeteer.
__label__sc 8.  Open a Pull Request with a clear title and description.
__label__no Contributing to Forestdb
__label__sc Go to https://github.com/yourusername/Carbon and select your feature branch. Click the 'Pull Request' button and fillout the form.
__label__no 4.  or Build the service.proj in the repo root, passing the directory name of the specific service as a property. e.g. dotnet build eng\service.proj /p:ServiceDirectory=eventhub
__label__sc Before submitting a pull request:
__label__no Missing a Feature?
__label__no //##########################################################################//#                                                                        #//#                              MODULE NAME                               #//#                                                                        #//#  This program is free software; you can redistribute it and/or modify  #//#  it under the terms of the GNU Library General Public License as       #//#  published by the Free Software Foundation; version 2 of the License.  #//#                                                                        #//#  This program is distributed in the hope that it will be useful,       #//#  but WITHOUT ANY WARRANTY; without even the implied warranty of        #//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #//#  GNU General Public License for more details.                          #//#                                                                        #//#                             COPYRIGHT: XXX                             #//#                                                                        #//##########################################################################
__label__cf 4.  Add Glitch examples to the examples piece in the header, with title and src. See example.
__label__bw Troubleshooting
__label__no We would love to get help from you as a user and a contributor.
__label__cf If you need help with using Duality, please consider asking the community first. The forum is the right place to gather advice and evidence about potential bugs and problems and many issues are discussed there before proceeding to be reported officially on GitHub. The following lists contain a sample of core points you should include in your issue report.
__label__sc - Do not commit/push directly to the master branch. Instead, create a feature branch/fork and file a merge request.
__label__sc If your request includes functionality changes, please be sure to test your code on Linux as well as macOS. Differences in the compiler and runtime on each platform means that code that compiles and runs correctly on Darwin (where the Objective-C runtime is present) may not compile at all on Linux.
__label__dc - Most importantly, use spaces - do not use tabs (which is the default setting for C++ projects in Visual Studio).
__label__sc - Where bugs are fixed, where possible, there should be unit testsdemonstrating the bug and also proving the fix. This helps prevent regression.
__label__no - Merging
__label__ct Finding contributions to work on
__label__cf Read how to contribute to Bazel
__label__bw - Install the windows-build-tools via npm with npm install --global windows-build-tools
__label__no Thank you to all the people who have already contributed to GrapesJS!
__label__sc To test if your change effect the public API you need to run the API guardian on that particular package.
__label__no You can help to write the documentation of the REST API, code, architecture,demonstrations.
__label__dc Coding style is enforced using StyleCop. To automate the clean up of most rules, the solution includes a "team-shared" ReSharper DotSettings, the ReSharper Code Cleanup profile is named AppMetrics.
__label__cf Critical is an open source project. It is licensed using theApache Software License 2.0.We really appreciate pull requests and bug reports, here are our guidelines:
__label__sc A one-sentence summary of what the commit is.
__label__no Some rules about Code Review
__label__no ?? First off, thanks for taking the time to contribute! ??
__label__no Merging DB migrations
__label__sc Submit Under the BSD-2-Clause Plus Patent License
__label__sc If you just want to run 1 test:
__label__no - Feature Requests
__label__sc - Checkout a new topic branch from master branch, and merge back against master branch.
__label__no You can file new issues by providing the above information here.
__label__sc 1.  Always add one or more unit tests that prove that the feature / fix you are submitting is working correctly.
__label__no Contributing to AngularJS
__label__tc - IRC Channel (#bats on freenode) ?: These messages sync with Gitter
__label__no First check if you are using the latest CocoaPods version before filing a ticket.You can install the latest version with $ [sudo] gem install cocoapods.
__label__no - If reporting a bug, clearly describe the issue including steps to reproduce, observed behavior, and expected behavior.
__label__no Reporting an Issue/Bug?
__label__no :+1::tada: First off, thanks for taking the time to contribute! :tada::+1:
__label__bw Now that you've got VirtualBox and Vagrant installed with the source code cloned in ~/assemblymade/coderwall we can start up the Vagrant instance.
__label__tc Examples of behavior that contributes to creating a positive environment include:
__label__sc Revert
__label__tc - Demonstrating empathy and kindness toward other people
__label__no - Major Changes that you wish to contribute to the project should be discussed first on Gitter Chatso that we can better coordinate our efforts, prevent duplication of work, and help you to craft thechange so that it is successfully accepted into the project.
__label__dc - React performance tools
__label__tc Second opinion is always important.
__label__dc - Public declarations come before private declarations. Methods should be declared before data members.
__label__no To find the version of the SDK that Caliburn Micro requires go to src/global.json.
__label__no - Submitting a bug is just as important as contributing to code. Report an issue in the relevant repo out of the GitHub repos listed below.
__label__cf 4.  Add the License below to the top of any new file(s) you've added.
__label__cf Please review the preceding section before proposing a code change. This section documents how to do so.
__label__dc - dynvariables > variables
__label__bw If you just want to install a snapshot of the latest development version of the CLI, you can use the requirements.txt file included in this repo. This file points to the development version of the above packages:
__label__sc - test: Adding missing tests
__label__no Making a Donation
__label__cf Working on your first Pull Request? You can learn how from this free series, How to Contribute to an Open Source Project on GitHub.
__label__no Follow either of the two links above to access the appropriate CLA andinstructions for how to sign and return it. Once we receive it, we'll be able toaccept your pull requests.
__label__sc $ scripts/run-integ-parallel @aws-cdk/aws-ec2 @aws-cdk/aws-autoscaling ...
__label__no Contributing Guide
__label__sc All submissions, including submissions by project members, require review. Weuse GitHub pull requests for this purpose. ConsultGitHub Help for moreinformation on using pull requests.
__label__cf Managing Issues and PRs
__label__no How Do I Submit A (Good) Bug Report?
__label__dc - classes: should always begin with prefix cc (in lower case ccConsole)
__label__no - basic
__label__no - Explain bug briefly but in detail
__label__dc Codestyle
__label__no Questions
__label__no Using the issue tracker
__label__cf 2.  Create a GitHub Pull Request for your change, following the instructions in the pull request template.
__label__sc - make sass: Compile SCSS files.
__label__no - Coding Rules
__label__sc 2.  Create a branch (git checkout -b my_awesome_feature)
__label__no Feature Requests
__label__sc Submit Changes
__label__sc - Push your branch to GitHub:
__label__dc #include <algorithm>
__label__sc - don't capitalize first letter
__label__no Getting started as a "Maintainer"
__label__bw yarn dev --run-project /project/folder --record --key <key>
__label__no - Road Map
__label__no - Step 5: Pull Request
__label__cf 2.  The repo owner will respond to your issue promptly.
__label__no - Describe the major changes introduced. API changes must be documented. In particular, backward-incompatible changes must be well explained, with examples when possible.
__label__dc - using namespace
__label__dc Development style guidelines
__label__dc - HTML5 drag and drop browser inconsistencies
__label__no The Accounts project was intended - since its inception - to be a community maintained project. We would love to see you get involved (especially long time contributors from the Meteor community who we've worked with before).
__label__no If you discover a potential security issue in this project we ask that you notify AWS/Amazon Security via our vulnerability reporting page. Please do not create a public github issue.
__label__no - About adding the license/header of 3rd-party work:
__label__sc - ... Don't update the wiki until your change is merged and released, but make a note in your pull request so we don'tforget.
__label__bw Building
__label__sc Make sure any new functions you add are are:
__label__sc Reviewers must ensure that linting and tests pass in CI and locally prior to areview taking place. You can do this by running npm run generate followed bynpm run lint and npm run test.
__label__sc We may ask you to sign a Contributor License Agreement (CLA) for larger changes.
__label__no Client Libraries are sdks used to interact with azure resources at application run time while Management Libraries are those used to manage (create/modify/delete) Azure resources.
__label__sc 3.  Create your feature branch (git checkout -b my-new-feature)
__label__no Note the $CEPH_VERSION and $CEPH_POINT_RELEASE variables usually used in __DOCKERFILE_INSTALL__are extracted from the first field of the flavor name.
__label__tc We are open to, and grateful for, any contributions made by the community. By contributing to axios, you agree to abide by the code of conduct.
__label__cf Protip: git stash is a great way to save the work that you haven't committed yet, to move between branches.
__label__no - Feel invited to donate using this guide.
__label__no * or more contributor license agreements.  See the NOTICE file
__label__bw Setting Up the Code for Local Development
__label__no Submitting an Issue
__label__sc We favor pull requests with very small, single commits with a single purpose.
__label__sc You can create a new branch with
__label__sc Before you submit your Pull Request (PR) consider the following guidelines:
__label__no Getting and building
__label__dc - Snippet code and examples must be enclosed in appropriate, language-tagged blocks as shown in the snippet template, be short and use modern techniques and features. Also make sure to test your code before submitting.
__label__sc - Your patch doesn't have useless merge commits.
__label__no Bug Reports
__label__no The following topics should generally not be proposed for discussion as they are non-starters:
__label__no How to Contribute to asdf
__label__no Attribution
__label__bw # Or proxy it to a remote backend so you can test frontend changes without# starting the backend locallynpm run dev-server -- --superset=https://superset-dev.example.com
__label__cf 2.  Clone your fork locally
__label__dc For lambda expressions we have hanging brackets
__label__sc # Run the test after you finish your modification. Add new test cases or change old ones if you feel necessary$ npm test
__label__sc - Squash your commits into one commit (see the next chapter).
__label__sc Instance configurations are in config/test-{1,2,3,4,5,6}.yaml.Note that only instance 2 has transcoding enabled.
__label__no - Any modifications you've made relevant to the bug
__label__sc 1.  Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__sc Prerequisites:
__label__cf - Ensure that your code has an appropriate set of unit tests which all pass.
__label__sc Did you write a patch that fixes a bug or implements a new feature?
__label__dc - CodeMaid, for ensuring consistent code syntax, whitespace convention, etc.
__label__dc - Variables should be either named with lowerCamelCase or better with lower_underscores to avoid conflicts.
__label__no We'd love to accept your patches and contributions to this project. There arejust a few small guidelines you need to follow.
__label__no Remember that issues that are due to mis-configuration, wiring or failure to read documentation just takes time away from the developers and can often be solved without developer interaction by other users.
__label__no Table of contents
__label__no CI status
__label__no - Online development
__label__sc - Reference issues and pull requests liberally after the first line
__label__no - Pull Request Guidelines
__label__dc - common: All common parts between these packages, reusable JS.
__label__no API documentation
__label__sc make lint
__label__no - Add screenshots when possible
__label__no To report bugs, please use the Issue Tracker
__label__dc If you've followed the linking instructions, it's useful to run bothnpm run watch tasks (each task from @uirouter/core and @uirouter/angularjs).This ensures that changes to either @uirouter/core and @uirouter/angularjs compile successfully and are run against their test suites.
__label__bw Developers should use a virtualenv.
__label__dc - Check if class exists,
__label__dc - You should define a default constructor if your class defines member variables and has no other constructors. Unless you have a very specifically targeted optimization, you should initialize all variables to a known state even if the variable state is invalid.
__label__sc Older IEs serialize html uppercased, but IE9 does not...Would be better to expect case insensitive, unfortunately jasmine doesnot allow to user regexps for throw expectations.
__label__cf The development of Weex is on master branch, you should write your code based on master branch.
__label__cf In terminal window 1 (inside your forked use-http directory)
__label__dc - Indent with tabs and align with spaces.
__label__sc If you don't agree with the CLA and don't want to provide DCO, you still can open a pull request to provide your contributions.
__label__sc Code reviews
__label__no - Logs and backtraces
__label__no If your issue appears to be a bug, and hasn't been reported, open a new issue. Help us to maximize the effort we can spend fixing issues and adding new features by not reporting duplicate issues. Please make sure to fill out the populated issue form before submitting the issue.
__label__sc ?3?subject
__label__no - one-dark-ui - the default UI styling for anything but the text editor. UI theme packages (i.e. packages with a -ui suffix) provide only styling and it's possible that a bundled package is responsible for a UI issue. There are other bundled UI themes, such as one-light-ui.
__label__cf 6.  Fix existing bugs on the Issue tracker after confirming that no one else is working on them.
__label__no - Explain why the enhancement would be useful.  It may be helpful to highlight the feature in other libraries.
__label__no Reporting issues
__label__cf 7.  Ensure that each commit has at least one Signed-off-by: line from the committer. If anyone else contributes to the commit, they should also add their own Signed-off-by: line. By adding this line, contributor(s) certify that the contribution is made under the terms of the Developer Certificate of Origin. The contribution licensing is described in the License section of the README.
__label__sc License
__label__sc - Edit appropriate Wiki pages.
__label__no - Writing tutorials
__label__sc 3.  Our Expeditor bot will automatically increment the version and update the project's changelog with your contribution. For projects that ship as a package, Expeditor will kick off a build which will publish the package to the project's current channel.
__label__sc For each new file, please include a license at the top of the file.
__label__cf - ArangoDB website
__label__sc - feat: A new feature
__label__dc - Up and Running with Facebook Flow for Typed JavaScript: a small primer for running flow
__label__no git push origin [--force] feature-xxx:feature-xxx
__label__sc Submitting code
__label__cf 5.  Commit your changes (make sure your commit message concise)
__label__sc If you are interested in the detailed specification you can visithttps://www.conventionalcommits.org/ or check out theAngular Commit Message Guidelines.
__label__no You can report bugs or make enhancement requests at the Ansible GitHub issue page by filling out the issue template that will be presented.
__label__dc - We try to follow the recommendations in theRuby Community Style Guide and userubocop to "enforce" it. Please see.rubocop.yml for exceptions.
__label__no - Any modifications you've made relevant to the bug
__label__no - Reporting bugs
__label__sc git rebase master -igit push -f
__label__no - Err on the side of more frequent patch releases.
__label__no We use this "algorithm" for triaging issues, which anyone can jump in and follow:
__label__dc It is worth looking at other libraries out there to see how they do drag and drop. Things to look at is their philosophy and api. react-beautiful-dnd is an opinionated, higher level abstraction than most drag and drop libraries. We do not need to support every use case. We need to find the right level of control while still maintaining a beautiful experience for the user, flexibility of use and a clean, powerful api.
__label__no - Open bug entries for JMeter
__label__no Your contributions are welcome and we're very open about how contributions are made, however, to keep order to things please take the following into consideration:
__label__no """clientMutationId is required for Relay support."""clientMutationId: String!}
__label__no Development Team
__label__sc {"scripts": {"postinstall": "../aws-cdk/link-all.sh"}}
__label__no Before You Start
__label__no Development Overview
__label__no Translations Installation
__label__no - markdownlint - runs markdownlint, also known as mdl(this checks for errors in the markdown text)
__label__sc Testing
__label__dc ## Coding Rules
__label__no - Small documentation changes that reinforce existing subject matter. Most commonly being, but not limited to spelling and grammar corrections.
__label__ct Unsure where to begin contributing to Atom? You can start by looking through these beginner and help-wanted issues:
__label__no Due dates are flexible. Core committers can change them as needed. Note that GitHub sort on them is buggy.
__label__dc - Follow our [style guide][style].
__label__no - Search for your bug, make sure it is not already reported. If it is already reported, make a comment on that issue.
__label__no 1.  This is the first step
__label__dc Documentation
__label__no - panda
__label__sc Some good practices for the feature branch:
__label__sc - Please do not update your branch from the develop unless we ask you to. See the responding to feedback section below.
__label__cf Getting Started
__label__sc Follow the prompt and commit .all-contributorsrc and README.md in the PR.
__label__no Community discussion, questions, and informal bug reporting is done on thediscuss.CodeMirror forum.
__label__sc - fix: A bug fix
__label__sc bin/rake local server
__label__no - Screenshots - Due to the visual nature of Angular Material, screenshots can help the teamtriage issues far more quickly than a text description.
__label__no - A comprehensive list of steps to reproduce the issue, or even better, apassing/failing test spec.
__label__cf 2.  Comment on the issue stating that you are going to work on it.
__label__cf git remote add upstream https://github.com/akkadotnet/akka.net
__label__bw No it's not. After re-bootstrapping you need to restart the watch command.
__label__cf 2.  If you've added code that should be tested.
__label__no How to contribute
__label__sc - Add our license to new files
__label__sc Pull Request Requirements
__label__sc Contributing
__label__no Next, create a new issue that briefly explains the problem,and provides a bit of background as to the circumstances that triggered it. Don't forget to include the link tothat plunkr you created!
__label__no Issue high-jacking, e.g. adding a request/issue to an existing issue, is verydisruptive.Please create a new issue, if it is similar it will be marked duplicate.
__label__sc git pull --ff upstream master
__label__no 5.  Create a branch in your fork of Azure SDK for .NET and add your newly generated code to your project. If you don't have a project in the SDK yet, look at some of the existing projects and build one like the others.
__label__no - Code Organization
__label__no - markdown-preview - the rendered markdown pane item.
__label__cf 4.  Please format your code using the black defaults. You can use this online formatter.
__label__sc - run the unittest available in tests directory
__label__tc Be friendly and patient.
__label__dc - Translations :
__label__sc We've been trying to follow the rails way, stable branches, but have beeninconsistent. We should have one branch for each minor version, named like4-3-stable. Releases should be done on those branches, not in master. So,the "stable" branches should be the only branches with release tags.
__label__cf - Commit as you like, but preferably in logical chunks. Use meaningful commitmessages and make sure you do not commit unnecessary files (e.g. objectfiles). It is normally a good idea to reference the issue number from thecommit message so the issues will get updated automatically with comments.
__label__cf - Features should serve the general public. Very specific things for your use case are frowned upon.
__label__no Contributions of tests and documentation are always welcome too!
__label__dc All packages in the repo use a standard base configuration found at eslintrc.js.This can be customized for any package by modifying the .eslintrc file found at its root.
__label__dc It is also important to keep a certain async-flow and to always use ConfigureAwait(false) in conjunction with an await expression.
__label__sc 8.  Submit a pull request through the GitHub website.
__label__sc Unit Tests
__label__bw - Clone this repo (git clone https://github.com/bootstrap-vue/bootstrap-vue --branch=dev)
__label__no *    but WITHOUT ANY WARRANTY; without even the implied warranty of
__label__no - Interactor version
__label__sc - Creating an Issue or Pull Request requires a GitHub account.
__label__no 2.  Review the Jira issue tracker.  You can search for tickets relating to languages you are interested in or currently using with thrift, for example a Jira search (Issues -> Search For Issues) query of project = THRIFT AND component in ("Erlang - Library") and status not in (resolved, closed) will locate all the open Erlang Library issues.
__label__ct If the issue is a few months old, it might be a good idea to write a short comment to double-check that the issue or feature is still a valid one to jump on.
__label__dc - When adding new code just make sure it follows the same slyle as the existing code.
__label__cf 3.  You open an issue to discuss any significant work - we would hate for your time to be wasted.
__label__no - Function declarations
__label__sc Commit Message Format
__label__sc Conky uses the Catch2 unit testing framework. If you are adding new functions or methods, please consider adding unit tests for that code. Additionally, if you'd like to add tests for existing code, that would be a welcome contribution.
__label__no 11. Please no links to binaries, e.g. zip files, either contribute your example as a github project, a gist or another public code sharing service.
__label__sc - The maintainer will notify all contributors to a designated specification in writing via provided contact information of the start of a 30 day review period, after which the specification will be subject to the OWFa 1.0.
__label__cf - Make the required changes.
__label__no 2.  Docker Container
__label__sc 1.  Make sure that there is a corresponding issue for your change first. If there isn't yet,create one.
__label__no Requirements
__label__bw - Watch the packages for changes and recompile: yarn start (You need to run this command in the package subfolder you are updating)
__label__cf git rebase master -igit push -f
__label__no Contributing
__label__cf 7.  If you have any issues, jump into chat, introduce yourself and ask or leave a message if no one is around.
__label__no Troubleshooting
__label__no In any case, be sure to describe the feature in enough detail, to consider its implications on existing parts of the software if relevant and to describe how it would help you in particular. Also, please consider including a mockup if the issue includes UI changes.
__label__no - Can you reproduce the problem in safe mode?
__label__tc 1.  Post your question on the Xamarin Forums.
__label__sc Partial pack
__label__sc We welcome all collaboration! If you can fix it or implement it, please do! :hammer:
__label__sc - Include a description of what your change intends to do
__label__no How to contribute to laravel-enum
__label__no If we still have a bug lurking around we will do our best to fix it promptly.
__label__tc - A TC (Technical Committee) is a group of committers representing the required technicalexpertise to resolve rare disputes.
__label__no You can request a new feature by submitting an issue to our GitHub Repository.  If youwould like to implement a new feature then consider what kind of change it is:
__label__sc 9.  Edit existing wiki page / add a new one explaining the new features, including:
__label__sc - The writing operating on real raw devices.
__label__no - Working on the code
__label__no Contribution guide
__label__sc - refactor: A code change that neither fixes a bug nor adds a feature
__label__no - Describe the current behavior and explain which behavior you expected to see and why.
__label__no - Introduce an interface only when needed.
__label__sc Your contribution will be subject to license Clause #5.
__label__sc Git Commit Guidelines (from AngularJS)
__label__no Il n'y a pas de mod
__label__no - Reporting Issues
__label__bw The trust in the example above tells the locally running PostgreSQL server to ignore user passwords and always grantaccess on clients connecting locally. Do not use this setting in a production environment.
__label__no 2.  Navigate to service directory e.g. "sdk\eventhub"
__label__cf 1.  Send a patch that fix an issue or that implement a new feature.Alternatively, you can do a 'pull request'1 in GitHub.
__label__cf If you're making code more resilient, test it locally to demonstrate how exactly your patch changesthings.
__label__sc - Original, public domain, MIT, BSD, or Apache licensed (non copyleft).
__label__tc The core team members and the project's community adopt an inclusive Code of Conduct that you can read in the CODE_OF_CONDUCT.md file.
__label__no Contributing to TwitterOAuth
__label__no First of all, thanks for contributing! Please take a moment to review this document in order to make the contribution process easy and effective for everyone involved.
__label__bw - yarn install
__label__no Using the issue tracker
__label__cf Before filing an issue:
__label__dc Code Conventions
__label__dc yarn storybook
__label__sc - We aim for 100% test coverage. Please write tests for any new functionality or changes.
__label__cf 2.  Clone the forked repository and create a new branch from master to push your commits to.
__label__no - Explain your purpose clearly in tags(see Useful Tags), title, or content.
__label__dc - Run ansible-lint against the playbook before committing. (There is a VSCode task set up to run the right command for you)
__label__no Formatting recommendations hold: paste short logs/code fragments into the post (use fixed-width text for them), attach long logs or multiple files.
__label__sc Atlas Branches
__label__sc - The pull request template that is provided should be filled out; this is not something that should just be deleted or ignored when the pull request is created
__label__cf - GitHub pull request documentation
__label__no - version of Colmena used
__label__sc Submitting a Pull Request (PR)
__label__sc - build: Changes that affect the build system, CI configuration or external dependencies(example scopes: gulp, broccoli, npm)
__label__ct Please ask first before embarking on any significant pull request (e.g.implementing features, refactoring code, porting to a different language),otherwise you risk spending a lot of time working on something that theproject's developers might not want to merge into the project.
__label__no A summary of the issue and the browser/OS environment in which it occurs. If suitable, include the steps required to reproduce the bug.
__label__no - Reproduce the Error - provide a live example (using Plunker orJSFiddle) or an unambiguous set of steps.
__label__tc - To reach the developers, use dev@cossacklabs.com.
__label__dc An automated formatter is available, see DEVELOPER.md.
__label__sc 6.  If your code does not conform to the PSR standards, does not include adequatetests, or does not contain a changelog document, we may ask you to updateyour pull requests before we accept them. We also reserve the right to denyany pull requests that do not align with our standards or goals.
__label__sc - If not done in commit messages (which you really should do) please reference and update your issue with the code changes. But please do not close the issue yourself.
__label__dc Commenting out code should not include a space after the slashes
__label__dc - Remember that we follow SemVer. If you are changing the behaviour, or the public api, you may need to update the docs.
__label__sc Closes #392
__label__no Our Pledge
__label__sc Pull requests
__label__no Adding themes/languages
__label__sc - If your change affects the visuals of the application, consider attaching ascreenshot.
__label__no - security is much weaker is debug due to a static salt
__label__cf 7.  Be attentive for questions or suggested changes on the pull request or inthe issue.
__label__no | Component            | Build Status                                                                                                                                                                                                          || -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || Management Libraries | Build Status   |
__label__sc 3.  Commit the changes to your fork and push them to the corresponding original repo by sending a Pull Request (PR).
__label__sc - DO include regression tests when fixing bugs.
__label__sc - The test coverage is also measured, and that should remain 100%
__label__no //! Place spaces in between braces and arguments.void someMethod( int argA, const Rectf &bounds );
__label__sc - If the commit is a Breaking Change, please note it clearly in this part.
__label__sc To send us a pull request, please:
__label__no Whenever you find a bug in atoum or think of a new feature you may open an issue in the bug tracker.
__label__no - We believe we can make the same change to the API of Darwin Foundation. This could be done via changes in the overlay, changes in the compiler, or changes in Darwin Foundation itself. This must be addressed in every proposal.
__label__no You may also link to external resources or other tools providing similar features to help reviewers.
__label__no - The release title is "x.x.x / YYYY-MM-DD" (where x.x.x is the version number)
__label__no - Contributing process
__label__sc Project Licensing
__label__cf git clone https://github.com/athityakumar/colorlscd colorlsgem install bundlerbundle install
__label__sc Running jest tests directly on a module
__label__sc - http
__label__dc Package Conventions
__label__dc - implementation.md provies implementation details
__label__cf 1.  Any change to the library which changes the API or ABI cannot be backported.
__label__sc Commit Message Format
__label__tc Examples of unacceptable behavior by participants include:
__label__sc You agree that all contributions that you make to the library will be distributed further under the same license as the library itself (Apache V2).
__label__no - aws-amplify-angular
__label__no Often it is convenient to draft an example outside of the main repository, suchas Google Colab, to avoid difficultieswhen working with git. Once you have an example you would like to add, follow thesame contribution procedure outlined above.
__label__sc ?4?body
__label__no - Use examples to help us understand the use case of the feature
__label__sc When providing code patches then please include the Camel JIRA ticket number in the commit messages.We favor using the syntax:
__label__no fragment on CommentRevision {"""metadata stores details on a CommentRevision."""metadata: CommentRevisionMetadata! @auth(roles: [ADMIN, MODERATOR])}
__label__no If you want to be really thorough, there is a great overview on Stack Overflow of what you should consider when reporting a bug.
__label__sc Testing
__label__cf Working on your first Pull Request? You can learn how from this free videoseries:
__label__no - You can be granted write permission if you've helped a lot with triage by pinging @bbondy, @bsclifton, @kjozwiak, or another Brave team member.
__label__sc IMPORTANT: By submitting a patch, you agree to allow the project owner to license your work under the same license as that used by this project (MIT).
__label__no Issues
__label__no - Browser(s) used
__label__no P.S.
__label__dc Prefer the object form of mapDispatchToProps over the function form unless you can't avoid it.
__label__sc After your pull request is merged
__label__no - For PRs: Categorize, flag required actions from authors. If PR is ready for review, flag required actions from reviewers.
__label__sc Getting Your Pull Request Merged
__label__dc It's ok to have many classes, files.Here is a rule of 30 suggestion.
__label__cf 1.  It's always recommended to find or submit an issue first, and comment that you want to do it.
__label__no Contributing to Squib
__label__sc - New features should be general and as simple as possible.
__label__sc If you need to modify a test locally and the VCR cassette doesn't have the correct information, you can run with new episodes enabled.
__label__ct Looking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.
__label__tc Feel free to reach out to any of the core-contributors with you questions or concerns. We will do our best to respond in a timely manner.
__label__sc - Search GitHub for an open or closed PRthat relates to your submission. You don't want to duplicate effort.
__label__no namespace cinder {
__label__sc $ git commit -m "Fixed typo [skip travis]"
__label__sc Source code that goes into the mainline Contiki repository must be ofinterest to a large part of the Contiki community. It must bewell-tested and the merge team must have confidence that the code canbe maintained over a longer period. See below for more detailspertaining to platform contributions.
__label__cf Please make sure you check out the issues first, someone might have started working on a similar idea already. If you are sure that what you want to contribute is new, then please open an issue describing what you want to implement before you decide to submit a PR.
__label__dc - Make changes to the implementation of your choice.
__label__ct If you catch a typo or error in the documentation, we'd greatly appreciate apull request.
__label__sc 3.  Create a new branch for your feature
__label__bw You can use yarn compat to run compatibility checks for all modules:
__label__no When opening an issue, there is a provided issue template. Fill out the information according to the template. This is information needed for Cypress to continue forward with your problem. Any issues that do not follow the issue template will be closed.
__label__bw make
__label__dc - Same-line braces.
__label__no - If your bug was already reported and you have additional information to provide, please comment on the existing issue. Do not create a new issue that is a duplicate of an existing one (unless it has been closed).
__label__sc By adopting the CLA, you state the following:
__label__dc - If the variable itself contains a glob pattern, make sure to setIFS=$'\n' before using it so that the pattern itself and any matchingfile names containing spaces are not split apart.
__label__ct - https://bugs.gentoo.org/buglist.cgi?quicksearch=net-misc%2Faxel
__label__dc Style Guide
__label__no - If it's a verified new bug, add it to the Bugs milestone.
__label__sc - Create pull request
__label__no Today this is done by combining the name of the repo with a random number.
__label__dc We can use Apache License 2.0 (Apache-2.0)and GPL-2.0 exactly (GNU GPL version 2.0 only),but Apache-2.0 and GPL-2.0 (only) have potential compatibility issues.First check if that Apache-2.0 and GPL-2.0 only components arein separate executables (if so, no problem).Most software licensed using the GPL version 2.0 is actuallyGPL-2.0+ (GPL version 2 or later), and GPL version 3 is known to becompatible with the Apache 2.0 license, so this is not a common problem.For more on license decisions see doc/dependency_decisions.yml;you can also run 'rake' and see the generated reportlicense_finder_report.html.Once you've checked, you can approve a library and its license with thethis command (this quickly modifies doc/dependency_decisions.yml;you can edit the file as well):
__label__no The ceph-releases/All/ directory contains code that is generic to all Ceph releases. It is morespecific than src/. Source that is shared between distros (but is not part of ceph-container'score functionality) can be placed in this directory.
__label__sc Bundler can be omitted, and the latest installed version of a gem dependencywill be used. This is only suitable for certain unit tests.
__label__sc - It's OK to have multiple small commits as you work on your branch - we will let GitHub automatically squash it before merging.
__label__sc - Completely covered by tests
__label__no Thank you!
__label__cf 7.  Commit the files
__label__bw - Build docker image
__label__sc git commit -a
__label__cf The conan-io organization maintainers will review and help with the coding of tests. Finally it will be assigned to milestone.
__label__sc 7.  Use GitHub to create a pull request going from your branch to apache:master.  Ensure that the Jira ticket number is at the beginning of the title of your pull request, same as the commit title.
__label__cf Add the feature you want to work on to the following list (or assign an existing feature to yourself). This will also allow us to discuss, in the PR's thread, any questions you might have or any expectations that might effect the API or the feature.
__label__sc - release: Release version commit
__label__sc - It's okay and encouraged to have multiple small commits as you work on the PR - we will squash the commits before merging.
__label__dc 1.  Please follow the WordPress code standards.
__label__sc IMPORTANT: By submitting a patch, you agree to allow the project owner tolicense your work under the same license as that used by the project.
__label__sc - Merge the changes and publish them on the gh-pages branch
__label__dc - Variables: lowercase separated by underscores, e.g., chunk_size
__label__sc - ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
__label__no Introduction
__label__sc Commit Message Guidelines
__label__no - Documentation
__label__cf 5.  Prepare your vagrant.yml and .env files
__label__no Found an Issue?
__label__no GitHub Basics
__label__cf 6.  Push your commits to your forked repository
__label__bw cd ~/assemblymade/coderwallecho Hello, `whoami` from `hostname` >> HELLO.txtvagrant sshcd ~/assemblymadecat HELLO.txt #whoa.echo Hello, `whoami` from `hostname` >> HELLO.txtexitcat HELLO.txt # wah-wah-wee-wa!rm -f HELLO.txt # yeah, it's deleted in the other spot too.
__label__no - If there is still no response after a weeks time, explain that you are closing the issue due to not enough information or inactivity and that they can comment in the issue with a reproducible example and we will reopen the issue.
__label__sc Review and Merge
__label__sc - You make a PR on the related documentation in the api-platform/docs repository.
__label__dc - Conditions and loops
__label__dc This project follows the TypeScript variation of Standard JavaScript code style.
__label__no So you've found a bug, and want to help us fix it? Before filing a bug report, please double-check the bug hasn't already been reported. You can do so on our issue tracker. If something hasn't been raised, you can go ahead and create a new issue with the following information:
__label__sc The codebase maintainers will now be alerted to the submission and someone from the team will respond. If your change fails to meet the guidelines, it will be rejected or feedback will be provided to help you improve it.
__label__bw Eclipse can import Gradle projects automatically via Import...->Gradle project wizard.
__label__no - If applicable, what you were doing when the issue arose and what youexpected to happen
__label__sc WARNING: It is possible that some tests may intermittently fail, even thoughthe software works fine.If tests fail, restart to see if it's a problem with the softwareor the tests.  On CircleCI you can choose to rebuild.Where possible, try to find and fix the problem; we have worked toeliminate this, and at this point believe we have fixed it.
__label__sc - Develop in a topic branch, not master
__label__no - Issues Guidelines
__label__no Think you found a bug? Please check the list of open issues to see if your bug has already been reported. If it hasn't please submit a new issue.
__label__no - commit message should have the format "Release 0.1.2" (replacing 0.1.2 with the actual version)
__label__dc - variables and dynvariables are first merged and recursively resolved
__label__dc - Use Google Java Style as basic guidelines of java code.
__label__no To preserve compatibility with PHP 5.5 when you add new dependencies, you should try to update your composer.lock file with the --prefer-lowest option.
__label__bw 7.  Gems Installation and Database Migration
__label__sc - You could use git cz with a CLI interface to replace git commit command, it will help you to build a proper commit-message, see commitizen.
__label__cf We'd love to have your help contributing code and features to AMP!
__label__no 1.  Run tests locally. Use tox to run tests on all supported Python versions.
__label__dc - Is there any information needed to be added to the docs to describe thefunction?
__label__tc - Be welcoming,
__label__no - Employees should
__label__no 1.  Past contributions to Cookiecutter and other open-source projects. Contributions to Cookiecutter include both code (both accepted and pending) and friendly participation in the issue tracker. Quantity and quality are considered.
__label__dc - When writing comments, use properly constructed sentences, includingpunctuation.
__label__sc 1.  Fork the repository.
__label__no - Reporting a bug? Please tell us:
__label__no - Write a short summary of the bug??
__label__no #### Description
__label__tc Other ways to contribute require direct contact with us. For example:
__label__no - Close the issue.
__label__no How is this process changed?
__label__sc - Release branches: MAJOR.MINOR.x are release branches. They contains minor changes and bugfixes after release of firstmajor version. Only the latest release branch, and it won't contains new features from master branch and next releases.
__label__ct - (Experimental) AI - use the botsupport or game wrappers to train a neural network
__label__cf - If we suggest changes then:
__label__sc No one can garantee how much will be remembered about certain PR after some time. To make sure we can easily recap what happened previously, please provide the following information in your PR.
__label__dc Code formatting
__label__no 1.  SAFETY FIRST: Remove CID, LAT, IMEI, IMSI and phone number from logs you submit!
__label__sc 3.  Add/update a test for the feature or fix, if possible. See the __tests__ directory for existing tests. To run these tests:
__label__no Reporting Bugs
__label__no Chai Contribution Guidelines
__label__no Contributing Policy
__label__bw In the case of PostgreSQL the requirement is to be able to connect as the postgres user on localhost also without theneed for a password. This can be achieved by editing or adding the following line in the pg_hba.conf file:
__label__no - Support
__label__no Preparation
__label__no Contributions are welcome and will be fully credited.
__label__no When contributing new React components to Superset, please try to add a Story alongside the component's jsx/tsx file.
__label__dc You can find a documentation of the client code/architecturehere.
__label__cf 1.  Make sure you have a GitHub account.
__label__dc - Tabs for indentation, spaces for alignment
__label__dc - Use // to define basic comments that should not be processed by Doxygen.
__label__ct - Your change shouldn't have a negative effect on the rest of the code
__label__bw nvm and node
__label__no 1.  This is the first step
__label__sc $ git push origin my_new_feature
__label__no - Breaking backward compatibility bumps the major and resets the minor and patch.
__label__sc NOTE: Only original source code from you and other people that have signedthe CLA can be accepted into the main repository.
__label__no Then, get some test data!
__label__no Contributions are welcome as long as they are part of my vision for GLI (or can be treated as optional to the user).  I am obsessive about backwards-compatibility, so you may need to default things to disable your features.  Sorry, not ready to bump a major version any time soon.
__label__sc Type
__label__no Developing
__label__dc // ... any number of CAF_TEST ...
__label__no The known image extensions are used to find all the images recursively and the ignored files from imgbotconfig are parsed.
__label__no - Build Issues
__label__dc - Try to stick to the existing code style. Please don't reformat or change the syntax of existing code simply because you don't like that style.
__label__dc PSR-1: Basic Coding Standard
__label__dc Style Guide
__label__no Please...
__label__dc This will execute COMMAND against my-module and all it's deps (in a topological order of course).
__label__tc - Public or private harassment.
__label__tc - TW: @lfernandescosta
__label__dc - Please follow existing coding style when submitting pull requests.
__label__no - When should I create an issue?
__label__sc - When PR is submitted check if TravisCI ran all tests successfully and Rubocop didn't raise any issues
__label__sc and then run the test suite with:
__label__no Bugs :bug: :beetle: :ant:
__label__no - Explain why it doesn
__label__no Found an Issue?
__label__sc Pull requests are very welcome! Please try to follow these simple rules if applicable:
__label__bw create-new-snippet <my-snippet-name>
__label__sc Testing docker image
__label__cf Ensure that tests pass
__label__no - How does the problem look like and what steps reproduce it?
__label__dc - Use 2 spaces per indentation level.
__label__no Contributing
__label__sc - If you want to work on a feature that has been requested or fix a bug that has been reported on the "issues" page, add a comment to it so that other people know that you are working on it.
__label__dc - Use intend with 4 spaces in your code
__label__dc Coding Style
__label__sc - Create an input.js file that contains the code you want the babel parser to parse.
__label__no - Try to reproduce the problem as describe in the issues
__label__sc [1] This type MUST have a scope. See the next section for more information.[2] This type MUST NOT have a scope. It only applies to general scripts and tooling.
__label__no Improve documentation
__label__sc Body
__label__bw In order to run these commands, in the virtual machine, all you have to do is to run vagrant provision.
__label__no CONTRIBUTING
__label__no - tcpdump: https://github.com/the-tcpdump-group/tcpdump/tree/tcpdump-4.7.4
__label__sc GitHub pull requests
__label__no - The new files must have a clear copyright notice and license header. Contiki'spreferred software license is the3-clause BSD.Other licenses may also be consideredas long as they are compatible with the 3-clause BSD (e.g. the Apache 2.0 license).Conversely, code distributed under GPL cannot be considered. The same applies tobespoke licenses, such as those allowing use or redistribution only together withcertain kinds of hardware.
__label__no (TODO write this part)
__label__no 3.  What did you expect to happen?
__label__dc Coding Standards
__label__no Bug reports
__label__cf Contributing
__label__no 4.  Be patient.
__label__tc Questions or discussions about new features belong onFORUM,IRC, frequently asked questionswill be added to the F.A.Q onthe wiki.
__label__no How to Contribute
__label__cf 2.  Fork the repository on GitHub.
__label__tc - Clasp mailing list
__label__sc 1.  Fork recommendable
__label__sc Pull Requests
__label__sc Please refer to each packages' README.md which documents how to run tests. It is not feasible to try to run all of the tests together. We run our entire test fleet across over a dozen containers in CI.
__label__dc - Are the coding guidelines followed?
__label__cf 2.  Once approved, go ahead and fork the REPO.
__label__cf - Do only one thing
__label__bw Clone this repo to your local machine and install the dependencies.
__label__sc - Focus on one task. If a pull request contains several unrelated commits, we will ask for the pull request to be split up.
__label__ct How can I contribute?
__label__sc - Run bundle exec rubocop and fix any issues raised.
__label__no We would love to have your help in making Lucida better.
__label__bw - You should be able to start the app via bin/rails s and navigate to http://localhost:3000/admin
__label__no To contribute new docs, you can either click the "Suggest Edits" in the topright of each page, or you can edit directly via source. We suggest that forindividual fixes or contributions to the documentation.
__label__no - Your exact HW specification (processor, model number, etc.)
__label__sc - Send coherent history - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please squash them before submitting.
__label__dc In general we want to use GPL-compatible OSS licenses.Acceptable licenses include MIT,BSD 2-Clause "Simplified" or "FreeBSD" License (BSD-2-Clause),BSD 3-Clause "New" or "Revised" License (BSD-3-Clause), theoriginal Ruby license (Ruby) or thecurrent Ruby license(the latter includes BSD-2-Clause as an option),GNU Library or "Lesser" General Public License (any version),GNU General Public License version 2.0 or later (GPL-2.0+), and theGNU General Public License version 3.0 ("or later" or not)(either GPL-3.0 or GPL-3.0+).
__label__sc - Do not submit commented-out code. If the code does not need to be usedanymore, please remove it.
__label__dc - Follow the conventions you see used in the project.
__label__bw - If you just want to build one or the other, you can run rake build:php or rake build:rb.
__label__sc - Make sure unit tests pass. Please read how to run unit tests below.
__label__sc - Deleting or ignoring this template will elongate the time it takes for your pull request to be reviewed
__label__sc Description
__label__no The Devilbox is currently being developed in my spare time and mostly reflects the features that Iam using for all the web projects I have to handle. In order to better present it to the majorityof other software developers I do require support to cope with all the feature requests.
__label__no 6.  Good bug reports shouldn't leave others needing to chase you up for more information. Be sure to include thedetails of your environment.
__label__dc - We indent using two spaces (soft tabs)
__label__no - clientMutationId - the identifier used by Relay to identify this mutation,our front-end state cache to process the mutation request. This is the onlyplace in the code-base that we do not capitalize the acronym when written incamel-case, this is unfortunately due to legacy reasons from within Relay.
__label__dc - dotfile.py: represent a dotfile
__label__cf (If you are new to git and/or GitHub, you should read Pro Git , especially the section on Contributing to a project:Small/Large Public Project )
__label__no 1.  Assume our current stable release is 4.3.0. We will start the discussion of milestone of the release two versions ahead, which is 4.5.0 at the beginning of each month. At this time we should also kickoff the developing of the next release, which is 4.4.0.
__label__sc - Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.
__label__cf How to become a contributor and submit your own code
__label__no - The left-hand side of a badge should not advertise. It should be a lowercase nounsuccinctly describing the meaning of the right-hand side.
__label__no If you're creating a bug/problem report, please include followings:
__label__no Then from the project directory, run:
__label__no - Question or Problem?
__label__sc 3.  Check out the develop version of CMB2. If you submit to the master branch, the PR will be closed with a link back to this document.
__label__sc 1.  git remote add codeigniter git://github.com/bcit-ci/CodeIgniter.git
__label__no If you wish to contribute to the system message translations,then fork and clone the translations repositoryseparately from the codebase.
__label__sc - If testing against a release, ensure your tests are performed against thelatest minor version (the last number in the release denotes the minor version,e.g. the "3" in the 4.3.3)
__label__no How to Contribute
__label__sc - Update your master with the latest upstream version:
__label__dc - use spaces between function parameters
__label__tc Code of Conduct
__label__ct Finding contributions to work on
__label__no - Comment clean up
__label__cf Please check the guide for sending your contributions with Github athttps://github.com/Codeception/Codeception/wiki/Git-workflow-for-Codeception-contributors
__label__sc - use the imperative, present tense: "change" not "changed" nor "changes"
__label__no - Before You Do Any Work
__label__dc Testing
__label__sc https://github.com/<username>/ksql
__label__no So that we are able to assist you as effectively as possible with the issue,please ensure that your bug report has the following:
__label__no Is what they are describing actually happening?
__label__no API Freeze Consequences
__label__no - New features require a +1 from 3 core committers
__label__no Badge guidelines
__label__sc 2.  Ensure that jspm is installed. If you need to install it, use the following command:
__label__no The relevant maintainer for a pull request is assigned in 3 steps:
__label__tc This Code of Conduct applies both within project spaces and in public spaces when an individual is representing theproject or its community. Examples of representing a project or community include using an official project e-mailaddress, posting via an official social media account, or acting as an appointed representative at an online or offlineevent. Representation of a project may be further defined and clarified by project maintainers.
__label__tc - IRC: lucasfcosta
__label__sc - fix #123, make compatible to recyclervew 25.2.0
__label__no - Code of Conduct
__label__bw # to buildyarn button build
__label__no Who assigns maintainers?
__label__dc Static code analysis
__label__no Feature requests
__label__sc - Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:
__label__no - Ideal branch naming would reference the issue number it is resolving (e.g. issue-xxx-enabling-cool-feature ).
__label__no If possible, provide a demo where the bug is isolated and turned into its smallest possible representation. That would help a lot!
__label__bw 5.  Open http://localhost:3000/ in a web browser.
__label__sc To see the changes that you have selected to be part of your commit, use:
__label__no - Pull requests
__label__cf 7.  Submit a pull-request
__label__sc - refactor: A code change that neither fixes a bug nor adds a feature
__label__sc Just as in the subject, use the imperative, present tense: "change" not "changed" nor "changes".The body should include the motivation for the change and contrast this with previous behavior.
__label__cf You can help new versions of the client.
__label__cf Before working on a new feature, submit an issue with the proposed design of thefeature so we can discuss. If you open a new feature pull request withouthashing out the design with me first, I can't guarantee I'll merge it.
__label__sc Excited yet? This section will guide you through providing a patch to thecommitters of the project for review and acceptance.
__label__ct Check out the issues labeled help wanted (easy) or help wanted(hard) for good issues to tackle. Here's how to submit a pull request (PR):
__label__ct - documentation: If an issue requires changes or clarification to our documentation (READMEs, wiki, code comments, etc.) then it will be marked with this issue. These issues normally do not pertain to code changes and are ideal for those who don't necessarily want to get their hands dirty with code.
__label__no Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.The rest of the commit message is then used for this.
__label__bw In order to ensure that YamlDotNet is compatible with AOT compilation, an automatic test has been created that runs on every commit on Travis CI. That test exercises the serializer and deserializer to help identify AOT-related problems.
__label__sc Publish your Change
__label__dc - Use clang-format with the LLVM style.
__label__no - brunch/deppack is at heart of Brunch 2's new NPM integration.If it has to do with exposing NPM modules to the browser, it most likely belongs here.
__label__no Contributing to C++ Insights {#contributing}
__label__sc There is a pull request template for your to follow. Please fill in the template before submitting your code. Your pull request will be reviewed faster if we know exactly what it does.
__label__no Below you will find a collection of guidelines for submitting issues as well as contributing code to the Caffe repository.Please read those before starting an issue or a pull request.
__label__no - General GitHub documentation
__label__no How to contribute to App Metrics
__label__no Contributing
__label__sc Branch Management
__label__no Further reading: 10 tips for better Pull Requests
__label__cf 4.  The repo owner will review your request. If it is approved, the change willbe merged. If it needs additional work, the repo owner will respond withuseful comments.
__label__sc Per the GitHub Terms of Service, be aware that by making acontribution to this project, you agree:
__label__no - Submit abug report.We love hearing about broken things, sothat we can fix them. Any problem is fair game, this includesthe documentation examples, tests, and repository as well as thelibrary itself. Bug reports should be opened on theIssues page.
__label__sc - update-hotfix-sequence
__label__cf Adding Torrents is easy too. Just get an Tracker instance and call AddTorrent:
__label__sc - gulp scss Generates the css file from the source scss.
__label__no - Requesting new features or improvements
__label__cf Before making any change, please discuss it on the Github issues. In this way, no other developer will work on the same issue and your PR will have a better chance to be accepted.
__label__sc 3.  We maintain a high percentage of code coverage in our unit tests. If you makechanges to the code, please add, update, and/or remove tests as appropriate.
__label__tc StackOverflow is a much better place to ask questions since:
__label__cf Where to start / Roadmap
__label__sc - don't capitalize first letter
__label__no - Always run with the latest version before you fire a bug
__label__sc - Open a new pull request with the patch.
__label__no - Stable APIs that tool builders can rely on
__label__no Reporting issues is helpful but an even better approach is to send a Pull Request, which is done by "Forking" the main repository and committing to your own copy. This will require you to use the version control system called Git.
__label__no How to contribute to Phinx
__label__no If you have a feature idea for the framework or modules, create an issue on GitHub or attend to an existing discussion. Then you can implement it if it's embraced by the community.
__label__no The project aims to minimise the impact on users upgrading to newer versions of the library and it should not be necessary for a user to make any changes to their own code to work with a newer version of the library. Unless the user has made an active decision to use newer features, a newer generation of the library or a change has been necessary due to a security issue or other significant software defect, no modifications to their own code should be necessary. To achieve this, API compatibility is maintained between different versions of Mbed TLS on the main development branch and in LTS (Long Term Support) branches.
__label__sc Finally, never submit a PR that will put master branch in broken state. If the PR is part of multiple PRs to complete a large feature and cannot work on its own, you can create a feature branch and merge all related PRs into the feature branch before creating a PR from feature branch to master.
__label__sc Must be one of the following:
__label__dc #!/bin/shsrc/CheckBasicStyle.lua 1>&2 -g
__label__no Happy coding!
__label__no - Describe the exact steps which reproduce the problem in as many details as possible.
__label__no Backers
__label__cf - If you're unsure if a feature would make a good addition, you can always create an issue first. Raising an issue before creating a pull request is recommended.
__label__no Reporting Bugs/Feature Requests
__label__dc Coding style
__label__no - Explain that there is not enough information to reproduce the bug. Provide information on how you went about recreating the scenario, if you
__label__no - What is the actual (observed) behavior / output?
__label__bw Step 3: Fork and checkout your own Cherow repository
__label__sc - revert: A git commit revert. The description must include the original commit message. [2]
__label__no The process for contributions is roughly as follows:
__label__bw 2.  Download the composer.phar executable
__label__no Viability
__label__no Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and thediscussion might inform you of workarounds readily available.
__label__no - A short, descriptive title. Ideally, other community members should be ableto get a good idea of the feature just from reading the title.
__label__sc git branch -D my-fix-branch
__label__sc - Share screenshots of your changes. It will make review process faster
__label__no | Task               | Purpose                                                          || :----------------- | :--------------------------------------------------------------- || build            | Compile non-node code (coffeescript/typescript)                  || start            | Open Cypress in dev and global mode                              || watch            | Auto-rebuild on file changes                                     || clean            | Remove build artifacts                                           || clean-deps       | Remove all installed dependencies (in root and in every package) || test             | Run the default set of tests (may be package dependent)          || test-debug       | Run unit/integration tests with inspect node CLI flags           || test-unit        | Run unit tests                                                   || test-integration | Run integration tests                                            || test-e2e         | Run end-to-end tests                                             || test-watch       | Run unit tests and rebuild/rerun on file changes                 |
__label__cf - AST spec (babel-parser/ast/spec.md)
__label__sc To contribute to CVXPY, send us pull requests. For those new to contributing,check out Github'sguide.
__label__no curl -sS https://getcomposer.org/installer | php
__label__bw vagrant reload ; ./run.sh
__label__tc Examples of unacceptable behavior by participants include:
__label__cf The details are explained there, but the important items are:
__label__tc If you have a question about Mongoose (not a bug report) please post it to either StackOverflow, or on Gitter
__label__dc Choosing to drop older versions of Windows, GTK+, and OS X that I could have easily continued to support was not done lightly. If you want to discuss dropping support for an older version of any of these for the benefit of libui, file an issue pleading your case (see below).
__label__sc If you get tired of typing --to=criu@openvz.org all the time,you can configure that to be automatically handled as well:
__label__bw git clone git@github.com:yourusername/bookshelf.git
__label__no - Advanced user of Catch2, who want to customize their usage.
__label__sc 4.  Think about how the changes you are about to make can be tested, write tests before coding
__label__dc - Make sure all new .java files have a simple Javadoc class comment with at least an @author tag identifying you, and preferably at least a paragraph on what the class is for.
__label__no Found an Issue?
__label__cf The issue tracker is for bugs only.
__label__dc Eslint can help to identify styling issues that may exist in your code. Your code is required to pass the test from eslint. Run the test locally by $ npm run lint.
__label__sc - Include as much data and comments as practicle.
__label__no Before we look into how, here are the guidelines. If your Pull Requests failto pass these guidelines it will be declined and you will need to re-submitwhen youfor us to maintain quality of the code-base.
__label__no Contributing to Ballerina
__label__dc This project uses RuboCop to enforce standard Ruby codingguidelines. Currently we run RuboCop's lint rules only, which check for readability issueslike indentation, ambiguity, and useless/unreachable code.
__label__no - Javadocs for packages (package-info.java), classes, methods, etc.
__label__sc 1.  First of all you will need to sign ourContributor License Agreement (CLA).
__label__tc Code of Conduct
__label__sc - Delete the local branch:
__label__no See: https://boinc.berkeley.edu/trac/wiki/TranslateIntro
__label__dc - 4 spaces indentation
__label__bw Install the latest version of Altair locally using
__label__bw 1.  Fork this repo and obtain a local clone.
__label__sc If you have already adopted terms and conditions of the CLA, you are able to provide your contributions. When you submit your first pull request, please add the following information into it:
__label__no $ yarn bump
__label__no 1.  State the version of Bash you're using bash --version
__label__sc Revert
__label__bw This assumes this repo is a sibling of the target repo and will install the CDK as a linked dependency duringyarn install.
__label__sc In a fixture test, you simply write out the code you want to transform in input.js.
__label__cf 4.  Make sure to keep commits small and relevant.
__label__no Updating Sample Snippets
__label__no Bugs are tracked as GitHub Issues.Please follow these guidelines when submitting a bug:
__label__sc $ git commit -m "A brief summary of the commit>> A paragraph describing what changed and its impact."
__label__bw These instructions assume a parent directory bar and we will be adding two child directories: botpress and foobot.
__label__sc Please run npm test to make sure all the unit tests are passing before you make your pull request.
__label__no - If your issue is resolved but still open, don
__label__sc git checkout devgit fetch upstreamgit merge --ff-only upstream/dev
__label__no - Chef Software Inc. Website
__label__cf Pull Requests
__label__sc Linking against this repository
__label__bw I am going to assume that the project is cloned into your home directory in and into a directory structure like ~/assemblymade/coderwall.
__label__no - The file generate.cmd, used to generate library code for the given package, can also be found in this project
__label__no Generally speaking the maintainers are very conservative about adding new features, and we can
__label__sc - For individuals we have a simple click-through form.
__label__sc Sometimes we may need you to rebase your commit against the latest code before we can review it further. If this happens, you can do the following:
__label__dc - codesandbox-api: The npm package that's responsible for communicationbetween the sandbox and the editor.
__label__sc - chore: Other changes that don't modify src or test files
__label__no - Run a CDK unit test in the debugger
__label__ct - refactoring: If an issue requires code to be refactored before a particular change can be made, or if you spot inelegant patterns or implementations in code that you feel could be better, then feel free to add this label to an issue. If the issue is the latter type, please be careful about the language you use in these threads. For example, things like "this code sucks!" or "you must be an idiot!" are unacceptable!. Programmers have feelings too and there are ways to suggest code changes without insulting people!
__label__no The CreateCommentInput type contains some parameters that allow us to executethe mutation. These are:
__label__no - We want the array to always be defined, if empty, we return and empty array (i.e. []).
__label__sc <type>(<scope>): <subject><BLANK LINE><body><BLANK LINE><footer>
__label__dc We require that all contributions meet at least the following guidelines:
__label__no Feature requests are welcome. But take a moment to find out whether your ideafits with the scope and aims of the project. It's up to you to make a strongcase to convince the project's developers of the merits of this feature. Pleaseprovide as much detail and context as possible.
__label__no - Do your best to follow these guidelines but don't be afraid to make mistakes when trying to apply them. We are all novices in the beginning.
__label__dc Style Guide
__label__no Tips for a creating a great issue report
__label__bw 1.  Fork the project, clone your fork,and configure the remotes:
__label__no New code example here
__label__dc - Keep it simple! ?
__label__sc The easiest way to run the tests is by using docker & docker-compose as explained above.
__label__dc - Always use soft tabs (2 spaces), never hard tabs.
__label__dc This project uses redux for its state management. If you have not used redux before it is worth getting familiar with it.
__label__no Submitting a PR
__label__dc We want the software to have decent performance for typical users.Our goal is interaction in 1 second or less after making a request.Don't send megabytes of data for a request(seeThe Website Obesity Crisis).Use caching (at the server, CDN, and user side) to improve performancein typical cases (while avoiding making the code too complicated).Moving all the JavaScripts to a long-lived cached page, for example,means that the user only needs to load that page once.See the "other tools" list below for some tools to help measure performance.There's always a trade-off between various attributes, in particular,don't make performance so fast that the software is hard to maintain.Instead, work to get "reasonable" performance in typical cases.
__label__no - Any other unique aspects of your environment
__label__sc 4.  Add some descriptions and refer relative issues for you PR.
__label__no - PHP Version (php -v),
__label__no Cube.js Client
__label__no There are a few categories of contribution so we'll go through them individually.
__label__dc - Remember that we follow SemVer. If you are changing the behaviour, or the public api, you may need to update the docs.
__label__bw You should see an output similar to this.
__label__sc - If the PR was not ready for review and inactive for > 30 days, we will close it due to inactivity. The author is welcome to re-open and update.
__label__sc # Inside your own copy of `apexcharts.js` package...git checkout --branch feature/branch-name-here upstream/master# Then hack away, and commit your changes:git add -Agit commit -m "Few words about the changes I did"# Push your local changes back to your forkgit push --set-upstream origin feature/branch-name-here
__label__cf On GitHub
__label__no If you are experiencing unexpected behavior and, after having read Interactor'sdocumentation, are convinced this behavior is a bug, please:
__label__sc Describe your changes in imperative mood, e.g. "make xyzzy do frotz"instead of "[This commit] makes xyzzy do frotz" or "[I] changed xyzzyto do frotz", as if you are giving orders to the codebase to changeits behaviour.
__label__bw Now update your .env file to reflect the new database:
__label__no import { t, tn } from '@superset-ui/translation';
__label__no - reproducible: has enough information to very easily reproduce, mostly in form of a small project in a GitHub repo
__label__no - Improving Documentation
__label__no This way the history in the master branch will be free of smallcorrections and easier to follow for people who arenproject on a day-to-day basis.
__label__no - Conservative decisions patterned after CPython's conservative decisions with stability in mind
__label__no Our primary shipping vehicle is operating system specific packages that includes all the requirements of Chef. The packages are built with our Omnibus packing project.
__label__dc Contributing to new add-ons
__label__no * @param  \Closure|string|null  $concrete
__label__tc Please note we have a code of conduct, please follow it in all your interactions with the project.
__label__no Opinionated implementations: There are many ways to interface with AWS Services. Certain service interactions are favored over others. For instance, if sending and receiving JSON, we would prefer an API Gateway endpoint to other mechanisms. Amplify will programmatically help optimize for cost and performance through library decisions.
__label__sc Summary
__label__sc When a new version is ready to be released, please create a pull request to merge development into master, named something like "Release 10.0". Then we can have some final discussion before we merge it into master and push the release out to the public.
__label__tc Get Involved in the Community
__label__sc To the extent possible, include a section (like below) in the integration test file that specifies how the successfullydeployed stack can be verified for correctness. Correctness here implies that the resources have been set up correctly.The steps here are usually AWS CLI commands but they need not be.
__label__dc - Snippet descriptions must be short and to the point. Explain what the snippet does and detail how the snippet works and the language features used in it.
__label__no - Git
__label__no Change-type: patchConnects-to: #90
__label__bw Error: Missing binding /cypress/packages/desktop-gui/node_modules/node-sass/vendor/linux-x64-48/binding.nodeNode Sass could not find a binding for your current environment: Linux 64-bit with Node.js 6.x
__label__bw git fetch upstream
__label__no New Features
__label__no - Are You In the Right Place?
__label__sc Rollback Packages
__label__no - Related Repositories
__label__bw # Install dependencies from `package-lock.json`npm ci
__label__cf Address code review comments by committing changes and pushing them to your featurebranch.
__label__bw Building, testing, and packing use all the standard dotnet commands:
__label__no - blocked issues need help getting unstuck
__label__cf - Try to avoid changes unrelated to the PR (formatting, new language features, etc.)
__label__no Thank you for your interest in contributing to XState! This project is made possible by contributors like you, and we welcome any contributions to the code base and the documentation.
__label__ct 9.  If you are working on the SDK, make sure to check out the Makefile for someof the common tasks that we have to do.
__label__no - Your exact FW specification (ROM, AOS API, etc.)
__label__sc - Fill out the Pull Request Template completely within the body of the PR. If you feel some areas are not relevant add N/A as opposed to deleting those sections. PR's will not be reviewed if this template is not filled in.
__label__dc The command line interface extension / module is in the folder cli and should be considered and optional add-on. Other modules shouldn't rely on it's existence or absence.
__label__no Unsupported Releases
__label__sc - Consider starting the commit message with an applicable emoji:
__label__no About to create a new Github Issue?
__label__cf 2.  Click Edit Page GitHub button.
__label__bw 5.  Run git fetch upstream
__label__sc PLUGINS ONLY: If your plugin is not licensed under the Apache License 2.0, then it must be compatible and marked as such. This is only valid for the plugins included within the Cuberite source; plugins developed on separate repositories can use whatever license they want.
__label__sc $ sudo -u postgres createuser you_username --createdb$ createdb -O peertube peertube_test{1,2,3}
__label__no This will generate a file in migrations/version/{SHA}_this_will_be_in_the_migration_filename.py.
__label__no - Submission Guidelines
__label__no 2.  Create a non-virtual function with the old name that calls the new function.
__label__no First, THANK YOU.
__label__no Finally, to make changes to the rst files and build the docs using Sphinx,you'll need to install a handful of dependencies from the repo you cloned:
__label__no - Make sure CHANGELOG.md is updated with the upcoming version number, and hasentries for all fixes.
__label__bw Setting up for local development
__label__no Your suggestions, comments and comments on Doris can be made directly through GitHub's [Issues] (https://github.com/apache/incubator-doris/issues/new/selection).
__label__sc rspec
__label__cf Make sure you have a GitHub account.
__label__cf - Versioning (doc/design/versioning.md)
__label__no Then add other types of labels as appropriate.
__label__ct Required knowledge: Docker, Ansible, Apache, Nginx, MySQL, PHP-FPM
__label__no Enforcement
__label__no If you feel you must post an issue about performance, please post a complete example that illustrates the exact case youfeel should be better optimized.
__label__sc To create a patch from changes in your local directory:
__label__bw Make sure you have Bash installed per the Environment setup in theREADME.
__label__no - Testing
__label__no - Search existing pull requests and issues to be sure it hasn't already been reported. If you have additional information to provide about an existing issue then please comment on that issue. If you simply want to express your support then use the Reactions feature.
__label__cf 3.  Perform required code changes.
__label__no Happy coding!
__label__sc 1.  Use the command git log to identify how many commits you made since you began.
__label__no - Running checkstyle
__label__sc git rebase master -igit push -f
__label__dc - PSR-1: Basic coding standard
__label__no - Contact the interested parties: The PR's author and the engineer who merged the work should both be contacted and informed of the revert.
__label__no - Let us know which version of Boden you used when you found the issue. If you've downloaded a release, please specify the release version, e.g. "v0.3". If you've cloned the boden git repository, please provide your current HEAD commit hash. (You can retrieve the current HEAD commit hash by executing git rev-parse HEAD in your local working tree.)
__label__no Please search for existing issues before creating new ones.
__label__no - Pull Requests
__label__tc We aim to keep all project discussion inside GitHub issues. This is to make sure valuable discussion is accessible via search. If you have questions about how to use the library, or how the project is running - GitHub issues are the goto tool for this project.
__label__dc They can also be executed independently of the build script. From the root of a specific package (e.g.packages/@aws-cdk/aws-ec2), run the following command to execute all the linters on that package -
__label__sc Each CHANGELOG entry that corresponds to a published package will have a timestamp. If no entry exists without a timestamp, you must first create a new one:
__label__sc - Provide convincing reason to add this feature. Ideally you should open a suggestion issue first and have it greenlighted before working on it.
__label__cf 2.  Link your GitHub account to your Assembly account in your profile settings.
__label__sc - docs: Documentation only changes
__label__no - Adding Dependencies
__label__cf Development process
__label__sc - More covered below in the Prepare commits section.
